<?xml version='1.1' encoding='UTF-8' standalone='yes'?>
<!--
 Copyright (c) 2005-2007 UAB "MAKSINETA".
 All rights reserved. This program and the accompanying materials
 are made available under the terms of the Common Public License Version 1.0
 which accompanies this distribution, and is available at
 http://www.eclipse.org/legal/cpl-v10.html
 
 Contributors:
     "Maxim Kizub" mkizub@symade.com - initial design and implementation
-->
<a-node class='kiev.vlang.FileUnit'>
 <name>stx-fmt\syntax-for-java.xml</name>
 <pkg>
  <a-node class='kiev.vlang.types.TypeNameRef'>
   <ident>stx-fmt</ident>
  </a-node>
 </pkg>
 <members>
  <a-node class='kiev.vlang.Import'>
   <name>
    <a-node class='kiev.vlang.SymbolRef'>
     <name>kiev&#31;vlang</name>
     <qualified>true</qualified>
    </a-node>
   </name>
   <mode>IMPORT_CLASS</mode>
   <star>true</star>
   <of_method>false</of_method>
  </a-node>
  <a-node class='kiev.vlang.Import'>
   <name>
    <a-node class='kiev.vlang.SymbolRef'>
     <name>kiev&#31;vlang&#31;types</name>
     <qualified>true</qualified>
    </a-node>
   </name>
   <mode>IMPORT_CLASS</mode>
   <star>true</star>
   <of_method>false</of_method>
  </a-node>
  <a-node class='kiev.vlang.Import'>
   <name>
    <a-node class='kiev.vlang.SymbolRef'>
     <name>kiev&#31;parser</name>
     <qualified>true</qualified>
    </a-node>
   </name>
   <mode>IMPORT_CLASS</mode>
   <star>true</star>
   <of_method>false</of_method>
  </a-node>
  <a-node class='kiev.vlang.Import'>
   <name>
    <a-node class='kiev.vlang.SymbolRef'>
     <name>kiev&#31;fmt</name>
     <qualified>true</qualified>
    </a-node>
   </name>
   <mode>IMPORT_CLASS</mode>
   <star>true</star>
   <of_method>false</of_method>
  </a-node>
  <a-node class='kiev.fmt.KievTextSyntax'>
   <members>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_SPACE</kind>
     <text_size>1</text_size>
     <pixel_size>4</pixel_size>
     <sname>sp</sname>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_SPACE</kind>
     <text_size>1</text_size>
     <pixel_size>4</pixel_size>
     <sname>sp-sepr</sname>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_SPACE</kind>
     <text_size>1</text_size>
     <pixel_size>4</pixel_size>
     <sname>sp-word</sname>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_SPACE</kind>
     <text_size>1</text_size>
     <pixel_size>2</pixel_size>
     <sname>sp-oper</sname>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>1</text_size>
     <pixel_size>1</pixel_size>
     <sname>nl</sname>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>2</text_size>
     <pixel_size>20</pixel_size>
     <sname>nl-group</sname>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>1</text_size>
     <pixel_size>1</pixel_size>
     <sname>nl-block</sname>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>1</text_size>
     <pixel_size>1</pixel_size>
     <sname>nl-block-if</sname>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>2</text_size>
     <pixel_size>20</pixel_size>
     <sname>nl-block-group</sname>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>1</text_size>
     <pixel_size>1</pixel_size>
     <sname>nl-else</sname>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>2</text_size>
     <pixel_size>20</pixel_size>
     <sname>nl-import-group</sname>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>2</text_size>
     <pixel_size>20</pixel_size>
     <sname>nl-field-group</sname>
    </a-node>
    <a-node class='kiev.fmt.ParagraphLayout'>
     <indent_text_size>2</indent_text_size>
     <indent_pixel_size>20</indent_pixel_size>
     <indent_from_current_position>false</indent_from_current_position>
     <align_right>false</align_right>
     <align_rest_of_lines_right>false</align_rest_of_lines_right>
     <new_lines_first_parent>false</new_lines_first_parent>
     <sname>par-indented</sname>
    </a-node>
    <a-node class='kiev.fmt.ParagraphLayoutBlock'>
     <token_text>{</token_text>
     <indent_text_size>2</indent_text_size>
     <indent_pixel_size>20</indent_pixel_size>
     <indent_from_current_position>false</indent_from_current_position>
     <align_right>false</align_right>
     <align_rest_of_lines_right>false</align_rest_of_lines_right>
     <new_lines_first_parent>false</new_lines_first_parent>
     <sname>par-indented-block</sname>
    </a-node>
    <a-node class='kiev.fmt.ParagraphLayoutBlock'>
     <token_text>{ if</token_text>
     <indent_text_size>2</indent_text_size>
     <indent_pixel_size>20</indent_pixel_size>
     <indent_from_current_position>false</indent_from_current_position>
     <align_right>false</align_right>
     <align_rest_of_lines_right>false</align_rest_of_lines_right>
     <new_lines_first_parent>false</new_lines_first_parent>
     <sname>par-indented-block-if</sname>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>0</rgb_color>
     <sname>color-default</sname>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>0</rgb_color>
     <sname>color-black</sname>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>255</rgb_color>
     <sname>color-blue</sname>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>127</rgb_color>
     <sname>color-blue-dark</sname>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>65280</rgb_color>
     <sname>color-green</sname>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>32768</rgb_color>
     <sname>color-green-dark</sname>
    </a-node>
    <a-node class='kiev.fmt.DrawFont'>
     <font_name>Dialog-PLAIN-12</font_name>
     <sname>font-default</sname>
    </a-node>
    <a-node class='kiev.fmt.DrawFont'>
     <font_name>Dialog-PLAIN-12</font_name>
     <sname>font-plain</sname>
    </a-node>
    <a-node class='kiev.fmt.DrawFont'>
     <font_name>Dialog-BOLD-12</font_name>
     <sname>font-bold</sname>
    </a-node>
    <a-node class='kiev.fmt.DrawFont'>
     <font_name>Dialog-ITALIC-12</font_name>
     <sname>font-italic</sname>
    </a-node>
    <a-node class='kiev.fmt.DrawFont'>
     <font_name>Dialog-BOLDITALIC-12</font_name>
     <sname>font-bolditalic</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-default</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-default</name>
      </a-node>
     </font>
     <sname>fmt-default</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-blue-dark</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-keyword</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-blue</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-plain</name>
      </a-node>
     </font>
     <sname>fmt-number</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-green-dark</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-string</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-oper</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-plain</name>
      </a-node>
     </font>
     <sname>fmt-operator</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_NOP</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-oper</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-operator-type</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-plain</name>
      </a-node>
     </font>
     <sname>fmt-separator</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_EAT</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_EAT</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_EAT</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-plain</name>
      </a-node>
     </font>
     <sname>fmt-separator-eat-all</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_NOP</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_NOP</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-plain</name>
      </a-node>
     </font>
     <sname>fmt-separator-eat-left</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_EAT</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_EAT</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_EAT</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-plain</name>
      </a-node>
     </font>
     <sname>fmt-separator-eat-right</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_NOP</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-plain</name>
      </a-node>
     </font>
     <sname>fmt-separator-cond-start</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl-block</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-plain</name>
      </a-node>
     </font>
     <sname>fmt-separator-cond-end</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-type-block-start</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-type-block-end</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl-block</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl-block-if</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_NOP</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl-else</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_NOP</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-code-block-start</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl-else</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_EAT</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-code-block-end</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl-block</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl-block-if</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_NOP</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-rule-block-start</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-rule-block-end</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-oper</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-rule-or</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>1</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-oper</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-rule-and</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bolditalic</name>
      </a-node>
     </font>
     <sname>fmt-type</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-blue</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-symbol</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-blue</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-italic</name>
      </a-node>
     </font>
     <sname>fmt-symref</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-oper</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_NOP</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_EAT</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-blue-dark</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-meta</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-oper</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_EAT</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_EAT</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_EAT</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-blue-dark</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-meta-at</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <sname>fmt-meta-end</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_NOP</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-label-semicolon</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <sname>fmt-space-nl</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <sname>fmt-space-nl++</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_NOP</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <sname>fmt-space-sp0</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl-group</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <sname>fmt-space-nl-group</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>1</from_attempt>
      </a-node>
     </spaces>
     <sname>fmt-space-nl++1</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl-else</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_NOP</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-blue-dark</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-keyword-if</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl-else</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_NOP</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-blue-dark</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <sname>fmt-keyword-else</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>FileUnit</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>pkg</name>
         <in_syntax>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>syntax-file-package</name>
          </a-node>
         </in_syntax>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeNameRef</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxPlaceHolder'>
           <text>&lt;package&gt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-space-nl-group</name>
            </a-node>
           </fmt>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunctions'>
             <funcs>
              <a-node class='kiev.fmt.SyntaxFunction'>
               <title>Add package</title>
               <act>kiev.gui.NewElemHere$Factory</act>
               <attr>pkg</attr>
              </a-node>
             </funcs>
            </a-node>
           </funcs>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-space-nl</name>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <folded_by_default>false</folded_by_default>
         <name>members</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Import</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Opdef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeAssign</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeConstr</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeDecl</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Struct</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxPlaceHolder'>
           <text>&lt;declarations&gt;</text>
          </a-node>
         </empty>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-file-unit</sname>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>TypeNameRef</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>package</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxNode'>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSpace'>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-space-nl-group</name>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-typename</sname>
      </a-node>
     </members>
     <sname>syntax-file-package</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxJavaExprTemplate'>
     <l_paren>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>(</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-separator-eat-right</name>
        </a-node>
       </fmt>
      </a-node>
     </l_paren>
     <r_paren>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>)</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-separator-eat-left</name>
        </a-node>
       </fmt>
      </a-node>
     </r_paren>
     <operators>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>(</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-separator-eat-right</name>
        </a-node>
       </fmt>
      </a-node>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>)</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-separator-eat-left</name>
        </a-node>
       </fmt>
      </a-node>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>instanceof</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-keyword</name>
        </a-node>
       </fmt>
      </a-node>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>$cast</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-keyword</name>
        </a-node>
       </fmt>
      </a-node>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>$reinterp</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-keyword</name>
        </a-node>
       </fmt>
      </a-node>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>DEFAULT</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-operator</name>
        </a-node>
       </fmt>
      </a-node>
     </operators>
     <elem>
      <a-node class='kiev.fmt.SyntaxNode'>
      </a-node>
     </elem>
     <sname>java-expr-template</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxJavaExprTemplate'>
     <l_paren>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>(</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-separator-eat-right</name>
        </a-node>
       </fmt>
      </a-node>
     </l_paren>
     <r_paren>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>)</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-separator-eat-left</name>
        </a-node>
       </fmt>
      </a-node>
     </r_paren>
     <operators>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>DEFAULT</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-operator-type</name>
        </a-node>
       </fmt>
      </a-node>
     </operators>
     <elem>
      <a-node class='kiev.fmt.SyntaxNode'>
      </a-node>
     </elem>
     <sname>java-type-expr-template</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxJavaCommentTemplate'>
     <newline>
      <a-node class='kiev.fmt.SyntaxSpace'>
      </a-node>
     </newline>
     <lin_beg>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>//</text>
      </a-node>
     </lin_beg>
     <doc_beg>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>/**</text>
      </a-node>
     </doc_beg>
     <cmt_beg>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>/*</text>
      </a-node>
     </cmt_beg>
     <cmt_end>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>*/</text>
      </a-node>
     </cmt_end>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>text</name>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-space-nl</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>java-comment-template</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxIdentTemplate'>
     <regexp_ok>.*</regexp_ok>
     <elem>
      <a-node class='kiev.fmt.SyntaxNode'>
      </a-node>
     </elem>
     <sname>ident-template-no-escape</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxIdentTemplate'>
     <regexp_ok>[\p{Alpha}$_][\p{Alnum}$_]*</regexp_ok>
     <esc_prefix>#id&quot;</esc_prefix>
     <esc_suffix>&quot;#</esc_suffix>
     <keywords>
      <a-node class='kiev.vlang.ConstStringExpr'>
       <value>abstract</value>
      </a-node>
      <a-node class='kiev.vlang.ConstStringExpr'>
       <value>final</value>
      </a-node>
      <a-node class='kiev.vlang.ConstStringExpr'>
       <value>static</value>
      </a-node>
      <a-node class='kiev.vlang.ConstStringExpr'>
       <value>transient</value>
      </a-node>
      <a-node class='kiev.vlang.ConstStringExpr'>
       <value>synchronized</value>
      </a-node>
      <a-node class='kiev.vlang.ConstStringExpr'>
       <value>null</value>
      </a-node>
     </keywords>
     <elem>
      <a-node class='kiev.fmt.SyntaxNode'>
      </a-node>
     </elem>
     <sname>ident-template</sname>
    </a-node>
    <a-node class='kiev.fmt.PartialSyntaxElemDecl'>
     <elem>
      <a-node class='kiev.fmt.SyntaxSpace'>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-space-sp0</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-nothing</sname>
    </a-node>
    <a-node class='kiev.fmt.PartialSyntaxElemDecl'>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>{</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-type-block-start</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-type-block-start</sname>
    </a-node>
    <a-node class='kiev.fmt.PartialSyntaxElemDecl'>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>}</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-type-block-end</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-type-block-end</sname>
    </a-node>
    <a-node class='kiev.fmt.PartialSyntaxElemDecl'>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
        </a-node>
       </element>
       <separator>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>,</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-left</name>
          </a-node>
         </fmt>
        </a-node>
       </separator>
       <prefix>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>extends</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
       </prefix>
       <folded_by_default>false</folded_by_default>
       <name>super_types</name>
       <empty>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-nothing</name>
          </a-node>
         </decl>
         <text>extends &lt;type&gt;</text>
        </a-node>
       </empty>
      </a-node>
     </elem>
     <sname>stx-type-extends</sname>
    </a-node>
    <a-node class='kiev.fmt.PartialSyntaxElemDecl'>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-space-nl</name>
          </a-node>
         </fmt>
        </a-node>
       </element>
       <prefix>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-type-block-start</name>
          </a-node>
         </decl>
         <text>{</text>
        </a-node>
       </prefix>
       <sufix>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-type-block-end</name>
          </a-node>
         </decl>
         <text>}</text>
        </a-node>
       </sufix>
       <filter>
        <a-node class='kiev.fmt.CalcOptionNot'>
         <opt>
          <a-node class='kiev.fmt.CalcOptionHasMeta'>
           <name>kiev&#31;stdlib&#31;meta&#31;synthetic</name>
          </a-node>
         </opt>
        </a-node>
       </filter>
       <elpar>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>par-indented</name>
        </a-node>
       </elpar>
       <folded_by_default>false</folded_by_default>
       <name>members</name>
       <expected_types>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MethodImpl</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>RuleMethod</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Initializer</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Constructor</name>
        </a-node>
       </expected_types>
       <empty>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{}</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-type-block-end</name>
          </a-node>
         </fmt>
        </a-node>
       </empty>
      </a-node>
     </elem>
     <sname>stx-type-members</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Import</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>import</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
         <funcs>
          <a-node class='kiev.fmt.SyntaxFunctions'>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Change import kind</title>
             <act>kiev.gui.ChooseItemEditor</act>
             <attr>mode</attr>
            </a-node>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Import All</title>
             <act>kiev.gui.ChooseItemEditor</act>
             <attr>star</attr>
            </a-node>
           </funcs>
          </a-node>
         </funcs>
        </a-node>
        <a-node class='kiev.fmt.SyntaxEnumChoice'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSpace'>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>static</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>package</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>syntax</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <name>mode</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template-no-escape</name>
          </a-node>
         </decl>
         <name>name</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxEnumChoice'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSpace'>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
            </a-node>
           </separator>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>(</text>
            </a-node>
           </prefix>
           <sufix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>)</text>
            </a-node>
           </sufix>
           <folded_by_default>false</folded_by_default>
           <name>args</name>
          </a-node>
         </elements>
         <name>of_method</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxEnumChoice'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSpace'>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>.*</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <name>star</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-import</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Opdef</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>operator</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxStrAttr'>
         <name>decl</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>,</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>prior</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-number</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-opdef</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeOpDef</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>typedef</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>arg</name>
         <in_syntax>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>syntax-type-args</name>
          </a-node>
         </in_syntax>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>op</name>
         <in_syntax>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>syntax-type-args</name>
          </a-node>
         </in_syntax>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-type-op-def</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeAssign</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>typedef</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>=</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-operator</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type_ref</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeNameRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeExpr</name>
          </a-node>
         </expected_types>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-type-assign</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeConstr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>typedef</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
         <funcs>
          <a-node class='kiev.fmt.SyntaxFunctions'>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add metadata</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>meta.metas</attr>
            </a-node>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add type: extends</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>super_types</attr>
            </a-node>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add type: super</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>lower_bound</attr>
            </a-node>
           </funcs>
          </a-node>
         </funcs>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>≤</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-operator</name>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxNode'>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </element>
         <folded_by_default>false</folded_by_default>
         <name>super_types</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeNameRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeExpr</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;super_types&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>≥</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-operator</name>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxNode'>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </element>
         <folded_by_default>false</folded_by_default>
         <name>lower_bound</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeNameRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeExpr</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;lower_bounds&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-type-constr</sname>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>ASTOperator</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>ident</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-operator-type</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>std-ast-operator</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>TypeAssign</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-type-assign</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>TypeConstr</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>sname</name>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </fmt>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunctions'>
             <funcs>
              <a-node class='kiev.fmt.SyntaxFunction'>
               <title>Add types: extends</title>
               <act>kiev.gui.FuncNewElemOfEmptyList</act>
               <attr>super_types</attr>
              </a-node>
              <a-node class='kiev.fmt.SyntaxFunction'>
               <title>Add types: super</title>
               <act>kiev.gui.FuncNewElemOfEmptyList</act>
               <attr>lower_bound</attr>
              </a-node>
             </funcs>
            </a-node>
           </funcs>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-for-java</name>
              </a-node>
             </in_syntax>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>extends</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </fmt>
            </a-node>
           </prefix>
           <folded_by_default>false</folded_by_default>
           <name>super_types</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeRef</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeNameRef</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeExpr</name>
            </a-node>
           </expected_types>
           <empty>
            <a-node class='kiev.fmt.SyntaxElemRef'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>stx-nothing</name>
              </a-node>
             </decl>
             <text>extends &lt;types&gt;</text>
            </a-node>
           </empty>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-for-java</name>
              </a-node>
             </in_syntax>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>super</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </fmt>
            </a-node>
           </prefix>
           <folded_by_default>false</folded_by_default>
           <name>lower_bound</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeRef</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeNameRef</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeExpr</name>
            </a-node>
           </expected_types>
           <empty>
            <a-node class='kiev.fmt.SyntaxElemRef'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>stx-nothing</name>
              </a-node>
             </decl>
             <text>super &lt;types&gt;</text>
            </a-node>
           </empty>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-type-constr</sname>
      </a-node>
     </members>
     <sname>syntax-type-args</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaTypeDecl</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>metatype</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
         <funcs>
          <a-node class='kiev.fmt.SyntaxFunctions'>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add arguments</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>args</attr>
            </a-node>
           </funcs>
          </a-node>
         </funcs>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-type-args</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-left</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeConstr</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;args&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-type-extends</name>
          </a-node>
         </decl>
         <text>extends &lt;type&gt;</text>
        </a-node>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-type-members</name>
          </a-node>
         </decl>
         <text>{ members }</text>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-typedecl</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>JavaEnum</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>enum</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-type-block-start</name>
          </a-node>
         </decl>
         <text>{</text>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>group</name>
         <in_syntax>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>syntax-java-struct-enum</name>
          </a-node>
         </in_syntax>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-for-java</name>
              </a-node>
             </in_syntax>
            </a-node>
           </element>
           <filter>
            <a-node class='kiev.fmt.CalcOptionNot'>
             <opt>
              <a-node class='kiev.fmt.CalcOptionHasMeta'>
               <name>kiev&#31;stdlib&#31;meta&#31;synthetic</name>
              </a-node>
             </opt>
            </a-node>
           </filter>
           <folded_by_default>false</folded_by_default>
           <name>members</name>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text> </text>
            </a-node>
           </empty>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
        </a-node>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-type-block-end</name>
          </a-node>
         </decl>
         <text>}</text>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-enum</sname>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>DeclGroupEnumFields</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-decl-group-enum-fields</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
          </a-node>
         </separator>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>decls</name>
        </a-node>
       </elem>
       <sname>stx-decl-group-enums</sname>
      </a-node>
      <a-node class='kiev.fmt.TextSyntax'>
       <members>
        <a-node class='kiev.fmt.SyntaxElemDecl'>
         <rnode>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Field</name>
          </a-node>
         </rnode>
         <elem>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>meta</name>
            </a-node>
            <a-node class='kiev.fmt.SyntaxIdentAttr'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>ident-template</name>
              </a-node>
             </decl>
             <name>sname</name>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxOptional'>
             <calculator>
              <a-node class='kiev.fmt.CalcOptionNotNull'>
               <name>alt enum id</name>
              </a-node>
             </calculator>
             <opt_true>
              <a-node class='kiev.fmt.SyntaxSet'>
               <elements>
                <a-node class='kiev.fmt.SyntaxToken'>
                 <text>:</text>
                 <fmt>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-operator</name>
                  </a-node>
                 </fmt>
                </a-node>
                <a-node class='kiev.fmt.SyntaxSubAttr'>
                 <name>alt enum id</name>
                </a-node>
               </elements>
               <folded_by_default>false</folded_by_default>
              </a-node>
             </opt_true>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </elem>
         <sname>stx-decl-field-enum</sname>
        </a-node>
       </members>
       <sname>syntax-decl-group-enum-fields</sname>
      </a-node>
     </members>
     <sname>syntax-java-struct-enum</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>PizzaCase</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>case</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
         <funcs>
          <a-node class='kiev.fmt.SyntaxFunctions'>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add arguments</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>args</attr>
            </a-node>
           </funcs>
          </a-node>
         </funcs>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-type-args</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-left</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeConstr</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;args&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNot'>
           <opt>
            <a-node class='kiev.fmt.CalcOptionHasMeta'>
             <name>kiev&#31;stdlib&#31;meta&#31;singleton</name>
            </a-node>
           </opt>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>group</name>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-java-case</name>
            </a-node>
           </in_syntax>
          </a-node>
         </opt_true>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-left</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-struct-case</sname>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>DeclGroupCaseFields</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-java-case</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-left</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>decls</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Field</name>
          </a-node>
         </expected_types>
        </a-node>
       </elem>
       <sname>stx-decl-group-case-fields</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Field</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>vtype</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>sname</name>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-decl-field</sname>
      </a-node>
     </members>
     <sname>syntax-java-case</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>KievSyntax</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>syntax</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-type-extends</name>
          </a-node>
         </decl>
         <text>extends &lt;type&gt;</text>
        </a-node>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-type-members</name>
          </a-node>
         </decl>
         <text>{ members }</text>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-struct-syntax</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>KievView</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>view</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
         <funcs>
          <a-node class='kiev.fmt.SyntaxFunctions'>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add arguments</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>args</attr>
            </a-node>
           </funcs>
          </a-node>
         </funcs>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-type-args</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-left</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeNameRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeExpr</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;args&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>of</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>view_of</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-type-extends</name>
          </a-node>
         </decl>
         <text>extends &lt;type&gt;</text>
        </a-node>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-type-members</name>
          </a-node>
         </decl>
         <text>{ members }</text>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-struct-view</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>JavaAnnotation</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@interface</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-type-members</name>
          </a-node>
         </decl>
         <text>{ members }</text>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-struct-annotation</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>JavaInterface</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>interface</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
         <funcs>
          <a-node class='kiev.fmt.SyntaxFunctions'>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add arguments</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>args</attr>
            </a-node>
           </funcs>
          </a-node>
         </funcs>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-type-args</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-left</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeNameRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeExpr</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;args&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-type-extends</name>
          </a-node>
         </decl>
         <text>extends &lt;type&gt;</text>
        </a-node>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-type-members</name>
          </a-node>
         </decl>
         <text>{ members }</text>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-struct-interface</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>JavaClass</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>class</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
         <funcs>
          <a-node class='kiev.fmt.SyntaxFunctions'>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add arguments</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>args</attr>
            </a-node>
           </funcs>
          </a-node>
         </funcs>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-type-args</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-left</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeConstr</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;args&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-type-extends</name>
          </a-node>
         </decl>
         <text>extends &lt;type&gt;</text>
        </a-node>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-type-members</name>
          </a-node>
         </decl>
         <text>{ members }</text>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-struct-class</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>JavaAnonymouseClass</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxElemRef'>
       <decl>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>stx-type-members</name>
        </a-node>
       </decl>
       <text>{ members }</text>
      </a-node>
     </elem>
     <sname>stx-decl-struct-anonymouse</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Field</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>vtype</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-types-TypeRef</name>
          </a-node>
         </expected_types>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <funcs>
          <a-node class='kiev.fmt.SyntaxFunctions'>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add metadata</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>meta.metas</attr>
            </a-node>
           </funcs>
          </a-node>
         </funcs>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionAnd'>
           <opts>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>init</name>
            </a-node>
            <a-node class='kiev.fmt.CalcOptionNot'>
             <opt>
              <a-node class='kiev.fmt.CalcOptionIsHidden'>
               <name>init</name>
              </a-node>
             </opt>
            </a-node>
           </opts>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>=</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-operator</name>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxJavaExpr'>
             <idx>-1</idx>
             <priority>5</priority>
             <template>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>java-expr-template</name>
              </a-node>
             </template>
             <name>init</name>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </opt_true>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-field</sname>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>LVar</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>vtype</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-types-TypeRef</name>
            </a-node>
           </expected_types>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>stype</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>:</text>
               <fmt>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxSubAttr'>
               <name>stype</name>
               <expected_types>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>stx-types-TypeRef</name>
                </a-node>
               </expected_types>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
            </a-node>
           </opt_true>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>sname</name>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </fmt>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunctions'>
             <funcs>
              <a-node class='kiev.fmt.SyntaxFunction'>
               <title>Add metadata</title>
               <act>kiev.gui.FuncNewElemOfEmptyList</act>
               <attr>meta.metas</attr>
              </a-node>
             </funcs>
            </a-node>
           </funcs>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-decl-var</sname>
      </a-node>
     </members>
     <sname>syntax-java-decl-formpars</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxExpectedTemplate'>
     <expected_types>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeRef</name>
      </a-node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeNameRef</name>
      </a-node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeExpr</name>
      </a-node>
     </expected_types>
     <elem>
      <a-node class='kiev.fmt.SyntaxNode'>
      </a-node>
     </elem>
     <sname>stx-types-TypeRef</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MethodImpl</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-type-args</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-right</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-left</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>targs</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeConstr</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;targs&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type_ret</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-types-TypeRef</name>
          </a-node>
         </expected_types>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
         <funcs>
          <a-node class='kiev.fmt.SyntaxFunctions'>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add metadata</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>meta.metas</attr>
            </a-node>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add type decls</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>targs</attr>
            </a-node>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add aliases</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>aliases</attr>
            </a-node>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add condition</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>conditions</attr>
            </a-node>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add body</title>
             <act>kiev.gui.FuncNewElemOfNull</act>
             <attr>body</attr>
            </a-node>
           </funcs>
          </a-node>
         </funcs>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-java-decl-formpars</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <filter>
          <a-node class='kiev.fmt.CalcOptionNot'>
           <opt>
            <a-node class='kiev.fmt.CalcOptionHasMeta'>
             <name>kiev&#31;stdlib&#31;meta&#31;synthetic</name>
            </a-node>
           </opt>
          </a-node>
         </filter>
         <folded_by_default>false</folded_by_default>
         <name>params</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>LVar</name>
          </a-node>
         </expected_types>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-java-alias</name>
            </a-node>
           </in_syntax>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-space-nl++1</name>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <elpar>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </elpar>
         <folded_by_default>false</folded_by_default>
         <name>aliases</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Symbol</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ASTOperatorAlias</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;aliases&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-space-nl++1</name>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <elpar>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </elpar>
         <folded_by_default>false</folded_by_default>
         <name>conditions</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>WBCCondition</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;conditions&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>body</name>
         <in_syntax>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-java-method-body</name>
          </a-node>
         </in_syntax>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Block</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </empty>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-method</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleMethod</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-type-args</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-right</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-left</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>targs</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeConstr</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;targs&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>rule</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
         <funcs>
          <a-node class='kiev.fmt.SyntaxFunctions'>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add metadata</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>meta.metas</attr>
            </a-node>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add type decls</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>targs</attr>
            </a-node>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add aliases</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>aliases</attr>
            </a-node>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add local var</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>localvars</attr>
            </a-node>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add condition</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>conditions</attr>
            </a-node>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add body</title>
             <act>kiev.gui.FuncNewElemOfNull</act>
             <attr>body</attr>
            </a-node>
           </funcs>
          </a-node>
         </funcs>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-java-decl-formpars</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <filter>
          <a-node class='kiev.fmt.CalcOptionNot'>
           <opt>
            <a-node class='kiev.fmt.CalcOptionHasMeta'>
             <name>kiev&#31;stdlib&#31;meta&#31;synthetic</name>
            </a-node>
           </opt>
          </a-node>
         </filter>
         <folded_by_default>false</folded_by_default>
         <name>params</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>LVar</name>
          </a-node>
         </expected_types>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-java-alias</name>
            </a-node>
           </in_syntax>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-space-nl++1</name>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <elpar>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </elpar>
         <folded_by_default>false</folded_by_default>
         <name>aliases</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Symbol</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ASTOperatorAlias</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;aliases&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
          </a-node>
         </element>
         <folded_by_default>false</folded_by_default>
         <name>localvars</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>LVar</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;localvars&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-space-nl++1</name>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <elpar>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </elpar>
         <folded_by_default>false</folded_by_default>
         <name>conditions</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>WBCCondition</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;conditions&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>body</name>
         <in_syntax>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-java-method-body</name>
          </a-node>
         </in_syntax>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>RuleBlock</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </empty>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-rule-method</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Constructor</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-type-args</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-right</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-left</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>targs</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeConstr</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;targs&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
         <funcs>
          <a-node class='kiev.fmt.SyntaxFunctions'>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add metadata</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>meta.metas</attr>
            </a-node>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add type decls</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>targs</attr>
            </a-node>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add condition</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>conditions</attr>
            </a-node>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add body</title>
             <act>kiev.gui.FuncNewElemOfNull</act>
             <attr>body</attr>
            </a-node>
           </funcs>
          </a-node>
         </funcs>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-java-decl-formpars</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <filter>
          <a-node class='kiev.fmt.CalcOptionNot'>
           <opt>
            <a-node class='kiev.fmt.CalcOptionHasMeta'>
             <name>kiev&#31;stdlib&#31;meta&#31;synthetic</name>
            </a-node>
           </opt>
          </a-node>
         </filter>
         <folded_by_default>false</folded_by_default>
         <name>params</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>LVar</name>
          </a-node>
         </expected_types>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-space-nl++1</name>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <elpar>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </elpar>
         <folded_by_default>false</folded_by_default>
         <name>conditions</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>WBCCondition</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;conditions&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>body</name>
         <in_syntax>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-java-method-body</name>
          </a-node>
         </in_syntax>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Block</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </empty>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-constructor</sname>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CoreExpr</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>continue</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxStrAttr'>
           <name>ident</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-core-expr</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaValueScalar</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>default</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>value</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-meta-scalar-value</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaValueArray</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>default</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>{</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </fmt>
            </a-node>
           </prefix>
           <sufix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>}</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </fmt>
            </a-node>
           </sufix>
           <folded_by_default>false</folded_by_default>
           <name>values</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-meta-array-value</sname>
      </a-node>
     </members>
     <sname>stx-java-method-body</sname>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Symbol</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>alias</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>sname</name>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-decl-alias-name</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>ASTOperatorAlias</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>alias</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>operator</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxStrAttr'>
           <name>sname</name>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-decl-alias-operator</sname>
      </a-node>
     </members>
     <sname>syntax-java-alias</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Initializer</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>body</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Block</name>
          </a-node>
         </expected_types>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-initializer</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>WBCCondition</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxEnumChoice'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>error</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>require</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>ensure</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>invariant</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <name>cond</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>sname</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>[</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxIdentAttr'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>ident-template</name>
              </a-node>
             </decl>
             <name>sname</name>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>]</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </opt_true>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>body</name>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-wbc-condition</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaSet</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
         <in_syntax>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>syntax-java-meta</name>
          </a-node>
         </in_syntax>
        </a-node>
       </element>
       <folded_by_default>false</folded_by_default>
       <name>metas</name>
       <expected_types>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>UserMeta</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaUnerasable</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaSingleton</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaForward</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaVirtual</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaMacro</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaStatic</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaAbstract</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaFinal</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaBridge</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaVolatile</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaNative</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaSynchronized</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaTransient</name>
        </a-node>
       </expected_types>
       <empty>
        <a-node class='kiev.fmt.SyntaxElemRef'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-nothing</name>
          </a-node>
         </decl>
         <text>&lt;metadata&gt;</text>
        </a-node>
       </empty>
      </a-node>
     </elem>
     <sname>stx-meta-set</sname>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaAccess</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxJavaAccess'>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-meta</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-meta-access</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaUnerasable</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@unerasable</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-meta</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-meta-unerasable</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaSingleton</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@singleton</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-meta</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-meta-singleton</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaForward</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@forward</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-meta</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-meta-forward</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaVirtual</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@virtual</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-meta</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-meta-virtual</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaMacro</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@macro</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-meta</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-meta-macro</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaStatic</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@static</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-meta</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-meta-static</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaAbstract</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@abstract</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-meta</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-meta-abstract</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaFinal</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@final</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-meta</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-meta-final</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaNative</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@native</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-meta</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-meta-native</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaSynchronized</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@synchronized</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-meta</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-meta-synchronized</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaTransient</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@transient</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-meta</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-meta-transient</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaVolatile</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@volatile</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-meta</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-meta-volatile</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaBridge</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@bridge</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-meta</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-meta-bridge</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaVarArgs</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@varargs</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-meta</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-meta-varargs</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaSynthetic</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@synthetic</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-meta</name>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <sname>stx-meta-synthetic</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaThrows</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>@throws</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-meta</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>(</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </fmt>
            </a-node>
           </prefix>
           <sufix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>)</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-left</name>
              </a-node>
             </fmt>
            </a-node>
           </sufix>
           <folded_by_default>false</folded_by_default>
           <name>exceptions</name>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-meta-throws</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaPacked</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>@packed:</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-meta</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>size</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>fld</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>offset</name>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-meta-packed</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaUUID</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>@uuid</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-meta</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxStrAttr'>
           <name>value</name>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-left</name>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-meta-uuid</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>UserMeta</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>@</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-meta-at</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>decl</name>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-meta</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotEmpty'>
             <name>values</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>(</text>
               <fmt>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxList'>
               <element>
                <a-node class='kiev.fmt.SyntaxNode'>
                </a-node>
               </element>
               <separator>
                <a-node class='kiev.fmt.SyntaxToken'>
                 <text>,</text>
                 <fmt>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-separator</name>
                  </a-node>
                 </fmt>
                </a-node>
               </separator>
               <folded_by_default>false</folded_by_default>
               <name>values</name>
               <expected_types>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>MetaValueScalar</name>
                </a-node>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>MetaValueArray</name>
                </a-node>
               </expected_types>
               <empty>
                <a-node class='kiev.fmt.SyntaxToken'>
                 <text>&lt;?values?&gt;</text>
                </a-node>
               </empty>
              </a-node>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>)</text>
               <fmt>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-left</name>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxSpace'>
               <fmt>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-meta-end</name>
                </a-node>
               </fmt>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
            </a-node>
           </opt_true>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-meta-user-def</sname>
      </a-node>
     </members>
     <sname>syntax-java-meta</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaValueScalar</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>ident</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>=</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-operator</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>value</name>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-meta-scalar-value</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaValueArray</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>ident</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>=</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-operator</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>values</name>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-meta-array-value</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeRef</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxIdentAttr'>
       <decl>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>ident-template</name>
        </a-node>
       </decl>
       <name>ident</name>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-type</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-type-ref</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeNameRef</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>outer</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>outer</name>
            </a-node>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>.</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </opt_true>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>ident</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-type</name>
          </a-node>
         </fmt>
         <funcs>
          <a-node class='kiev.fmt.SyntaxFunctions'>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add type argument</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>args</attr>
            </a-node>
           </funcs>
          </a-node>
         </funcs>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeNameRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeExpr</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;nothing&gt;</text>
          </a-node>
         </empty>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-type-name-ref</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeClosureRef</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)-&gt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>ret</name>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-type-closure-ref</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-type-expr-template</name>
        </a-node>
       </template>
       <name></name>
      </a-node>
     </elem>
     <sname>stx-type-expr</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeDeclRef</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSpace'>
      </a-node>
     </elem>
     <sname>stx-type-decl-ref</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Block</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-space-nl++</name>
          </a-node>
         </fmt>
        </a-node>
       </element>
       <prefix>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-code-block-start</name>
          </a-node>
         </fmt>
        </a-node>
       </prefix>
       <sufix>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>}</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-code-block-end</name>
          </a-node>
         </fmt>
        </a-node>
       </sufix>
       <elpar>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>par-indented</name>
        </a-node>
       </elpar>
       <folded_by_default>false</folded_by_default>
       <name>stats</name>
       <empty>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{}</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-code-block-start</name>
          </a-node>
         </fmt>
        </a-node>
       </empty>
      </a-node>
     </elem>
     <sname>stx-block</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RewriteMatch</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <element>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxNode'>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-space-nl++</name>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
        </a-node>
       </element>
       <prefix>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-code-block-start</name>
          </a-node>
         </fmt>
        </a-node>
       </prefix>
       <sufix>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>}</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-code-block-end</name>
          </a-node>
         </fmt>
        </a-node>
       </sufix>
       <folded_by_default>false</folded_by_default>
       <name>cases</name>
      </a-node>
     </elem>
     <sname>stx-rwr-match</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleBlock</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-code-block-start</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>rnode</name>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>}</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-code-block-end</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-rule-block</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleOrExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-rule-block-start</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxParagraphLayout'>
             <elem>
              <a-node class='kiev.fmt.SyntaxNode'>
              </a-node>
             </elem>
             <par>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>par-indented</name>
              </a-node>
             </par>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>;</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-rule-or</name>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <folded_by_default>false</folded_by_default>
           <name>rules</name>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?rules?&gt;</text>
            </a-node>
           </empty>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>}</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-rule-block-end</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-rule-expr-or</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleAndExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-rule-and</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <folded_by_default>false</folded_by_default>
         <name>rules</name>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;?rules?&gt;</text>
          </a-node>
         </empty>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-rule-expr-and</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleIsoneofExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
      </a-node>
     </elem>
     <sname>stx-rule-is-one-of</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleIstheExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
      </a-node>
     </elem>
     <sname>stx-rule-is-the</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleCutExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>$cut</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-keyword</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-rule-cut</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleCallExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>5</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>obj</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>.</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>ident</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-left</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-rule-call-expr</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleWhileExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>while</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>1</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>expr</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>bt_expr</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>:</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxJavaExpr'>
             <idx>-1</idx>
             <priority>1</priority>
             <template>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>java-expr-template</name>
              </a-node>
             </template>
             <name>bt_expr</name>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </opt_true>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-rule-expr-while</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>1</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>expr</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>bt_expr</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>:</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxJavaExpr'>
             <idx>-1</idx>
             <priority>1</priority>
             <template>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>java-expr-template</name>
              </a-node>
             </template>
             <name>bt_expr</name>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </opt_true>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-rule-expr</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ThisExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>this</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-keyword</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-expr-this</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SuperExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>super</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-keyword</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-expr-super</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>OuterThisAccessExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>outer</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>.</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>this</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-expr-this-outer</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>AccessExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>240</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>obj</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>.</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>ident</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symref</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-expr-access</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>IFldExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaAccessExpr'>
       <obj_elem>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>240</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>obj</name>
        </a-node>
       </obj_elem>
       <separator>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>.</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
       </separator>
       <fld_elem>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>ident</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symref</name>
          </a-node>
         </fmt>
        </a-node>
       </fld_elem>
      </a-node>
     </elem>
     <sname>stx-expr-ifld</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SFldExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaAccessExpr'>
       <obj_elem>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>obj</name>
        </a-node>
       </obj_elem>
       <separator>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>.</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
       </separator>
       <fld_elem>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>ident</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symref</name>
          </a-node>
         </fmt>
        </a-node>
       </fld_elem>
      </a-node>
     </elem>
     <sname>stx-expr-sfld</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>LVarExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxIdentAttr'>
       <decl>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>ident-template</name>
        </a-node>
       </decl>
       <name>ident</name>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-symref</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-expr-lvar</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ContainerAccessExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>230</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>obj</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>[</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>index</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>]</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-expr-container</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeClassExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>.</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>class</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-expr-class</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeInfoExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>.</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>type</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-expr-typeinfo</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CallExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaAccessExpr'>
       <obj_elem>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>240</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>obj</name>
        </a-node>
       </obj_elem>
       <separator>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>.</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
       </separator>
       <fld_elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>ident</name>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symref</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-left</name>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>(</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </fmt>
            </a-node>
           </prefix>
           <sufix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>)</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-left</name>
              </a-node>
             </fmt>
            </a-node>
           </sufix>
           <folded_by_default>false</folded_by_default>
           <name>args</name>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </fld_elem>
      </a-node>
     </elem>
     <sname>stx-expr-call</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CtorCallExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>obj</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ThisExpr</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SuperExpr</name>
          </a-node>
         </expected_types>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-left</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-expr-call-ctor</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ClosureCallExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>240</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>expr</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-left</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-expr-call-closure</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>StringConcatExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <element>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>100</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>this</name>
        </a-node>
       </element>
       <separator>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>+</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-operator</name>
          </a-node>
         </fmt>
        </a-node>
       </separator>
       <folded_by_default>false</folded_by_default>
       <name>args</name>
       <empty>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>&lt;?strings?&gt;</text>
        </a-node>
       </empty>
      </a-node>
     </elem>
     <sname>stx-expr-concat</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CommaExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <element>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>1</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>this</name>
        </a-node>
       </element>
       <separator>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>,</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator</name>
          </a-node>
         </fmt>
        </a-node>
       </separator>
       <folded_by_default>false</folded_by_default>
       <name>exprs</name>
       <empty>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>&lt;?exprs?&gt;</text>
        </a-node>
       </empty>
      </a-node>
     </elem>
     <sname>stx-expr-comma</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>NewExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>outer</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxJavaExpr'>
             <idx>-1</idx>
             <priority>240</priority>
             <template>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>java-expr-template</name>
              </a-node>
             </template>
             <name>outer</name>
            </a-node>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>.</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </opt_true>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>new</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text> </text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>clazz</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>clazz</name>
          </a-node>
         </opt_true>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-expr-new</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>NewArrayExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>new</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>[</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxNode'>
            </a-node>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>]</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </element>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>[]</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </empty>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-expr-new-array</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>NewInitializedArrayExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>new</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{}</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </empty>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-expr-new-array-init</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>NewClosure</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>fun</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-java-decl-formpars</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)-&gt;</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>params</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type_ret</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>body</name>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-expr-new-closure</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>IncrementExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
      </a-node>
     </elem>
     <sname>stx-expr-incr</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>UnaryExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
      </a-node>
     </elem>
     <sname>stx-expr-unary</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>BinaryExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
      </a-node>
     </elem>
     <sname>stx-expr-binary</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>AssignExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
      </a-node>
     </elem>
     <sname>stx-expr-assign</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>BooleanNotExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
      </a-node>
     </elem>
     <sname>stx-expr-bool-not</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>BinaryBoolExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
      </a-node>
     </elem>
     <sname>stx-expr-bool-binary</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>BinaryBooleanAndExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
      </a-node>
     </elem>
     <sname>stx-expr-bool-and</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>BinaryBooleanOrExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
      </a-node>
     </elem>
     <sname>stx-expr-bool-or</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>InstanceofExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
      </a-node>
     </elem>
     <sname>stx-expr-instanceof</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CastExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
      </a-node>
     </elem>
     <sname>stx-expr-cast</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ReinterpExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
      </a-node>
     </elem>
     <sname>stx-expr-reinterp</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConditionalExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
      </a-node>
     </elem>
     <sname>stx-expr-conditional</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Label</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxIdentAttr'>
       <decl>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>ident-template</name>
        </a-node>
       </decl>
       <name>sname</name>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-symbol</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-label</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CaseLabel</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>val</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>case</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>val</name>
            </a-node>
            <a-node class='kiev.fmt.SyntaxOptional'>
             <calculator>
              <a-node class='kiev.fmt.CalcOptionNotEmpty'>
               <name>pattern</name>
              </a-node>
             </calculator>
             <opt_true>
              <a-node class='kiev.fmt.SyntaxSet'>
               <elements>
                <a-node class='kiev.fmt.SyntaxToken'>
                 <text>(</text>
                 <fmt>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-separator</name>
                  </a-node>
                 </fmt>
                </a-node>
                <a-node class='kiev.fmt.SyntaxList'>
                 <element>
                  <a-node class='kiev.fmt.SyntaxNode'>
                   <in_syntax>
                    <a-node class='kiev.vlang.SymbolRef'>
                     <name>syntax-java-decl-simple</name>
                    </a-node>
                   </in_syntax>
                  </a-node>
                 </element>
                 <separator>
                  <a-node class='kiev.fmt.SyntaxToken'>
                   <text>,</text>
                   <fmt>
                    <a-node class='kiev.vlang.SymbolRef'>
                     <name>fmt-separator</name>
                    </a-node>
                   </fmt>
                  </a-node>
                 </separator>
                 <folded_by_default>false</folded_by_default>
                 <name>pattern</name>
                </a-node>
                <a-node class='kiev.fmt.SyntaxToken'>
                 <text>)</text>
                 <fmt>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-separator</name>
                  </a-node>
                 </fmt>
                </a-node>
               </elements>
               <folded_by_default>false</folded_by_default>
              </a-node>
             </opt_true>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </opt_true>
         <opt_false>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>default</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
         </opt_false>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>:</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-label-semicolon</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-space-nl++</name>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <elpar>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </elpar>
         <folded_by_default>false</folded_by_default>
         <name>stats</name>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text> </text>
          </a-node>
         </empty>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-case-label</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CatchInfo</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>catch</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-start</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>arg</name>
         <in_syntax>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>syntax-java-decl-simple</name>
          </a-node>
         </in_syntax>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-end</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>body</name>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented-block</name>
          </a-node>
         </par>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-catch</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>FinallyInfo</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>finally</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>body</name>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented-block</name>
          </a-node>
         </par>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-finally</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Shadow</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>node</name>
      </a-node>
     </elem>
     <sname>stx-shadow</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>AssertEnabledExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>$assertionsEnabled</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-keyword</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-expr-assert-enabled</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>NopExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSpace'>
      </a-node>
     </elem>
     <sname>stx-expr-nop</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Comment</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaComment'>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-comment-template</name>
        </a-node>
       </template>
      </a-node>
     </elem>
     <sname>stx-comment</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>LVar</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>vtype</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>stx-types-TypeRef</name>
          </a-node>
         </expected_types>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
         <funcs>
          <a-node class='kiev.fmt.SyntaxFunctions'>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunction'>
             <title>Add metadata</title>
             <act>kiev.gui.FuncNewElemOfEmptyList</act>
             <attr>meta.metas</attr>
            </a-node>
           </funcs>
          </a-node>
         </funcs>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>init</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>=</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-operator</name>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>init</name>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </opt_true>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-var</sname>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>LVar</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>vtype</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-types-TypeRef</name>
            </a-node>
           </expected_types>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>sname</name>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </fmt>
           <funcs>
            <a-node class='kiev.fmt.SyntaxFunctions'>
             <funcs>
              <a-node class='kiev.fmt.SyntaxFunction'>
               <title>Add metadata</title>
               <act>kiev.gui.FuncNewElemOfEmptyList</act>
               <attr>meta.metas</attr>
              </a-node>
             </funcs>
            </a-node>
           </funcs>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-decl-var</sname>
      </a-node>
     </members>
     <sname>syntax-java-decl-simple</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>DeclGroupEnumFields</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSpace'>
      </a-node>
     </elem>
     <sname>stx-decl-group-enum-fields</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>DeclGroupCaseFields</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSpace'>
      </a-node>
     </elem>
     <sname>stx-decl-group-case-fields</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>DeclGroupFields</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxNode'>
         <in_syntax>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>syntax-java-decl-group</name>
          </a-node>
         </in_syntax>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-left</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-group</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>DeclGroupVars</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxNode'>
         <in_syntax>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>syntax-java-decl-group</name>
          </a-node>
         </in_syntax>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-left</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-decl-group</sname>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>DeclGroupFields</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>dtype</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-decl-group</name>
              </a-node>
             </in_syntax>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-left</name>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <folded_by_default>false</folded_by_default>
           <name>decls</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>Var</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>Field</name>
            </a-node>
           </expected_types>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?decls?&gt;</text>
            </a-node>
           </empty>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-decl-group</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>DeclGroupVars</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>dtype</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-decl-group</name>
              </a-node>
             </in_syntax>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-left</name>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <folded_by_default>false</folded_by_default>
           <name>decls</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>Var</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>Field</name>
            </a-node>
           </expected_types>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?decls?&gt;</text>
            </a-node>
           </empty>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-decl-group</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>LVar</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>sname</name>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>vtype</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>init</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>=</text>
               <fmt>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-operator</name>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxSubAttr'>
               <name>init</name>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
            </a-node>
           </opt_true>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-decl-var</sname>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Field</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>sname</name>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>vtype</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>init</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>=</text>
               <fmt>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-operator</name>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxSubAttr'>
               <name>init</name>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
            </a-node>
           </opt_true>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </elem>
       <sname>stx-decl-field</sname>
      </a-node>
     </members>
     <sname>syntax-java-decl-group</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Shadow</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>node</name>
      </a-node>
     </elem>
     <sname>stx-shadow</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ExprStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>expr</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>expr</name>
          </a-node>
         </opt_true>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-expr</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ReturnStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>return</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>expr</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>expr</name>
          </a-node>
         </opt_true>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-return</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ThrowStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>throw</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>expr</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-throw</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CondStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>cond</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>message</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>:</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>message</name>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </opt_true>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-cond</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>LabeledStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>lbl</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>:</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-label-semicolon</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>stat</name>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-labeled</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>BreakStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>break</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>ident</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>ident</name>
          </a-node>
         </opt_true>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-break</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ContinueStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>continue</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>ident</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>ident</name>
          </a-node>
         </opt_true>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-continue</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>GotoStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>goto</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>ident</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-goto-label</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>GotoCaseStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>goto</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>expr</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>case</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>expr</name>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </opt_true>
         <opt_false>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>default</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </fmt>
          </a-node>
         </opt_false>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-goto-case</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>IfElseStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>if</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword-if</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-start</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>cond</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-end</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>thenSt</name>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented-block</name>
          </a-node>
         </par>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>elseSt</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>else</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword-else</name>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxParagraphLayout'>
             <elem>
              <a-node class='kiev.fmt.SyntaxSubAttr'>
               <name>elseSt</name>
              </a-node>
             </elem>
             <par>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>par-indented-block-if</name>
              </a-node>
             </par>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </opt_true>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-if-else</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>IfElseRewr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>if#</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword-if</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-start</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>cond</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-end</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>thenSt</name>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented-block</name>
          </a-node>
         </par>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>elseSt</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>else</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword-else</name>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxParagraphLayout'>
             <elem>
              <a-node class='kiev.fmt.SyntaxSubAttr'>
               <name>elseSt</name>
              </a-node>
             </elem>
             <par>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>par-indented-block-if</name>
              </a-node>
             </par>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </opt_true>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-if-else</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>WhileStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>while</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-start</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>cond</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-end</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>body</name>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented-block</name>
          </a-node>
         </par>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-while</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>DoWhileStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>do</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>body</name>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented-block</name>
          </a-node>
         </par>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>while</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-start</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>cond</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>);</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-do-while</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ForStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>for</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-start</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>init</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>init</name>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-java-decl-group</name>
            </a-node>
           </in_syntax>
          </a-node>
         </opt_true>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>cond</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>cond</name>
          </a-node>
         </opt_true>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>iter</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>iter</name>
          </a-node>
         </opt_true>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-end</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>body</name>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented-block</name>
          </a-node>
         </par>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-for</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ForEachStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>foreach</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-start</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>var</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>var</name>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-for-java</name>
            </a-node>
           </in_syntax>
          </a-node>
         </opt_true>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>container</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>cond</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>;</text>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>cond</name>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
          </a-node>
         </opt_true>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-end</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>body</name>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented-block</name>
          </a-node>
         </par>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-foreach</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SwitchStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>switch</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-start</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>sel</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-end</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-code-block-start</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
          </a-node>
         </element>
         <folded_by_default>false</folded_by_default>
         <name>cases</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>CaseLabel</name>
          </a-node>
         </expected_types>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>}</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-code-block-end</name>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-switch</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TryStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>try</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>body</name>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented-block</name>
          </a-node>
         </par>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
          </a-node>
         </element>
         <folded_by_default>false</folded_by_default>
         <name>catchers</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>CatchInfo</name>
          </a-node>
         </expected_types>
         <empty>
          <a-node class='kiev.fmt.SyntaxElemRef'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>stx-nothing</name>
            </a-node>
           </decl>
           <text>&lt;catchers&gt;</text>
          </a-node>
         </empty>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>finally_catcher</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>finally_catcher</name>
          </a-node>
         </opt_true>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-try</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SynchronizedStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>synchronized</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-start</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>expr</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-end</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>body</name>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented-block</name>
          </a-node>
         </par>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-synchronized</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>WithStat</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>with</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-start</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>expr</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-cond-end</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>body</name>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented-block</name>
          </a-node>
         </par>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-stat-with</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RewriteCase</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>case</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>var</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>RewritePattern</name>
          </a-node>
         </expected_types>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>:</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <fmt>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-space-nl++</name>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <folded_by_default>false</folded_by_default>
           <name>stats</name>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?stats?&gt;</text>
            </a-node>
           </empty>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-rwr-case</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RewritePattern</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>vtype</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>vars</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>RewritePattern</name>
          </a-node>
         </expected_types>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-rwr-pattern</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RewriteNodeFactory</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>new#</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>ident</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>RewriteNodeArg</name>
          </a-node>
         </expected_types>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-rwr-factory</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RewriteNodeArg</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>attr</name>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symref</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>=</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-operator</name>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>node</name>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-rwr-arg</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RewriteNodeArgArray</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
        </a-node>
       </element>
       <separator>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>,</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator</name>
          </a-node>
         </fmt>
        </a-node>
       </separator>
       <prefix>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
       </prefix>
       <sufix>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>}</text>
         <fmt>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-all</name>
          </a-node>
         </fmt>
        </a-node>
       </sufix>
       <folded_by_default>false</folded_by_default>
       <name>args</name>
      </a-node>
     </elem>
     <sname>stx-rwr-arg-array</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstBoolExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-keyword</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-const-bool</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstNullExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>null</text>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-keyword</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-const-null</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstStringExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxStrAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-string</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-const-str</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstCharExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxCharAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-string</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-const-char</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstByteExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-number</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-const-byte</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstShortExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-number</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-const-short</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstIntExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-number</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-const-int</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstLongExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-number</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-const-long</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstFloatExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-number</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-const-float</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstDoubleExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>fmt-number</name>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <sname>stx-const-double</sname>
    </a-node>
   </members>
   <sname>syntax-for-java</sname>
  </a-node>
 </members>
</a-node>
<?xml version='1.0' encoding='UTF-8'?>
<a-node class='kiev.vlang.FileUnit'>
 <pkg>
  <a-node class='kiev.vlang.types.TypeNameRef'>
   <ident>
    <a-node class='kiev.vlang.SymbolRef'>
     <name>stx-fmt</name>
    </a-node>
   </ident>
  </a-node>
 </pkg>
 <members>
  <a-node class='kiev.vlang.Import'>
   <name>
    <a-node class='kiev.vlang.SymbolRef'>
     <name>kiev.vlang</name>
    </a-node>
   </name>
   <mode>IMPORT_CLASS</mode>
   <star>true</star>
  </a-node>
  <a-node class='kiev.vlang.Import'>
   <name>
    <a-node class='kiev.vlang.SymbolRef'>
     <name>kiev.vlang.types</name>
    </a-node>
   </name>
   <mode>IMPORT_CLASS</mode>
   <star>true</star>
  </a-node>
  <a-node class='kiev.vlang.Import'>
   <name>
    <a-node class='kiev.vlang.SymbolRef'>
     <name>kiev.parser</name>
    </a-node>
   </name>
   <mode>IMPORT_CLASS</mode>
   <star>true</star>
  </a-node>
  <a-node class='kiev.vlang.Import'>
   <name>
    <a-node class='kiev.vlang.SymbolRef'>
     <name>kiev.fmt</name>
    </a-node>
   </name>
   <mode>IMPORT_CLASS</mode>
   <star>true</star>
  </a-node>
  <a-node class='kiev.fmt.KievTextSyntax'>
   <members>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_SPACE</kind>
     <text_size>1</text_size>
     <pixel_size>4</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>sp</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_SPACE</kind>
     <text_size>1</text_size>
     <pixel_size>4</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>sp-sepr</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_SPACE</kind>
     <text_size>1</text_size>
     <pixel_size>4</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>sp-word</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_SPACE</kind>
     <text_size>1</text_size>
     <pixel_size>2</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>sp-oper</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>1</text_size>
     <pixel_size>1</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>nl</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>2</text_size>
     <pixel_size>20</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>nl-group</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>1</text_size>
     <pixel_size>1</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>nl-block</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>1</text_size>
     <pixel_size>1</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>nl-block-if</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>2</text_size>
     <pixel_size>20</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>nl-block-group</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>2</text_size>
     <pixel_size>20</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>nl-import-group</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>2</text_size>
     <pixel_size>20</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>nl-field-group</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.ParagraphLayout'>
     <indent_text_size>2</indent_text_size>
     <indent_pixel_size>20</indent_pixel_size>
     <indent_first_line_text_size>0</indent_first_line_text_size>
     <indent_first_line_pixel_size>0</indent_first_line_pixel_size>
     <indent_from_current_position>false</indent_from_current_position>
     <align_right>false</align_right>
     <align_rest_of_lines_right>false</align_rest_of_lines_right>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>par-indented</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.ParagraphLayoutBlock'>
     <token_text>{</token_text>
     <indent_text_size>2</indent_text_size>
     <indent_pixel_size>20</indent_pixel_size>
     <indent_first_line_text_size>0</indent_first_line_text_size>
     <indent_first_line_pixel_size>0</indent_first_line_pixel_size>
     <indent_from_current_position>false</indent_from_current_position>
     <align_right>false</align_right>
     <align_rest_of_lines_right>false</align_rest_of_lines_right>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>par-indented-block</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.ParagraphLayoutBlock'>
     <token_text>{ if</token_text>
     <indent_text_size>2</indent_text_size>
     <indent_pixel_size>20</indent_pixel_size>
     <indent_first_line_text_size>0</indent_first_line_text_size>
     <indent_first_line_pixel_size>0</indent_first_line_pixel_size>
     <indent_from_current_position>false</indent_from_current_position>
     <align_right>false</align_right>
     <align_rest_of_lines_right>false</align_rest_of_lines_right>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>par-indented-block-if</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>0</rgb_color>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>default-color</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>0</rgb_color>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>color-black</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>255</rgb_color>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>color-blue</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>127</rgb_color>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>color-blue-dark</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>65280</rgb_color>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>color-green</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>32768</rgb_color>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>color-green-dark</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawFont'>
     <font_name>Dialog-PLAIN-12</font_name>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>default-font</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawFont'>
     <font_name>Dialog-PLAIN-12</font_name>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>font-plain</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawFont'>
     <font_name>Dialog-BOLD-12</font_name>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>font-bold</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawFont'>
     <font_name>Dialog-ITALIC-12</font_name>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>font-italic</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawFont'>
     <font_name>Dialog-BOLDITALIC-12</font_name>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>font-bolditalic</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>default-color</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>default-font</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-default</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-blue-dark</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-keyword</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-blue</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-plain</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-number</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-green-dark</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-string</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-oper</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-plain</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-operator</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_NOP</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-oper</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-operator-type</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-plain</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-separator</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_EAT</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_EAT</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-plain</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-separator-eat-all</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_NOP</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_EAT</action_before>
       <action_after>SP_NOP</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-plain</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-separator-eat-left</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_EAT</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-sepr</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_EAT</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-plain</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-separator-eat-right</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_NOP</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-plain</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-separator-cond-start</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>nl-block</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-plain</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-separator-cond-end</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bolditalic</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-type</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-blue</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-bold</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-symbol</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp-word</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-blue</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-italic</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-symref</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>FileUnit</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>pkg</name>
         <in_syntax>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>syntax-file-package</name>
          </a-node>
         </in_syntax>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;?members?&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <folded_by_default>false</folded_by_default>
         <name>members</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Import</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Opdef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeAssign</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeConstr</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeDecl</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Struct</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl</name>
            </a-node>
           </si>
           <action_before>SP_NOP</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-file-unit</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>TypeNameRef</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>package</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl-group</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-typename</sname>
        </a-node>
       </id>
      </a-node>
     </members>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>syntax-file-package</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxJavaExprTemplate'>
     <l_paren>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>(</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-right</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </l_paren>
     <r_paren>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>)</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-left</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </r_paren>
     <operators>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>(</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-right</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>)</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-left</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>instanceof</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>$cast</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>$reinterp</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>DEFAULT</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-operator</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </operators>
     <elem>
      <a-node class='kiev.fmt.SyntaxNode'>
       <name></name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>java-expr-template</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxJavaExprTemplate'>
     <l_paren>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>(</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-right</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </l_paren>
     <r_paren>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>)</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-separator-eat-left</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </r_paren>
     <operators>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>DEFAULT</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-operator-type</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </operators>
     <elem>
      <a-node class='kiev.fmt.SyntaxNode'>
       <name></name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>java-type-expr-template</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxJavaCommentTemplate'>
     <newline>
      <a-node class='kiev.fmt.SyntaxSpace'>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl</name>
            </a-node>
           </si>
           <action_before>SP_NOP</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </newline>
     <lin_beg>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>//</text>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>sp</name>
            </a-node>
           </si>
           <action_before>SP_ADD</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </lin_beg>
     <doc_beg>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>/**</text>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>sp</name>
            </a-node>
           </si>
           <action_before>SP_ADD</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl</name>
            </a-node>
           </si>
           <action_before>SP_ADD</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </doc_beg>
     <cmt_beg>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>/*</text>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>sp</name>
            </a-node>
           </si>
           <action_before>SP_ADD</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </cmt_beg>
     <cmt_end>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>*/</text>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>sp</name>
            </a-node>
           </si>
           <action_before>SP_ADD</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl</name>
            </a-node>
           </si>
           <action_before>SP_EAT</action_before>
           <action_after>SP_NOP</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </cmt_end>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>text</name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl</name>
            </a-node>
           </si>
           <action_before>SP_NOP</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>java-comment-template</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Import</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>import</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxEnumChoice'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSpace'>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>true</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>static</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>package</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>syntax</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <name>mode</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>name</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionTrue'>
           <name>star</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>.*</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl</name>
            </a-node>
           </si>
           <action_before>SP_ADD</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl-import-group</name>
            </a-node>
           </si>
           <action_before>SP_EAT</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-import</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Opdef</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>operator</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxStrAttr'>
         <name>decl</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>,</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>prior</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-number</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl</name>
            </a-node>
           </si>
           <action_before>SP_ADD</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-opdef</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeAssign</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>typedef</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>=</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-operator</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type_ref</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl</name>
            </a-node>
           </si>
           <action_before>SP_ADD</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-type-assign</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeConstr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>typedef</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>≤</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-operator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;?upper-bounds?&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>true</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <folded_by_default>false</folded_by_default>
         <name>super_types</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeNameRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeExpr</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>≥</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-operator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;?lower-bounds?&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>true</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <folded_by_default>false</folded_by_default>
         <name>lower_bound</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeNameRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeExpr</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl</name>
            </a-node>
           </si>
           <action_before>SP_ADD</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-type-constr</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>TypeConstr</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>id</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-for-java</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>extends &lt;?types?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>extends</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-keyword</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </prefix>
           <folded_by_default>false</folded_by_default>
           <name>super_types</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeRef</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeNameRef</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeExpr</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-for-java</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>super &lt;?types?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>super</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-keyword</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </prefix>
           <folded_by_default>false</folded_by_default>
           <name>lower_bound</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeRef</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeNameRef</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeExpr</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-type-constr</sname>
        </a-node>
       </id>
      </a-node>
     </members>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>syntax-type-args</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeDecl</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>metatype</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-type-args</name>
            </a-node>
           </in_syntax>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;?args?&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>true</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-left</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeNameRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeExpr</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotEmpty'>
           <name>super_types</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>extends</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-keyword</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxList'>
             <element>
              <a-node class='kiev.fmt.SyntaxNode'>
               <name></name>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </element>
             <separator>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>,</text>
               <fmt>
                <a-node class='kiev.fmt.RefElemFormat'>
                 <decl>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-separator</name>
                  </a-node>
                 </decl>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </separator>
             <folded_by_default>false</folded_by_default>
             <name>super_types</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <opt_false>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>extends &lt;?type?&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_false>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{</text>
         <fmt>
          <a-node class='kiev.fmt.FullElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <color>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>color-black</name>
            </a-node>
           </color>
           <font>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>font-bold</name>
            </a-node>
           </font>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-for-java</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text> </text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <filter>
            <a-node class='kiev.fmt.CalcOptionNot'>
             <opt>
              <a-node class='kiev.fmt.CalcOptionHasMetaFlag'>
               <name>kiev.stdlib.meta.synthetic</name>
              </a-node>
             </opt>
             <name></name>
            </a-node>
           </filter>
           <folded_by_default>false</folded_by_default>
           <name>members</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>}</text>
         <fmt>
          <a-node class='kiev.fmt.FullElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <color>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>color-black</name>
            </a-node>
           </color>
           <font>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>font-bold</name>
            </a-node>
           </font>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-typedecl</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Struct</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>variant</name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-struct</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>JavaEnum</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>parent</name>
       <in_syntax>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>syntax-java-enum</name>
        </a-node>
       </in_syntax>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-variant-enum</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Struct</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>enum</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>id</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_NOP</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>color-black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>font-bold</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxParagraphLayout'>
           <elem>
            <a-node class='kiev.fmt.SyntaxList'>
             <element>
              <a-node class='kiev.fmt.SyntaxNode'>
               <name></name>
               <in_syntax>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>syntax-for-java</name>
                </a-node>
               </in_syntax>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </element>
             <empty>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text> </text>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </empty>
             <filter>
              <a-node class='kiev.fmt.CalcOptionNot'>
               <opt>
                <a-node class='kiev.fmt.CalcOptionHasMetaFlag'>
                 <name>kiev.stdlib.meta.synthetic</name>
                </a-node>
               </opt>
               <name></name>
              </a-node>
             </filter>
             <folded_by_default>false</folded_by_default>
             <name>members</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elem>
           <par>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>par-indented</name>
            </a-node>
           </par>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>color-black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>font-bold</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-struct</sname>
        </a-node>
       </id>
      </a-node>
     </members>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>syntax-java-enum</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>PizzaCase</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>parent</name>
       <in_syntax>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>syntax-java-case</name>
        </a-node>
       </in_syntax>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-variant-case</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Struct</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>case</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>id</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-type-args</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?args?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </prefix>
           <sufix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-left</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </sufix>
           <folded_by_default>false</folded_by_default>
           <name>args</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeRef</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeNameRef</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeExpr</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNot'>
             <opt>
              <a-node class='kiev.fmt.CalcOptionHasMetaFlag'>
               <name>kiev.stdlib.meta.singleton</name>
              </a-node>
             </opt>
             <name></name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>variant</name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-case</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-left</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl-group</name>
              </a-node>
             </si>
             <action_before>SP_EAT</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-struct</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>PizzaCase</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>group</name>
         <in_syntax>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>syntax-java-case</name>
          </a-node>
         </in_syntax>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-variant-case</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>DeclGroupCaseFields</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-java-case</name>
            </a-node>
           </in_syntax>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_NOP</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>1</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-left</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>decls</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Field</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-group-case-fields</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Field</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>ftype</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>id</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-field</sname>
        </a-node>
       </id>
      </a-node>
     </members>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>syntax-java-case</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>KievSyntax</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>parent</name>
       <in_syntax>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>syntax-java-syntax</name>
        </a-node>
       </in_syntax>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-variant-syntax</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Struct</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>syntax</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>id</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_NOP</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>color-black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>font-bold</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxParagraphLayout'>
           <elem>
            <a-node class='kiev.fmt.SyntaxList'>
             <element>
              <a-node class='kiev.fmt.SyntaxNode'>
               <name></name>
               <in_syntax>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>syntax-for-java</name>
                </a-node>
               </in_syntax>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </element>
             <empty>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text> </text>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </empty>
             <filter>
              <a-node class='kiev.fmt.CalcOptionNot'>
               <opt>
                <a-node class='kiev.fmt.CalcOptionHasMetaFlag'>
                 <name>kiev.stdlib.meta.synthetic</name>
                </a-node>
               </opt>
               <name></name>
              </a-node>
             </filter>
             <folded_by_default>false</folded_by_default>
             <name>members</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elem>
           <par>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>par-indented</name>
            </a-node>
           </par>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>color-black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>font-bold</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-struct</sname>
        </a-node>
       </id>
      </a-node>
     </members>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>syntax-java-syntax</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>KievView</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>parent</name>
       <in_syntax>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>syntax-java-view</name>
        </a-node>
       </in_syntax>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-variant-view</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Struct</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>view</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>id</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-type-args</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?args?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </prefix>
           <sufix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-left</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </sufix>
           <folded_by_default>false</folded_by_default>
           <name>args</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeRef</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeNameRef</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeExpr</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>of</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>view_of</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotEmpty'>
             <name>super_types</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>extends</text>
               <fmt>
                <a-node class='kiev.fmt.RefElemFormat'>
                 <decl>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-keyword</name>
                  </a-node>
                 </decl>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxList'>
               <element>
                <a-node class='kiev.fmt.SyntaxNode'>
                 <name></name>
                 <fmt>
                  <a-node class='kiev.fmt.SimpleElemFormat'>
                   <is_hidden>false</is_hidden>
                  </a-node>
                 </fmt>
                </a-node>
               </element>
               <separator>
                <a-node class='kiev.fmt.SyntaxToken'>
                 <text>,</text>
                 <fmt>
                  <a-node class='kiev.fmt.RefElemFormat'>
                   <decl>
                    <a-node class='kiev.vlang.SymbolRef'>
                     <name>fmt-separator</name>
                    </a-node>
                   </decl>
                   <is_hidden>false</is_hidden>
                  </a-node>
                 </fmt>
                </a-node>
               </separator>
               <folded_by_default>false</folded_by_default>
               <name>super_types</name>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <opt_false>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>extends &lt;?type?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_false>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_NOP</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>color-black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>font-bold</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxParagraphLayout'>
           <elem>
            <a-node class='kiev.fmt.SyntaxList'>
             <element>
              <a-node class='kiev.fmt.SyntaxNode'>
               <name></name>
               <in_syntax>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>syntax-for-java</name>
                </a-node>
               </in_syntax>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </element>
             <empty>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text> </text>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </empty>
             <filter>
              <a-node class='kiev.fmt.CalcOptionNot'>
               <opt>
                <a-node class='kiev.fmt.CalcOptionHasMetaFlag'>
                 <name>kiev.stdlib.meta.synthetic</name>
                </a-node>
               </opt>
               <name></name>
              </a-node>
             </filter>
             <folded_by_default>false</folded_by_default>
             <name>members</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elem>
           <par>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>par-indented</name>
            </a-node>
           </par>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>color-black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>font-bold</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-struct</sname>
        </a-node>
       </id>
      </a-node>
     </members>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>syntax-java-view</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>JavaAnnotation</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>parent</name>
       <in_syntax>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>syntax-java-annotation</name>
        </a-node>
       </in_syntax>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-variant-annotation</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Struct</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>@interface</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>id</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_NOP</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>color-black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>font-bold</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxParagraphLayout'>
           <elem>
            <a-node class='kiev.fmt.SyntaxList'>
             <element>
              <a-node class='kiev.fmt.SyntaxNode'>
               <name></name>
               <in_syntax>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>syntax-for-java</name>
                </a-node>
               </in_syntax>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </element>
             <empty>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text> </text>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </empty>
             <filter>
              <a-node class='kiev.fmt.CalcOptionNot'>
               <opt>
                <a-node class='kiev.fmt.CalcOptionHasMetaFlag'>
                 <name>kiev.stdlib.meta.synthetic</name>
                </a-node>
               </opt>
               <name></name>
              </a-node>
             </filter>
             <folded_by_default>false</folded_by_default>
             <name>members</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elem>
           <par>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>par-indented</name>
            </a-node>
           </par>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>color-black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>font-bold</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-struct</sname>
        </a-node>
       </id>
      </a-node>
     </members>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>syntax-java-annotation</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>JavaInterface</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>parent</name>
       <in_syntax>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>syntax-java-interface</name>
        </a-node>
       </in_syntax>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-variant-interface</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Struct</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>interface</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>id</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-type-args</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?args?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </prefix>
           <sufix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-left</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </sufix>
           <folded_by_default>false</folded_by_default>
           <name>args</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeRef</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeNameRef</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeExpr</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotEmpty'>
             <name>super_types</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>extends</text>
               <fmt>
                <a-node class='kiev.fmt.RefElemFormat'>
                 <decl>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-keyword</name>
                  </a-node>
                 </decl>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxList'>
               <element>
                <a-node class='kiev.fmt.SyntaxNode'>
                 <name></name>
                 <fmt>
                  <a-node class='kiev.fmt.SimpleElemFormat'>
                   <is_hidden>false</is_hidden>
                  </a-node>
                 </fmt>
                </a-node>
               </element>
               <separator>
                <a-node class='kiev.fmt.SyntaxToken'>
                 <text>,</text>
                 <fmt>
                  <a-node class='kiev.fmt.RefElemFormat'>
                   <decl>
                    <a-node class='kiev.vlang.SymbolRef'>
                     <name>fmt-separator</name>
                    </a-node>
                   </decl>
                   <is_hidden>false</is_hidden>
                  </a-node>
                 </fmt>
                </a-node>
               </separator>
               <folded_by_default>false</folded_by_default>
               <name>super_types</name>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <opt_false>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>extends &lt;?type?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_false>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_NOP</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>color-black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>font-bold</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxParagraphLayout'>
           <elem>
            <a-node class='kiev.fmt.SyntaxList'>
             <element>
              <a-node class='kiev.fmt.SyntaxNode'>
               <name></name>
               <in_syntax>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>syntax-for-java</name>
                </a-node>
               </in_syntax>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </element>
             <empty>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text> </text>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </empty>
             <filter>
              <a-node class='kiev.fmt.CalcOptionNot'>
               <opt>
                <a-node class='kiev.fmt.CalcOptionHasMetaFlag'>
                 <name>kiev.stdlib.meta.synthetic</name>
                </a-node>
               </opt>
               <name></name>
              </a-node>
             </filter>
             <folded_by_default>false</folded_by_default>
             <name>members</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elem>
           <par>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>par-indented</name>
            </a-node>
           </par>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>color-black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>font-bold</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-struct</sname>
        </a-node>
       </id>
      </a-node>
     </members>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>syntax-java-interface</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>JavaClass</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>parent</name>
       <in_syntax>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>syntax-java-class</name>
        </a-node>
       </in_syntax>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-variant-interface</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Struct</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>class</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>id</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-type-args</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?args?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </prefix>
           <sufix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-left</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </sufix>
           <folded_by_default>false</folded_by_default>
           <name>args</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeRef</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeNameRef</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TypeExpr</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotEmpty'>
             <name>super_types</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>extends</text>
               <fmt>
                <a-node class='kiev.fmt.RefElemFormat'>
                 <decl>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-keyword</name>
                  </a-node>
                 </decl>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxList'>
               <element>
                <a-node class='kiev.fmt.SyntaxNode'>
                 <name></name>
                 <fmt>
                  <a-node class='kiev.fmt.SimpleElemFormat'>
                   <is_hidden>false</is_hidden>
                  </a-node>
                 </fmt>
                </a-node>
               </element>
               <separator>
                <a-node class='kiev.fmt.SyntaxToken'>
                 <text>,</text>
                 <fmt>
                  <a-node class='kiev.fmt.RefElemFormat'>
                   <decl>
                    <a-node class='kiev.vlang.SymbolRef'>
                     <name>fmt-separator</name>
                    </a-node>
                   </decl>
                   <is_hidden>false</is_hidden>
                  </a-node>
                 </fmt>
                </a-node>
               </separator>
               <folded_by_default>false</folded_by_default>
               <name>super_types</name>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <opt_false>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>extends &lt;?type?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_false>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_NOP</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>color-black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>font-bold</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxParagraphLayout'>
           <elem>
            <a-node class='kiev.fmt.SyntaxList'>
             <element>
              <a-node class='kiev.fmt.SyntaxNode'>
               <name></name>
               <in_syntax>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>syntax-for-java</name>
                </a-node>
               </in_syntax>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </element>
             <empty>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text> </text>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </empty>
             <filter>
              <a-node class='kiev.fmt.CalcOptionNot'>
               <opt>
                <a-node class='kiev.fmt.CalcOptionHasMetaFlag'>
                 <name>kiev.stdlib.meta.synthetic</name>
                </a-node>
               </opt>
               <name></name>
              </a-node>
             </filter>
             <folded_by_default>false</folded_by_default>
             <name>members</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elem>
           <par>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>par-indented</name>
            </a-node>
           </par>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>color-black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>font-bold</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-struct</sname>
        </a-node>
       </id>
      </a-node>
     </members>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>syntax-java-class</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>JavaAnonymouseClass</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>parent</name>
       <in_syntax>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>syntax-java-anonymouse</name>
        </a-node>
       </in_syntax>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-variant-anonymouse</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Struct</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_NOP</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>color-black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>font-bold</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxParagraphLayout'>
           <elem>
            <a-node class='kiev.fmt.SyntaxList'>
             <element>
              <a-node class='kiev.fmt.SyntaxNode'>
               <name></name>
               <in_syntax>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>syntax-for-java</name>
                </a-node>
               </in_syntax>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </element>
             <empty>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text> </text>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </empty>
             <filter>
              <a-node class='kiev.fmt.CalcOptionNot'>
               <opt>
                <a-node class='kiev.fmt.CalcOptionHasMetaFlag'>
                 <name>kiev.stdlib.meta.synthetic</name>
                </a-node>
               </opt>
               <name></name>
              </a-node>
             </filter>
             <folded_by_default>false</folded_by_default>
             <name>members</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elem>
           <par>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>par-indented</name>
            </a-node>
           </par>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>color-black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>font-bold</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-struct</sname>
        </a-node>
       </id>
      </a-node>
     </members>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>syntax-java-anonymouse</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Field</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>ftype</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>init</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>=</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-operator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxJavaExpr'>
             <idx>-1</idx>
             <priority>5</priority>
             <template>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>java-expr-template</name>
              </a-node>
             </template>
             <name>init</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl</name>
            </a-node>
           </si>
           <action_before>SP_ADD</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl-field-group</name>
            </a-node>
           </si>
           <action_before>SP_EAT</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-field</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>FormPar</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>vtype</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>stype</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>:</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>stype</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <opt_false>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>:</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>stype</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>true</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_false>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-formpar</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Method</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-type-args</name>
            </a-node>
           </in_syntax>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;?targs?&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>true</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-right</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-left</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>targs</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeNameRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeExpr</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type_ret</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>params</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>FormPar</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-alias</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?aliases?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>aliases</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?work-by-contract-conditions?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>conditions</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>body</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>body</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <opt_false>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_false>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl-group</name>
            </a-node>
           </si>
           <action_before>SP_NOP</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-method</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CoreMethod</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-type-args</name>
            </a-node>
           </in_syntax>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;?targs?&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>true</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-right</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-left</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>targs</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeNameRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeExpr</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type_ret</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>params</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>FormPar</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-alias</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?aliases?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>aliases</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?work-by-contract-conditions?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>conditions</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>body</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>body</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <opt_false>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_false>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl-group</name>
            </a-node>
           </si>
           <action_before>SP_NOP</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-core-method</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleMethod</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-type-args</name>
            </a-node>
           </in_syntax>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;?targs?&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>true</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-right</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-left</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>targs</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeNameRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeExpr</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>rule</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>params</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>FormPar</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-alias</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?aliases?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>aliases</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?work-by-contract-conditions?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>conditions</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>body</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>body</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <opt_false>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_false>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl-group</name>
            </a-node>
           </si>
           <action_before>SP_NOP</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-rule-method</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Constructor</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-type-args</name>
            </a-node>
           </in_syntax>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;?targs?&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>true</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-right</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-left</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>targs</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeNameRef</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TypeExpr</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>params</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>FormPar</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?work-by-contract-conditions?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>conditions</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>body</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl-group</name>
            </a-node>
           </si>
           <action_before>SP_NOP</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-constructor</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Symbol</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>alias</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>sname</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-alias-name</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>ASTOperatorAlias</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>operator</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxStrAttr'>
           <name>sname</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-alias-operator</sname>
        </a-node>
       </id>
      </a-node>
     </members>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>syntax-java-alias</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Initializer</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>body</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl-group</name>
            </a-node>
           </si>
           <action_before>SP_NOP</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-initializer</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>WBCCondition</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxEnumChoice'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>error</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>require</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>ensure</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>invariant</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <name>cond</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>id</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>[</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxIdentAttr'>
             <name>id</name>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-symbol</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>]</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <opt_false>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>[&lt;?name?&gt;]</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_false>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>body</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-wbc-condition</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaSet</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
         <name></name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </element>
       <empty>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>&lt;?metas?&gt;</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>true</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </empty>
       <folded_by_default>false</folded_by_default>
       <name>metas</name>
       <expected_types>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>UserMeta</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaUnerasable</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaSingleton</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaForward</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaVirtual</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaMacro</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaStatic</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaAbstract</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaFinal</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaBridge</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaVolatile</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaNative</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaSynchronized</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>MetaTransient</name>
        </a-node>
       </expected_types>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-set</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaAccess</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaAccess'>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-access</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaUnerasable</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>@unerasable</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-unerasable</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaSingleton</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>@singleton</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-singleton</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaForward</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>@forward</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-forward</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaVirtual</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>@virtual</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-virtual</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaMacro</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>@macro</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-macro</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaStatic</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>@static</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-static</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaAbstract</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>@abstract</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-abstract</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaFinal</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>@final</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-final</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaNative</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>@native</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-native</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaSynchronized</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>@synchronized</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-synchronized</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaTransient</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>@transient</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-transient</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaVolatile</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>@volatile</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-volatile</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaBridge</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>@bridge</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-bridge</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaVarArgs</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>@varargs</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-varargs</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaSynthetic</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>@synthetic</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-synthetic</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>UserMeta</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@</text>
         <fmt>
          <a-node class='kiev.fmt.FullElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp-oper</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_NOP</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp-word</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_EAT</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <color>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>color-black</name>
            </a-node>
           </color>
           <font>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>font-bold</name>
            </a-node>
           </font>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotEmpty'>
           <name>values</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>(</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxList'>
             <element>
              <a-node class='kiev.fmt.SyntaxNode'>
               <name></name>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </element>
             <separator>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>,</text>
               <fmt>
                <a-node class='kiev.fmt.RefElemFormat'>
                 <decl>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-separator</name>
                  </a-node>
                 </decl>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </separator>
             <empty>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>&lt;?values?&gt;</text>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </empty>
             <folded_by_default>false</folded_by_default>
             <name>values</name>
             <expected_types>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>MetaValueScalar</name>
              </a-node>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>MetaValueArray</name>
              </a-node>
             </expected_types>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>)</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl</name>
            </a-node>
           </si>
           <action_before>SP_ADD</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-user-def</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaValueScalar</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>ident</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>=</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-operator</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>value</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-scalar-value</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaValueArray</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>ident</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>=</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-operator</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;?values?&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <folded_by_default>false</folded_by_default>
         <name>values</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>}</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-meta-array-value</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeRef</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxIdentAttr'>
       <name>ident</name>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-type</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-type-ref</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeNameRef</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>outer</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>outer</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>.</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <opt_false>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>outer</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>.</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>true</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_false>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>ident</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-type</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;?args?&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>true</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-type-name-ref</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeClosureRef</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)-&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>ret</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-type-closure-ref</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-type-expr-template</name>
        </a-node>
       </template>
       <name></name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-type-expr</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeDeclRef</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSpace'>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>sp-sepr</name>
            </a-node>
           </si>
           <action_before>SP_EAT</action_before>
           <action_after>SP_EAT</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>sp-word</name>
            </a-node>
           </si>
           <action_before>SP_EAT</action_before>
           <action_after>SP_EAT</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>sp-oper</name>
            </a-node>
           </si>
           <action_before>SP_EAT</action_before>
           <action_after>SP_EAT</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-type-decl-ref</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Block</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <element>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-java-stat</name>
            </a-node>
           </in_syntax>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_NOP</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </element>
       <empty>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{}</text>
         <fmt>
          <a-node class='kiev.fmt.FullElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp-sepr</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <color>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>color-black</name>
            </a-node>
           </color>
           <font>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>font-bold</name>
            </a-node>
           </font>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </empty>
       <prefix>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{</text>
         <fmt>
          <a-node class='kiev.fmt.FullElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl-block</name>
              </a-node>
             </si>
             <action_before>SP_EAT</action_before>
             <action_after>SP_NOP</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl-block-if</name>
              </a-node>
             </si>
             <action_before>SP_EAT</action_before>
             <action_after>SP_NOP</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp-sepr</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <color>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>color-black</name>
            </a-node>
           </color>
           <font>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>font-bold</name>
            </a-node>
           </font>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </prefix>
       <sufix>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>}</text>
         <fmt>
          <a-node class='kiev.fmt.FullElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp-sepr</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <color>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>color-black</name>
            </a-node>
           </color>
           <font>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>font-bold</name>
            </a-node>
           </font>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </sufix>
       <folded_by_default>false</folded_by_default>
       <name>stats</name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-block</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RewriteMatch</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <element>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-java-stat</name>
            </a-node>
           </in_syntax>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_NOP</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </element>
       <prefix>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{</text>
         <fmt>
          <a-node class='kiev.fmt.FullElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <color>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>color-black</name>
            </a-node>
           </color>
           <font>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>font-bolditalic</name>
            </a-node>
           </font>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </prefix>
       <sufix>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>}</text>
         <fmt>
          <a-node class='kiev.fmt.FullElemFormat'>
           <color>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>color-black</name>
            </a-node>
           </color>
           <font>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>font-bolditalic</name>
            </a-node>
           </font>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </sufix>
       <folded_by_default>false</folded_by_default>
       <name>cases</name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-rwr-match</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleBlock</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{</text>
         <fmt>
          <a-node class='kiev.fmt.FullElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl-block</name>
              </a-node>
             </si>
             <action_before>SP_EAT</action_before>
             <action_after>SP_NOP</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl-block-if</name>
              </a-node>
             </si>
             <action_before>SP_EAT</action_before>
             <action_after>SP_NOP</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp-sepr</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <color>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>color-black</name>
            </a-node>
           </color>
           <font>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>font-plain</name>
            </a-node>
           </font>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>node</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>}</text>
         <fmt>
          <a-node class='kiev.fmt.FullElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp-sepr</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <color>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>color-black</name>
            </a-node>
           </color>
           <font>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>font-plain</name>
            </a-node>
           </font>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-rule-block</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleOrExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{</text>
         <fmt>
          <a-node class='kiev.fmt.FullElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl-block</name>
              </a-node>
             </si>
             <action_before>SP_EAT</action_before>
             <action_after>SP_NOP</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl-block-if</name>
              </a-node>
             </si>
             <action_before>SP_EAT</action_before>
             <action_after>SP_NOP</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp-sepr</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <color>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>color-black</name>
            </a-node>
           </color>
           <font>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>font-plain</name>
            </a-node>
           </font>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxParagraphLayout'>
             <elem>
              <a-node class='kiev.fmt.SyntaxNode'>
               <name></name>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </elem>
             <par>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>par-indented</name>
              </a-node>
             </par>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>;</text>
             <fmt>
              <a-node class='kiev.fmt.FullElemFormat'>
               <spaces>
                <a-node class='kiev.fmt.SpaceCmd'>
                 <si>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>nl</name>
                  </a-node>
                 </si>
                 <action_before>SP_ADD</action_before>
                 <action_after>SP_ADD</action_after>
                 <from_attempt>0</from_attempt>
                </a-node>
                <a-node class='kiev.fmt.SpaceCmd'>
                 <si>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>sp-sepr</name>
                  </a-node>
                 </si>
                 <action_before>SP_ADD</action_before>
                 <action_after>SP_ADD</action_after>
                 <from_attempt>0</from_attempt>
                </a-node>
                <a-node class='kiev.fmt.SpaceCmd'>
                 <si>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>sp-oper</name>
                  </a-node>
                 </si>
                 <action_before>SP_ADD</action_before>
                 <action_after>SP_ADD</action_after>
                 <from_attempt>0</from_attempt>
                </a-node>
               </spaces>
               <color>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>color-black</name>
                </a-node>
               </color>
               <font>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>font-bold</name>
                </a-node>
               </font>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?rules?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>rules</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>}</text>
         <fmt>
          <a-node class='kiev.fmt.FullElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp-sepr</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <color>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>color-black</name>
            </a-node>
           </color>
           <font>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>font-plain</name>
            </a-node>
           </font>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-rule-expr-or</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleAndExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp-sepr</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp-oper</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_NOP</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>1</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>color-black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>font-bold</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;?rules?&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <folded_by_default>false</folded_by_default>
         <name>rules</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-rule-expr-and</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleCutExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>$cut</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-rule-cut</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleCallExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>5</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>obj</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>.</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>ident</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text> </text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-rule-call-expr</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleWhileExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>while</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>1</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>expr</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>bt_expr</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>:</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxJavaExpr'>
             <idx>-1</idx>
             <priority>1</priority>
             <template>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>java-expr-template</name>
              </a-node>
             </template>
             <name>bt_expr</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-rule-expr-while</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>1</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>expr</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>bt_expr</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>:</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxJavaExpr'>
             <idx>-1</idx>
             <priority>1</priority>
             <template>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>java-expr-template</name>
              </a-node>
             </template>
             <name>bt_expr</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-rule-expr</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ThisExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>this</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-this</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SuperExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>super</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-super</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>OuterThisAccessExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>outer</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>.</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>this</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-this-outer</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>AccessExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>240</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>obj</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>.</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>ident</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symref</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-access</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>IFldExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>240</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>obj</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>.</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>ident</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symref</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-ifld</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SFldExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>240</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>obj</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>.</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>ident</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symref</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-sfld</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>LVarExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxIdentAttr'>
       <name>ident</name>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symref</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-lvar</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ContainerAccessExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>230</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>obj</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>[</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>index</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>]</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-container</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeClassExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>.</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>class</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-class</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeInfoExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>.</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>type</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-typeinfo</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CallExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>5</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>obj</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>.</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>ident</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symref</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text> </text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-call</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CtorCallExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>obj</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ThisExpr</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SuperExpr</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text> </text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-call-ctor</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ClosureCallExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>240</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>expr</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text> </text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-call-closure</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>StringConcatExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <element>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>100</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>this</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </element>
       <separator>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>+</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-operator</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </separator>
       <empty>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>&lt;?strings?&gt;</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </empty>
       <folded_by_default>false</folded_by_default>
       <name>args</name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-concat</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CommaExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <element>
        <a-node class='kiev.fmt.SyntaxJavaExpr'>
         <idx>-1</idx>
         <priority>1</priority>
         <template>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>java-expr-template</name>
          </a-node>
         </template>
         <name>this</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </element>
       <separator>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>,</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </separator>
       <empty>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>&lt;?exprs?&gt;</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </empty>
       <folded_by_default>false</folded_by_default>
       <name>exprs</name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-comma</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>NewExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>outer</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxJavaExpr'>
             <idx>-1</idx>
             <priority>240</priority>
             <template>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>java-expr-template</name>
              </a-node>
             </template>
             <name>outer</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>.</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>new</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text> </text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>clazz</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>clazz</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-new</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>NewArrayExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>new</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>[</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>]</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>[]</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-new-array</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>NewInitializedArrayExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>new</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{}</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-new-array-init</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>NewClosure</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>fun</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)-&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>params</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type_ret</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>body</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-new-closure</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>IncrementExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-incr</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>UnaryExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-unary</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>BinaryExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-binary</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>AssignExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-assign</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>BooleanNotExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-bool-not</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>BinaryBoolExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-bool-binary</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>BinaryBooleanAndExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-bool-and</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>BinaryBooleanOrExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-bool-or</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>InstanceofExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-instanceof</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CastExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-cast</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ReinterpExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaExpr'>
       <idx>-1</idx>
       <priority>0</priority>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-expr-template</name>
        </a-node>
       </template>
       <name></name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-reinterp</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Label</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxIdentAttr'>
       <name>id</name>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-symbol</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-label</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CaseLabel</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>val</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>case</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-keyword</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>val</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxOptional'>
             <calculator>
              <a-node class='kiev.fmt.CalcOptionNotEmpty'>
               <name>pattern</name>
              </a-node>
             </calculator>
             <opt_true>
              <a-node class='kiev.fmt.SyntaxSet'>
               <elements>
                <a-node class='kiev.fmt.SyntaxToken'>
                 <text>(</text>
                 <fmt>
                  <a-node class='kiev.fmt.RefElemFormat'>
                   <decl>
                    <a-node class='kiev.vlang.SymbolRef'>
                     <name>fmt-separator</name>
                    </a-node>
                   </decl>
                   <is_hidden>false</is_hidden>
                  </a-node>
                 </fmt>
                </a-node>
                <a-node class='kiev.fmt.SyntaxList'>
                 <element>
                  <a-node class='kiev.fmt.SyntaxNode'>
                   <name></name>
                   <fmt>
                    <a-node class='kiev.fmt.SimpleElemFormat'>
                     <is_hidden>false</is_hidden>
                    </a-node>
                   </fmt>
                  </a-node>
                 </element>
                 <separator>
                  <a-node class='kiev.fmt.SyntaxToken'>
                   <text>,</text>
                   <fmt>
                    <a-node class='kiev.fmt.RefElemFormat'>
                     <decl>
                      <a-node class='kiev.vlang.SymbolRef'>
                       <name>fmt-separator</name>
                      </a-node>
                     </decl>
                     <is_hidden>false</is_hidden>
                    </a-node>
                   </fmt>
                  </a-node>
                 </separator>
                 <folded_by_default>false</folded_by_default>
                 <name>pattern</name>
                 <fmt>
                  <a-node class='kiev.fmt.SimpleElemFormat'>
                   <is_hidden>false</is_hidden>
                  </a-node>
                 </fmt>
                </a-node>
                <a-node class='kiev.fmt.SyntaxToken'>
                 <text>)</text>
                 <fmt>
                  <a-node class='kiev.fmt.RefElemFormat'>
                   <decl>
                    <a-node class='kiev.vlang.SymbolRef'>
                     <name>fmt-separator</name>
                    </a-node>
                   </decl>
                   <is_hidden>false</is_hidden>
                  </a-node>
                 </fmt>
                </a-node>
               </elements>
               <folded_by_default>false</folded_by_default>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </opt_true>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <opt_false>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>default</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_false>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>:</text>
         <fmt>
          <a-node class='kiev.fmt.FullElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <color>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>color-black</name>
            </a-node>
           </color>
           <font>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>font-plain</name>
            </a-node>
           </font>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-stat</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <spaces>
                <a-node class='kiev.fmt.SpaceCmd'>
                 <si>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>nl</name>
                  </a-node>
                 </si>
                 <action_before>SP_ADD</action_before>
                 <action_after>SP_ADD</action_after>
                 <from_attempt>0</from_attempt>
                </a-node>
               </spaces>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text> </text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>stats</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl</name>
            </a-node>
           </si>
           <action_before>SP_ADD</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-case-label</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CatchInfo</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>catch</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-cond-start</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>arg</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-cond-end</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>body</name>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-java-stat</name>
            </a-node>
           </in_syntax>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented-block</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-stat-catch</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>FinallyInfo</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>finally</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-keyword</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>body</name>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-java-stat</name>
            </a-node>
           </in_syntax>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-indented-block</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-stat-finally</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Shadow</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>node</name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-shadow</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>AssertEnabledExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>$assertionsEnabled</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-assert-enabled</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>NopExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSpace'>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>true</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-expr-nop</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Comment</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxJavaComment'>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>java-comment-template</name>
        </a-node>
       </template>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-comment</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Var</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>meta</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>vtype</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionNotNull'>
           <name>init</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>=</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-operator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>init</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <opt_false>
          <a-node class='kiev.fmt.SyntaxSet'>
           <elements>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>=</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-operator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>init</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elements>
           <folded_by_default>false</folded_by_default>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_false>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>true</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-all</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl</name>
            </a-node>
           </si>
           <action_before>SP_ADD</action_before>
           <action_after>SP_EAT</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl-field-group</name>
            </a-node>
           </si>
           <action_before>SP_EAT</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-var</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>DeclGroupEnumFields</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
         <name></name>
         <in_syntax>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>syntax-java-decl-group</name>
          </a-node>
         </in_syntax>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </element>
       <separator>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>,</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>1</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </separator>
       <sufix>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl-group</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </sufix>
       <folded_by_default>false</folded_by_default>
       <name>decls</name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-group-enums</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>DeclGroupCaseFields</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSpace'>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-group-case-fields</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>DeclGroup</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxNode'>
         <name></name>
         <in_syntax>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>syntax-java-decl-group</name>
          </a-node>
         </in_syntax>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>1</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>;</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-separator-eat-left</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl</name>
            </a-node>
           </si>
           <action_before>SP_ADD</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl-field-group</name>
            </a-node>
           </si>
           <action_before>SP_EAT</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-decl-group</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>DeclGroup</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>dtype</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-decl-group</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-left</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?decls?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>decls</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>Var</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>Field</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-group</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Var</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>id</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>vtype</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>init</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>=</text>
               <fmt>
                <a-node class='kiev.fmt.RefElemFormat'>
                 <decl>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-operator</name>
                  </a-node>
                 </decl>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxSubAttr'>
               <name>init</name>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <opt_false>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>=</text>
               <fmt>
                <a-node class='kiev.fmt.RefElemFormat'>
                 <decl>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-operator</name>
                  </a-node>
                 </decl>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxSubAttr'>
               <name>init</name>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_false>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-var</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Field</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>id</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>ftype</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>init</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>=</text>
               <fmt>
                <a-node class='kiev.fmt.RefElemFormat'>
                 <decl>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-operator</name>
                  </a-node>
                 </decl>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxSubAttr'>
               <name>init</name>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <opt_false>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>=</text>
               <fmt>
                <a-node class='kiev.fmt.RefElemFormat'>
                 <decl>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-operator</name>
                  </a-node>
                 </decl>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxSubAttr'>
               <name>init</name>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_false>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-field</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>FieldEnum</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>id</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>alt_id</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>:</text>
               <fmt>
                <a-node class='kiev.fmt.RefElemFormat'>
                 <decl>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-operator</name>
                  </a-node>
                 </decl>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxSubAttr'>
               <name>alt_id</name>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <opt_false>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>:</text>
               <fmt>
                <a-node class='kiev.fmt.RefElemFormat'>
                 <decl>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-operator</name>
                  </a-node>
                 </decl>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxSubAttr'>
               <name>alt_id</name>
               <expected_types>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>ConstStringExpr</name>
                </a-node>
               </expected_types>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_false>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-decl-field-enum</sname>
        </a-node>
       </id>
      </a-node>
     </members>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>syntax-java-decl-group</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>Shadow</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>node</name>
         <in_syntax>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>syntax-java-stat</name>
          </a-node>
         </in_syntax>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-shadow</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>ExprStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>expr</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>expr</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-expr</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>ReturnStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>return</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>expr</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>expr</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-return</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>ThrowStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>throw</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>expr</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-throw</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CondStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>cond</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>message</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>:</text>
               <fmt>
                <a-node class='kiev.fmt.RefElemFormat'>
                 <decl>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-separator</name>
                  </a-node>
                 </decl>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxSubAttr'>
               <name>message</name>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-cond</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>LabeledStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>lbl</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>:</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>stat</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-labeled</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>BreakStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>break</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>ident</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxIdentAttr'>
             <name>ident</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-break</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>ContinueStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>continue</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>ident</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxIdentAttr'>
             <name>ident</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-continue</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>GotoStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>goto</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>ident</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-goto-label</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>GotoCaseStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>goto</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>expr</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>case</text>
               <fmt>
                <a-node class='kiev.fmt.RefElemFormat'>
                 <decl>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-keyword</name>
                  </a-node>
                 </decl>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxSubAttr'>
               <name>expr</name>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <opt_false>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>default</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-keyword</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_false>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-goto-case</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>IfElseStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>if</text>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl-block-if</name>
                </a-node>
               </si>
               <action_before>SP_EAT</action_before>
               <action_after>SP_NOP</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp-word</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>color-blue-dark</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>font-bold</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-cond-start</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>cond</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-cond-end</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxParagraphLayout'>
           <elem>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>thenSt</name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-stat</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elem>
           <par>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>par-indented-block</name>
            </a-node>
           </par>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>elseSt</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>else</text>
               <fmt>
                <a-node class='kiev.fmt.FullElemFormat'>
                 <spaces>
                  <a-node class='kiev.fmt.SpaceCmd'>
                   <si>
                    <a-node class='kiev.vlang.SymbolRef'>
                     <name>nl-block</name>
                    </a-node>
                   </si>
                   <action_before>SP_EAT</action_before>
                   <action_after>SP_NOP</action_after>
                   <from_attempt>0</from_attempt>
                  </a-node>
                  <a-node class='kiev.fmt.SpaceCmd'>
                   <si>
                    <a-node class='kiev.vlang.SymbolRef'>
                     <name>sp-word</name>
                    </a-node>
                   </si>
                   <action_before>SP_ADD</action_before>
                   <action_after>SP_ADD</action_after>
                   <from_attempt>0</from_attempt>
                  </a-node>
                  <a-node class='kiev.fmt.SpaceCmd'>
                   <si>
                    <a-node class='kiev.vlang.SymbolRef'>
                     <name>nl-block-if</name>
                    </a-node>
                   </si>
                   <action_before>SP_NOP</action_before>
                   <action_after>SP_ADD</action_after>
                   <from_attempt>0</from_attempt>
                  </a-node>
                 </spaces>
                 <color>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>color-blue-dark</name>
                  </a-node>
                 </color>
                 <font>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>font-bold</name>
                  </a-node>
                 </font>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxParagraphLayout'>
               <elem>
                <a-node class='kiev.fmt.SyntaxSubAttr'>
                 <name>elseSt</name>
                 <in_syntax>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>syntax-java-stat</name>
                  </a-node>
                 </in_syntax>
                 <fmt>
                  <a-node class='kiev.fmt.SimpleElemFormat'>
                   <is_hidden>false</is_hidden>
                  </a-node>
                 </fmt>
                </a-node>
               </elem>
               <par>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>par-indented-block-if</name>
                </a-node>
               </par>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_NOP</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-if-else</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>WhileStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>while</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-cond-start</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>cond</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-cond-end</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxParagraphLayout'>
           <elem>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>body</name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-stat</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elem>
           <par>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>par-indented-block</name>
            </a-node>
           </par>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-while</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>DoWhileStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>do</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxParagraphLayout'>
           <elem>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>body</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elem>
           <par>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>par-indented-block</name>
            </a-node>
           </par>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>while</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-cond-start</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>cond</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>);</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-do-while</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>ForStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>for</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-cond-start</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>init</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>init</name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-decl-group</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>cond</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>cond</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>;</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>iter</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>iter</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-cond-end</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxParagraphLayout'>
           <elem>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>body</name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-stat</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elem>
           <par>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>par-indented-block</name>
            </a-node>
           </par>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-for</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>ForEachStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>foreach</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-cond-start</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>var</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>var</name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-for-java</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <spaces>
                <a-node class='kiev.fmt.SpaceCmd'>
                 <si>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>nl</name>
                  </a-node>
                 </si>
                 <action_before>SP_EAT</action_before>
                 <action_after>SP_EAT</action_after>
                 <from_attempt>0</from_attempt>
                </a-node>
                <a-node class='kiev.fmt.SpaceCmd'>
                 <si>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>nl-field-group</name>
                  </a-node>
                 </si>
                 <action_before>SP_EAT</action_before>
                 <action_after>SP_EAT</action_after>
                 <from_attempt>0</from_attempt>
                </a-node>
               </spaces>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>container</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>cond</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSet'>
             <elements>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>;</text>
               <fmt>
                <a-node class='kiev.fmt.RefElemFormat'>
                 <decl>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>fmt-separator</name>
                  </a-node>
                 </decl>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
              <a-node class='kiev.fmt.SyntaxSubAttr'>
               <name>cond</name>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </elements>
             <folded_by_default>false</folded_by_default>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-cond-end</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxParagraphLayout'>
           <elem>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>body</name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-stat</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elem>
           <par>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>par-indented-block</name>
            </a-node>
           </par>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-foreach</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>SwitchStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>switch</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-cond-start</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>sel</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-cond-end</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-stat</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?cases?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>cases</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CaseLabel</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-switch</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>TryStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>try</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxParagraphLayout'>
           <elem>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>body</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elem>
           <par>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>par-indented-block</name>
            </a-node>
           </par>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?catchers?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>catchers</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CatchInfo</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>finally_catcher</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>finally_catcher</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-try</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>SynchronizedStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>synchronized</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-cond-start</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>expr</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-cond-end</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxParagraphLayout'>
           <elem>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>body</name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-stat</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elem>
           <par>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>par-indented-block</name>
            </a-node>
           </par>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-synchronized</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>WithStat</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>with</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-cond-start</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>expr</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-cond-end</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxParagraphLayout'>
           <elem>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>body</name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-stat</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elem>
           <par>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>par-indented-block</name>
            </a-node>
           </par>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-stat-with</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>RewriteCase</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>case</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>var</name>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-java-stat</name>
            </a-node>
           </in_syntax>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>RewritePattern</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>:</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxParagraphLayout'>
           <elem>
            <a-node class='kiev.fmt.SyntaxList'>
             <element>
              <a-node class='kiev.fmt.SyntaxNode'>
               <name></name>
               <in_syntax>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>syntax-java-stat</name>
                </a-node>
               </in_syntax>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <spaces>
                  <a-node class='kiev.fmt.SpaceCmd'>
                   <si>
                    <a-node class='kiev.vlang.SymbolRef'>
                     <name>nl</name>
                    </a-node>
                   </si>
                   <action_before>SP_ADD</action_before>
                   <action_after>SP_ADD</action_after>
                   <from_attempt>0</from_attempt>
                  </a-node>
                 </spaces>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </element>
             <empty>
              <a-node class='kiev.fmt.SyntaxToken'>
               <text>&lt;?stats?&gt;</text>
               <fmt>
                <a-node class='kiev.fmt.SimpleElemFormat'>
                 <is_hidden>false</is_hidden>
                </a-node>
               </fmt>
              </a-node>
             </empty>
             <folded_by_default>false</folded_by_default>
             <name>stats</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </elem>
           <par>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>par-indented</name>
            </a-node>
           </par>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-rwr-case</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>RewritePattern</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>meta</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>vtype</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>id</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symbol</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-stat</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>(</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </prefix>
           <sufix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>)</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </sufix>
           <folded_by_default>false</folded_by_default>
           <name>vars</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>RewritePattern</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-rwr-pattern</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>RewriteNodeFactory</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>new#</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-keyword</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>type</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <in_syntax>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>syntax-java-stat</name>
              </a-node>
             </in_syntax>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>(</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </prefix>
           <sufix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>)</text>
             <fmt>
              <a-node class='kiev.fmt.RefElemFormat'>
               <decl>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>fmt-separator-eat-all</name>
                </a-node>
               </decl>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </sufix>
           <folded_by_default>false</folded_by_default>
           <name>args</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>RewriteNodeArg</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-rwr-factory</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>RewriteNodeArg</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>attr</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-symref</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>=</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-operator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>node</name>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-java-stat</name>
            </a-node>
           </in_syntax>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-rwr-arg</sname>
        </a-node>
       </id>
      </a-node>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>RewriteNodeArgArray</name>
        </a-node>
       </node>
       <elem>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-separator-eat-all</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>args</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elem>
       <meta>
        <a-node class='kiev.vlang.MetaSet'>
        </a-node>
       </meta>
       <id>
        <a-node class='kiev.vlang.Symbol'>
         <sname>stx-rwr-arg-array</sname>
        </a-node>
       </id>
      </a-node>
     </members>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>syntax-java-stat</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstBoolExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxIdentAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-const-bool</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstNullExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>null</text>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-keyword</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-const-null</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstStringExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxStrAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-string</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-const-str</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstCharExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxCharAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-string</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-const-char</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstByteExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-number</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-const-byte</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstShortExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-number</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-const-short</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstIntExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-number</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-const-int</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstLongExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-number</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-const-long</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstFloatExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-number</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-const-float</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ConstDoubleExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>value</name>
       <fmt>
        <a-node class='kiev.fmt.RefElemFormat'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>fmt-number</name>
          </a-node>
         </decl>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-const-double</sname>
      </a-node>
     </id>
    </a-node>
   </members>
   <meta>
    <a-node class='kiev.vlang.MetaSet'>
    </a-node>
   </meta>
   <id>
    <a-node class='kiev.vlang.Symbol'>
     <sname>syntax-for-java</sname>
    </a-node>
   </id>
  </a-node>
 </members>
 <meta>
  <a-node class='kiev.vlang.MetaSet'>
  </a-node>
 </meta>
 <id>
  <a-node class='kiev.vlang.Symbol'>
   <sname>stx-fmt\syntax-for-java.xml</sname>
  </a-node>
 </id>
</a-node>
<?xml version='1.1' encoding='UTF-8' standalone='yes'?>
<!--
 Copyright (c) 2005-2007 UAB "MAKSINETA".
 All rights reserved. This program and the accompanying materials
 are made available under the terms of the Common Public License Version 1.0
 which accompanies this distribution, and is available at
 http://www.eclipse.org/legal/cpl-v10.html
 
 Contributors:
     "Maxim Kizub" mkizub@symade.com - initial design and implementation
-->
<sop:dump version='1.0' xmlns:sop='sop://sop/'
  xmlns:core='sop://languages/core?class=kiev.vlang.CoreLang'
  xmlns:syntax='sop://languages/syntax?class=kiev.fmt.SyntaxLang'>
 <core:FileUnit>
  <project_file>true</project_file>
  <srpkg>
   <core:SymbolRef name='stx-fmt' full='true' />
  </srpkg>
  <members>
   <core:Import all='false' methods='false'>
    <name>
     <core:SymbolRef name='kiev&#31;stdlib&#31;Syntax' full='true' />
    </name>
    <mode>IMPORT_SYNTAX</mode>
   </core:Import>
   <core:Import all='true' methods='false'>
    <name>
     <core:SymbolRef name='kiev&#31;vlang' full='true' />
    </name>
    <mode>IMPORT_CLASS</mode>
   </core:Import>
   <core:Import all='true' methods='false'>
    <name>
     <core:SymbolRef name='kiev&#31;fmt' full='true' />
    </name>
    <mode>IMPORT_CLASS</mode>
   </core:Import>
   <core:Import all='false' methods='false'>
    <name>
     <core:SymbolRef name='kiev&#31;vlang&#31;types&#31;TypeNameRef' full='true' />
    </name>
    <mode>IMPORT_CLASS</mode>
   </core:Import>
   <syntax:TextSyntax name='syntax-for-syntax'>
    <members>
     <syntax:SpaceInfo name='sp'>
      <kind>SP_SPACE</kind>
      <text_size>2</text_size>
      <pixel_size>4</pixel_size>
     </syntax:SpaceInfo>
     <syntax:SpaceInfo name='space'>
      <kind>SP_SPACE</kind>
      <text_size>4</text_size>
      <pixel_size>8</pixel_size>
     </syntax:SpaceInfo>
     <syntax:SpaceInfo name='nl'>
      <kind>SP_NEW_LINE</kind>
      <text_size>1</text_size>
      <pixel_size>1</pixel_size>
     </syntax:SpaceInfo>
     <syntax:SpaceInfo name='nl2'>
      <kind>SP_NEW_LINE</kind>
      <text_size>2</text_size>
      <pixel_size>10</pixel_size>
     </syntax:SpaceInfo>
     <syntax:SpaceInfo name='nl_import'>
      <kind>SP_NEW_LINE</kind>
      <text_size>2</text_size>
      <pixel_size>10</pixel_size>
     </syntax:SpaceInfo>
     <syntax:SpaceInfo name='nl_space'>
      <kind>SP_NEW_LINE</kind>
      <text_size>2</text_size>
      <pixel_size>10</pixel_size>
     </syntax:SpaceInfo>
     <syntax:SpaceInfo name='nl_fmt'>
      <kind>SP_NEW_LINE</kind>
      <text_size>2</text_size>
      <pixel_size>10</pixel_size>
     </syntax:SpaceInfo>
     <syntax:ParagraphLayout name='par-indent'>
      <indent_text_size>4</indent_text_size>
      <indent_pixel_size>20</indent_pixel_size>
     </syntax:ParagraphLayout>
     <syntax:ParagraphLayout name='par-syntax-body'>
      <indent_text_size>4</indent_text_size>
      <indent_pixel_size>20</indent_pixel_size>
     </syntax:ParagraphLayout>
     <syntax:ParagraphLayout name='par-list-body'>
      <indent_text_size>4</indent_text_size>
      <indent_pixel_size>20</indent_pixel_size>
     </syntax:ParagraphLayout>
     <syntax:ParagraphLayout name='par-flow'>
      <next_indent_text_size>4</next_indent_text_size>
      <next_indent_pixel_size>20</next_indent_pixel_size>
      <flow>true</flow>
     </syntax:ParagraphLayout>
     <syntax:ParagraphLayout name='par-indent-from_pos'>
      <indent_from_current_position>true</indent_from_current_position>
     </syntax:ParagraphLayout>
     <syntax:DrawColor name='red'>
      <rgb_color>16711680</rgb_color>
     </syntax:DrawColor>
     <syntax:DrawColor name='blue'>
      <rgb_color>255</rgb_color>
     </syntax:DrawColor>
     <syntax:DrawColor name='green'>
      <rgb_color>65280</rgb_color>
     </syntax:DrawColor>
     <syntax:DrawColor name='color-green-dark'>
      <rgb_color>32768</rgb_color>
     </syntax:DrawColor>
     <syntax:DrawColor name='black'>
      <rgb_color>0</rgb_color>
     </syntax:DrawColor>
     <syntax:DrawColor name='color-default'>
      <rgb_color>0</rgb_color>
     </syntax:DrawColor>
     <syntax:DrawFont name='font-default'>
      <font_name>Dialog-PLAIN-12</font_name>
     </syntax:DrawFont>
     <syntax:DrawFont name='bold-font'>
      <font_name>Dialog-BOLD-12</font_name>
     </syntax:DrawFont>
     <syntax:DrawFont name='italic-font'>
      <font_name>Dialog-ITALIC-12</font_name>
     </syntax:DrawFont>
     <syntax:DrawFont name='bold-italic-font'>
      <font_name>Dialog-BOLDITALIC-12</font_name>
     </syntax:DrawFont>
     <syntax:SyntaxElemFormatDecl name='fmt-default'>
      <spaces>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='sp' />
        </si>
        <action_before>SP_ADD</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>0</from_attempt>
       </syntax:SpaceCmd>
      </spaces>
      <color>
       <core:SymbolRef name='color-default' />
      </color>
      <font>
       <core:SymbolRef name='font-default' />
      </font>
     </syntax:SyntaxElemFormatDecl>
     <syntax:SyntaxElemFormatDecl name='fmt-of-def'>
      <spaces>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='sp' />
        </si>
        <action_before>SP_NOP</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>0</from_attempt>
       </syntax:SpaceCmd>
      </spaces>
      <color>
       <core:SymbolRef name='black' />
      </color>
      <font>
       <core:SymbolRef name='bold-font' />
      </font>
     </syntax:SyntaxElemFormatDecl>
     <syntax:SyntaxElemFormatDecl name='fmt-of-symbol'>
      <spaces>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='sp' />
        </si>
        <action_before>SP_ADD</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>0</from_attempt>
       </syntax:SpaceCmd>
      </spaces>
      <color>
       <core:SymbolRef name='blue' />
      </color>
      <font>
       <core:SymbolRef name='bold-font' />
      </font>
     </syntax:SyntaxElemFormatDecl>
     <syntax:SyntaxElemFormatDecl name='fmt-of-anode'>
      <spaces>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='sp' />
        </si>
        <action_before>SP_ADD</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>0</from_attempt>
       </syntax:SpaceCmd>
      </spaces>
      <color>
       <core:SymbolRef name='color-default' />
      </color>
      <font>
       <core:SymbolRef name='bold-font' />
      </font>
     </syntax:SyntaxElemFormatDecl>
     <syntax:SyntaxElemFormatDecl name='fmt-of-stxref'>
      <spaces>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='sp' />
        </si>
        <action_before>SP_ADD</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>0</from_attempt>
       </syntax:SpaceCmd>
      </spaces>
      <color>
       <core:SymbolRef name='color-green-dark' />
      </color>
      <font>
       <core:SymbolRef name='bold-font' />
      </font>
     </syntax:SyntaxElemFormatDecl>
     <syntax:SyntaxElemFormatDecl name='fmt-of-subattr'>
      <spaces>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='sp' />
        </si>
        <action_before>SP_ADD</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>0</from_attempt>
       </syntax:SpaceCmd>
      </spaces>
      <color>
       <core:SymbolRef name='color-default' />
      </color>
      <font>
       <core:SymbolRef name='italic-font' />
      </font>
     </syntax:SyntaxElemFormatDecl>
     <syntax:SyntaxElemFormatDecl name='fmt-of-kw'>
      <spaces>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='sp' />
        </si>
        <action_before>SP_ADD</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>0</from_attempt>
       </syntax:SpaceCmd>
      </spaces>
      <color>
       <core:SymbolRef name='black' />
      </color>
      <font>
       <core:SymbolRef name='bold-font' />
      </font>
     </syntax:SyntaxElemFormatDecl>
     <syntax:SyntaxElemFormatDecl name='fmt-of-string'>
      <spaces>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='sp' />
        </si>
        <action_before>SP_ADD</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>0</from_attempt>
       </syntax:SpaceCmd>
      </spaces>
      <color>
       <core:SymbolRef name='color-green-dark' />
      </color>
      <font>
       <core:SymbolRef name='bold-font' />
      </font>
     </syntax:SyntaxElemFormatDecl>
     <syntax:SyntaxElemFormatDecl name='fmt-nl'>
      <spaces>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='nl' />
        </si>
        <action_before>SP_NOP</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>0</from_attempt>
       </syntax:SpaceCmd>
      </spaces>
     </syntax:SyntaxElemFormatDecl>
     <syntax:SyntaxElemFormatDecl name='fmt-nl-nl'>
      <spaces>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='nl' />
        </si>
        <action_before>SP_ADD</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>0</from_attempt>
       </syntax:SpaceCmd>
      </spaces>
     </syntax:SyntaxElemFormatDecl>
     <syntax:SyntaxElemFormatDecl name='fmt-nl2'>
      <spaces>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='nl2' />
        </si>
        <action_before>SP_NOP</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>0</from_attempt>
       </syntax:SpaceCmd>
      </spaces>
     </syntax:SyntaxElemFormatDecl>
     <syntax:SyntaxElemFormatDecl name='fmt-nl-import'>
      <spaces>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='nl_import' />
        </si>
        <action_before>SP_EAT</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>0</from_attempt>
       </syntax:SpaceCmd>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='nl' />
        </si>
        <action_before>SP_ADD</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>0</from_attempt>
       </syntax:SpaceCmd>
      </spaces>
     </syntax:SyntaxElemFormatDecl>
     <syntax:SyntaxElemFormatDecl name='fmt-nl-space'>
      <spaces>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='nl_space' />
        </si>
        <action_before>SP_EAT</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>0</from_attempt>
       </syntax:SpaceCmd>
      </spaces>
     </syntax:SyntaxElemFormatDecl>
     <syntax:SyntaxElemFormatDecl name='fmt-nl-format'>
      <spaces>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='nl_fmt' />
        </si>
        <action_before>SP_EAT</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>0</from_attempt>
       </syntax:SpaceCmd>
      </spaces>
     </syntax:SyntaxElemFormatDecl>
     <syntax:SyntaxElemFormatDecl name='fmt-nl-1-+'>
      <spaces>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='nl' />
        </si>
        <action_before>SP_NOP</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>1</from_attempt>
       </syntax:SpaceCmd>
      </spaces>
     </syntax:SyntaxElemFormatDecl>
     <syntax:SyntaxElemFormatDecl name='fmt-nl-1++'>
      <spaces>
       <syntax:SpaceCmd>
        <si>
         <core:SymbolRef name='nl' />
        </si>
        <action_before>SP_ADD</action_before>
        <action_after>SP_ADD</action_after>
        <from_attempt>1</from_attempt>
       </syntax:SpaceCmd>
      </spaces>
     </syntax:SyntaxElemFormatDecl>
     <syntax:PartialSyntaxElemDecl name='stx-syntax-members'>
      <elem>
       <syntax:SyntaxListWrapper>
        <prefix>
         <syntax:SyntaxToken>
          <text>{</text>
         </syntax:SyntaxToken>
        </prefix>
        <sufix>
         <syntax:SyntaxToken>
          <text>}</text>
          <fmt>
           <core:SymbolRef name='fmt-nl' />
          </fmt>
         </syntax:SyntaxToken>
        </sufix>
        <list>
         <syntax:SyntaxList>
          <element>
           <syntax:SyntaxNode>
            <name></name>
            <fmt>
             <core:SymbolRef name='fmt-nl-nl' />
            </fmt>
           </syntax:SyntaxNode>
          </element>
          <name>members</name>
          <fmt>
           <core:SymbolRef name='fmt-nl-nl' />
          </fmt>
          <par>
           <core:SymbolRef name='par-indent' />
          </par>
         </syntax:SyntaxList>
        </list>
        <name>members</name>
       </syntax:SyntaxListWrapper>
      </elem>
     </syntax:PartialSyntaxElemDecl>
     <syntax:SyntaxExpectedTemplate name='stx-types-of-syntax'>
      <title>Syntax Declarations</title>
      <expected_types>
       <core:SymbolRef name='SpaceInfo' />
       <core:SymbolRef name='ParagraphLayout' />
       <core:SymbolRef name='ParagraphLayoutBlock' />
       <core:SymbolRef name='DrawColor' />
       <core:SymbolRef name='DrawFont' />
       <core:SymbolRef name='SyntaxElemFormatDecl' />
       <core:SymbolRef name='SyntaxExpectedTemplate' />
       <core:SymbolRef name='PartialSyntaxElemDecl' />
       <core:SymbolRef name='SyntaxElemDecl' />
      </expected_types>
      <elem>
       <syntax:SyntaxNode>
        <name></name>
       </syntax:SyntaxNode>
      </elem>
     </syntax:SyntaxExpectedTemplate>
     <syntax:PartialSyntaxElemDecl name='stx-sname'>
      <elem>
       <syntax:SyntaxIdentAttr>
        <decl>
         <core:SymbolRef name='ident-template' />
        </decl>
        <name>sname</name>
        <fmt>
         <core:SymbolRef name='fmt-of-symbol' />
        </fmt>
        <funcs>
         <syntax:SyntaxFunctions>
          <funcs>
           <syntax:SyntaxFunction>
            <title>Edit symbol</title>
            <act>kiev.gui.TextEditor</act>
           </syntax:SyntaxFunction>
          </funcs>
         </syntax:SyntaxFunctions>
        </funcs>
       </syntax:SyntaxIdentAttr>
      </elem>
     </syntax:PartialSyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-file-unit'>
      <rnode>
       <core:SymbolRef name='FileUnit' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>members</attr_name>
        <expected_types>
         <core:SymbolRef name='Import' />
         <core:SymbolRef name='TextSyntax' />
         <core:SymbolRef name='KievTextSyntax' />
         <core:SymbolRef name='TreeSyntax' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>namespace</text>
          <fmt>
           <core:SymbolRef name='fmt-of-def' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>srpkg</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxSpace>
          <fmt>
           <core:SymbolRef name='fmt-nl2' />
          </fmt>
         </syntax:SyntaxSpace>
         <syntax:SyntaxList>
          <element>
           <syntax:SyntaxNode>
            <name></name>
           </syntax:SyntaxNode>
          </element>
          <name>members</name>
          <empty>
           <syntax:SyntaxToken>
            <text> </text>
           </syntax:SyntaxToken>
          </empty>
         </syntax:SyntaxList>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-type-name-ref'>
      <rnode>
       <core:SymbolRef name='TypeNameRef' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>ident</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-syntax-decl'>
      <rnode>
       <core:SymbolRef name='TextSyntax' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>members</attr_name>
        <expected_types>
         <core:SymbolRef name='stx-types-of-syntax' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>def-syntax</text>
          <fmt>
           <core:SymbolRef name='fmt-of-def' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>sname</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxToken>
          <text>extends</text>
          <fmt>
           <core:SymbolRef name='fmt-of-kw' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>parent_syntax</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxElemRef>
          <decl>
           <core:SymbolRef name='stx-syntax-members' />
          </decl>
          <text>{members}</text>
         </syntax:SyntaxElemRef>
         <syntax:SyntaxSpace>
          <fmt>
           <core:SymbolRef name='fmt-nl2' />
          </fmt>
         </syntax:SyntaxSpace>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-syntax-decl-java'>
      <rnode>
       <core:SymbolRef name='KievTextSyntax' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>members</attr_name>
        <expected_types>
         <core:SymbolRef name='stx-types-of-syntax' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>def-syntax-java</text>
          <fmt>
           <core:SymbolRef name='fmt-of-def' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>sname</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxToken>
          <text>extends</text>
          <fmt>
           <core:SymbolRef name='fmt-of-kw' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>parent_syntax</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxElemRef>
          <decl>
           <core:SymbolRef name='stx-syntax-members' />
          </decl>
          <text>{members}</text>
         </syntax:SyntaxElemRef>
         <syntax:SyntaxSpace>
          <fmt>
           <core:SymbolRef name='fmt-nl2' />
          </fmt>
         </syntax:SyntaxSpace>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-syntax-decl-tree'>
      <rnode>
       <core:SymbolRef name='TreeSyntax' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>members</attr_name>
        <expected_types>
         <core:SymbolRef name='stx-types-of-syntax' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>def-syntax-tree</text>
          <fmt>
           <core:SymbolRef name='fmt-of-def' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>sname</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxToken>
          <text>extends</text>
          <fmt>
           <core:SymbolRef name='fmt-of-kw' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>parent_syntax</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxElemRef>
          <decl>
           <core:SymbolRef name='stx-syntax-members' />
          </decl>
          <text>{members}</text>
         </syntax:SyntaxElemRef>
         <syntax:SyntaxSpace>
          <fmt>
           <core:SymbolRef name='fmt-nl2' />
          </fmt>
         </syntax:SyntaxSpace>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-import'>
      <rnode>
       <core:SymbolRef name='Import' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>import</text>
          <fmt>
           <core:SymbolRef name='fmt-of-def' />
          </fmt>
          <funcs>
           <syntax:SyntaxFunctions>
            <funcs>
             <syntax:SyntaxFunction>
              <title>Import All</title>
              <act>kiev.gui.ChooseItemEditor</act>
              <attr>star</attr>
             </syntax:SyntaxFunction>
            </funcs>
           </syntax:SyntaxFunctions>
          </funcs>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>name</name>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxEnumChoice>
          <elements>
           <syntax:SyntaxSpace />
           <syntax:SyntaxToken>
            <text>.*</text>
            <fmt>
             <core:SymbolRef name='fmt-of-kw' />
            </fmt>
           </syntax:SyntaxToken>
          </elements>
          <name>star</name>
         </syntax:SyntaxEnumChoice>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
        <fmt>
         <core:SymbolRef name='fmt-nl-import' />
        </fmt>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-space-info'>
      <rnode>
       <core:SymbolRef name='SpaceInfo' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>def-space</text>
          <fmt>
           <core:SymbolRef name='fmt-of-def' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxElemRef>
          <decl>
           <core:SymbolRef name='stx-sname' />
          </decl>
          <text>sname</text>
         </syntax:SyntaxElemRef>
         <syntax:SyntaxSubAttr>
          <name>kind</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>text_size</name>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxToken>
          <text>/</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>pixel_size</name>
         </syntax:SyntaxSubAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
        <fmt>
         <core:SymbolRef name='fmt-nl-space' />
        </fmt>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-paragraph'>
      <rnode>
       <core:SymbolRef name='ParagraphLayout' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>def-paragraph</text>
          <fmt>
           <core:SymbolRef name='fmt-of-def' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>sname</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxToken>
          <text>indent:</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>indent_text_size</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxToken>
          <text>/</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>indent_pixel_size</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxToken>
          <text>next:</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>next_indent_text_size</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxToken>
          <text>/</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>next_indent_pixel_size</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxToken>
          <text>flow:</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>flow</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxToken>
          <text>from_cur_pos:</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>indent_from_current_position</name>
         </syntax:SyntaxSubAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
        <fmt>
         <core:SymbolRef name='fmt-nl-space' />
        </fmt>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-paragraph-block'>
      <rnode>
       <core:SymbolRef name='ParagraphLayoutBlock' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>def-paragraph</text>
          <fmt>
           <core:SymbolRef name='fmt-of-def' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>sname</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxSubAttr>
          <name>indent_text_size</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxToken>
          <text>/</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>indent_pixel_size</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxSubAttr>
          <name>token_text</name>
         </syntax:SyntaxSubAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
        <fmt>
         <core:SymbolRef name='fmt-nl-space' />
        </fmt>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-color'>
      <rnode>
       <core:SymbolRef name='DrawColor' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>def-color</text>
          <fmt>
           <core:SymbolRef name='fmt-of-def' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>sname</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxSubAttr>
          <name>rgb_color</name>
         </syntax:SyntaxSubAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
        <fmt>
         <core:SymbolRef name='fmt-nl-format' />
        </fmt>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-font'>
      <rnode>
       <core:SymbolRef name='DrawFont' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>def-font</text>
          <fmt>
           <core:SymbolRef name='fmt-of-def' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>sname</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxToken>
          <text>"</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>font_name</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxToken>
          <text>"</text>
         </syntax:SyntaxToken>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
        <fmt>
         <core:SymbolRef name='fmt-nl-format' />
        </fmt>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-space-cmd'>
      <rnode>
       <core:SymbolRef name='SpaceCmd' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>[</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxEnumChoice>
          <elements>
           <syntax:SyntaxToken>
            <text>·</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>+</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>×</text>
           </syntax:SyntaxToken>
          </elements>
          <name>action_before</name>
         </syntax:SyntaxEnumChoice>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>si</name>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxEnumChoice>
          <elements>
           <syntax:SyntaxToken>
            <text>·</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>+</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>×</text>
           </syntax:SyntaxToken>
          </elements>
          <name>action_after</name>
         </syntax:SyntaxEnumChoice>
         <syntax:SyntaxSubAttr>
          <name>from_attempt</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxToken>
          <text>]</text>
         </syntax:SyntaxToken>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
        <par>
         <core:SymbolRef name='par-indent' />
        </par>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-symbol-ref'>
      <rnode>
       <core:SymbolRef name='SymbolRef' />
      </rnode>
      <elem>
       <syntax:SyntaxIdentAttr>
        <decl>
         <core:SymbolRef name='ident-template' />
        </decl>
        <name>name</name>
       </syntax:SyntaxIdentAttr>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-format'>
      <rnode>
       <core:SymbolRef name='SyntaxElemFormatDecl' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <title>SpaceCmd</title>
        <attr_name>spaces</attr_name>
        <expected_types>
         <core:SymbolRef name='SpaceCmd' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>def-format</text>
          <fmt>
           <core:SymbolRef name='fmt-of-def' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>sname</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxToken>
          <text>color:</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>color</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxToken>
          <text>font:</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>font</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxToken>
          <text>spaces:{</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxList>
          <element>
           <syntax:SyntaxNode>
            <name></name>
           </syntax:SyntaxNode>
          </element>
          <name>spaces</name>
          <empty>
           <syntax:SyntaxPlaceHolder>
            <text>spaces</text>
           </syntax:SyntaxPlaceHolder>
          </empty>
          <par>
           <core:SymbolRef name='par-flow' />
          </par>
         </syntax:SyntaxList>
         <syntax:SyntaxToken>
          <text>}</text>
         </syntax:SyntaxToken>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
        <fmt>
         <core:SymbolRef name='fmt-nl-format' />
        </fmt>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-partial'>
      <rnode>
       <core:SymbolRef name='PartialSyntaxElemDecl' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>def-stx-part</text>
          <fmt>
           <core:SymbolRef name='fmt-of-def' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>sname</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxSubAttr>
          <name>elem</name>
         </syntax:SyntaxSubAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-syntax'>
      <rnode>
       <core:SymbolRef name='SyntaxElemDecl' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <title>SyntaxExpectedTemplate</title>
        <attr_name>attr_types</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxExpectedAttr' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>def-stx-elem</text>
          <fmt>
           <core:SymbolRef name='fmt-of-def' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>sname</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>rnode</name>
          <fmt>
           <core:SymbolRef name='fmt-of-anode' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxSubAttr>
          <name>elem</name>
          <fmt>
           <core:SymbolRef name='fmt-nl' />
          </fmt>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxListWrapper>
          <prefix>
           <syntax:SyntaxToken>
            <text>attr_types: [</text>
           </syntax:SyntaxToken>
          </prefix>
          <sufix>
           <syntax:SyntaxToken>
            <text>]</text>
           </syntax:SyntaxToken>
          </sufix>
          <list>
           <syntax:SyntaxList>
            <element>
             <syntax:SyntaxNode>
              <name></name>
             </syntax:SyntaxNode>
            </element>
            <separator>
             <syntax:SyntaxToken>
              <text>,</text>
              <fmt>
               <core:SymbolRef name='fmt-nl' />
              </fmt>
             </syntax:SyntaxToken>
            </separator>
            <name>attr_types</name>
            <par>
             <core:SymbolRef name='par-indent-from_pos' />
            </par>
           </syntax:SyntaxList>
          </list>
          <name>attr_types</name>
          <empty>
           <syntax:SyntaxPlaceHolder>
            <text>[attr_types]</text>
           </syntax:SyntaxPlaceHolder>
          </empty>
          <par>
           <core:SymbolRef name='par-indent' />
          </par>
         </syntax:SyntaxListWrapper>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxIdentTemplate name='ident-template'>
      <regexp_ok>.*</regexp_ok>
      <elem>
       <syntax:SyntaxNode>
        <name></name>
       </syntax:SyntaxNode>
      </elem>
     </syntax:SyntaxIdentTemplate>
     <syntax:SyntaxElemDecl name='stx-const-str'>
      <rnode>
       <core:SymbolRef name='ConstStringExpr' />
      </rnode>
      <elem>
       <syntax:SyntaxStrAttr>
        <name>value</name>
        <fmt>
         <core:SymbolRef name='fmt-of-string' />
        </fmt>
       </syntax:SyntaxStrAttr>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-token'>
      <rnode>
       <core:SymbolRef name='SyntaxToken' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>fmt</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>funcs</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxFunctions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxSubAttr>
            <name>text</name>
           </syntax:SyntaxSubAttr>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;token:</text>
            <funcs>
             <syntax:SyntaxFunctions>
              <funcs>
               <syntax:SyntaxFunction>
                <title>Add functions</title>
                <act>kiev.gui.FuncNewElemOfNull</act>
                <attr>funcs</attr>
               </syntax:SyntaxFunction>
              </funcs>
             </syntax:SyntaxFunctions>
            </funcs>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>'</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>text</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>'</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>fmt:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>kind:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>kind</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxSubAttr>
            <name>funcs</name>
            <empty>
             <syntax:SyntaxPlaceHolder>
              <text>funcs: {}</text>
             </syntax:SyntaxPlaceHolder>
            </empty>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-placeholder'>
      <rnode>
       <core:SymbolRef name='SyntaxPlaceHolder' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>fmt</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>funcs</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxFunctions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxSubAttr>
            <name>text</name>
           </syntax:SyntaxSubAttr>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;placeholder:</text>
            <funcs>
             <syntax:SyntaxFunctions>
              <funcs>
               <syntax:SyntaxFunction>
                <title>Add functions</title>
                <act>kiev.gui.FuncNewElemOfNull</act>
                <attr>funcs</attr>
               </syntax:SyntaxFunction>
              </funcs>
             </syntax:SyntaxFunctions>
            </funcs>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>'</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>text</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>'</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>attr:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxIdentAttr>
            <decl>
             <core:SymbolRef name='ident-template' />
            </decl>
            <name>attr_name</name>
           </syntax:SyntaxIdentAttr>
           <syntax:SyntaxToken>
            <text>fmt:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxSubAttr>
            <name>funcs</name>
            <empty>
             <syntax:SyntaxPlaceHolder>
              <text>funcs: {}</text>
             </syntax:SyntaxPlaceHolder>
            </empty>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-attr'>
      <rnode>
       <core:SymbolRef name='SyntaxSubAttr' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>fmt</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>funcs</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxFunctions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>in_syntax</attr_name>
        <expected_types>
         <core:SymbolRef name='TextSyntax' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>par</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxSubAttr>
            <name>name</name>
            <fmt>
             <core:SymbolRef name='fmt-of-subattr' />
            </fmt>
           </syntax:SyntaxSubAttr>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;attr:</text>
            <funcs>
             <syntax:SyntaxFunctions>
              <funcs>
               <syntax:SyntaxFunction>
                <title>Add functions</title>
                <act>kiev.gui.FuncNewElemOfNull</act>
                <attr>funcs</attr>
               </syntax:SyntaxFunction>
              </funcs>
             </syntax:SyntaxFunctions>
            </funcs>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>"</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>name</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>"</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>fmt:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>in:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>in_syntax</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>empty:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>empty</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxSubAttr>
            <name>funcs</name>
            <empty>
             <syntax:SyntaxPlaceHolder>
              <text>funcs: {}</text>
             </syntax:SyntaxPlaceHolder>
            </empty>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>par:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>par</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxList>
            <element>
             <syntax:SyntaxNode>
              <name></name>
             </syntax:SyntaxNode>
            </element>
            <separator>
             <syntax:SyntaxToken>
              <text>,</text>
             </syntax:SyntaxToken>
            </separator>
            <prefix>
             <syntax:SyntaxToken>
              <text>[</text>
             </syntax:SyntaxToken>
            </prefix>
            <sufix>
             <syntax:SyntaxToken>
              <text>]</text>
             </syntax:SyntaxToken>
            </sufix>
            <name>expected_types</name>
            <par>
             <core:SymbolRef name='par-flow' />
            </par>
           </syntax:SyntaxList>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-ident'>
      <rnode>
       <core:SymbolRef name='SyntaxIdentAttr' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>fmt</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>funcs</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxFunctions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxSubAttr>
            <name>name</name>
            <fmt>
             <core:SymbolRef name='fmt-of-subattr' />
            </fmt>
           </syntax:SyntaxSubAttr>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;ident:</text>
            <funcs>
             <syntax:SyntaxFunctions>
              <funcs>
               <syntax:SyntaxFunction>
                <title>Add functions</title>
                <act>kiev.gui.FuncNewElemOfNull</act>
                <attr>funcs</attr>
               </syntax:SyntaxFunction>
              </funcs>
             </syntax:SyntaxFunctions>
            </funcs>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>"</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>name</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>"</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>as:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxIdentAttr>
            <decl>
             <core:SymbolRef name='ident-template' />
            </decl>
            <name>decl</name>
           </syntax:SyntaxIdentAttr>
           <syntax:SyntaxToken>
            <text>fmt:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxSubAttr>
            <name>funcs</name>
            <empty>
             <syntax:SyntaxPlaceHolder>
              <text>funcs: {}</text>
             </syntax:SyntaxPlaceHolder>
            </empty>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxList>
            <element>
             <syntax:SyntaxNode>
              <name></name>
             </syntax:SyntaxNode>
            </element>
            <separator>
             <syntax:SyntaxToken>
              <text>,</text>
             </syntax:SyntaxToken>
            </separator>
            <prefix>
             <syntax:SyntaxToken>
              <text>[</text>
             </syntax:SyntaxToken>
            </prefix>
            <sufix>
             <syntax:SyntaxToken>
              <text>]</text>
             </syntax:SyntaxToken>
            </sufix>
            <name>expected_types</name>
            <par>
             <core:SymbolRef name='par-flow' />
            </par>
           </syntax:SyntaxList>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-attr-char'>
      <rnode>
       <core:SymbolRef name='SyntaxCharAttr' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>fmt</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>funcs</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxFunctions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>in_syntax</attr_name>
        <expected_types>
         <core:SymbolRef name='TextSyntax' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>par</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxSubAttr>
            <name>name</name>
            <fmt>
             <core:SymbolRef name='fmt-of-subattr' />
            </fmt>
           </syntax:SyntaxSubAttr>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>chr-attr:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>"</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>name</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>"</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>fmt:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>in:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>in_syntax</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-attr-str'>
      <rnode>
       <core:SymbolRef name='SyntaxStrAttr' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>fmt</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>funcs</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxFunctions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>in_syntax</attr_name>
        <expected_types>
         <core:SymbolRef name='TextSyntax' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>par</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxSubAttr>
            <name>name</name>
            <fmt>
             <core:SymbolRef name='fmt-of-subattr' />
            </fmt>
           </syntax:SyntaxSubAttr>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>str-attr:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>"</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>name</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>"</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>fmt:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>in:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>in_syntax</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-attr-xstr'>
      <rnode>
       <core:SymbolRef name='SyntaxXmlStrAttr' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>fmt</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>funcs</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxFunctions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>in_syntax</attr_name>
        <expected_types>
         <core:SymbolRef name='TextSyntax' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>par</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxSubAttr>
            <name>name</name>
            <fmt>
             <core:SymbolRef name='fmt-of-subattr' />
            </fmt>
           </syntax:SyntaxSubAttr>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>xml-str-attr:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>"</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>name</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>"</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>fmt:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>in:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>in_syntax</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='std-def-list-wrapper'>
      <rnode>
       <core:SymbolRef name='SyntaxListWrapper' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>list</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxList' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>empty</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxPlaceHolder' />
         <core:SymbolRef name='SyntaxToken' />
         <core:SymbolRef name='SyntaxSpace' />
         <core:SymbolRef name='SyntaxElemRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>prefix</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxToken' />
         <core:SymbolRef name='SyntaxElemRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>sufix</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxToken' />
         <core:SymbolRef name='SyntaxElemRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <title>SyntaxExpectedTemplate</title>
        <attr_name>expected_types</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>fmt</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>funcs</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxFunctions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>in_syntax</attr_name>
        <expected_types>
         <core:SymbolRef name='TextSyntax' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>par</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>[</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>list</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>]</text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;list-wrapper:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>list</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>emp=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>empty</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>pr=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>prefix</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>su=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>sufix</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>fmt:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>par=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>par</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
          <par>
           <core:SymbolRef name='par-flow' />
          </par>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='std-def-list'>
      <rnode>
       <core:SymbolRef name='SyntaxList' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>element</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxToken' />
         <core:SymbolRef name='SyntaxSet' />
         <core:SymbolRef name='SyntaxSubAttr' />
         <core:SymbolRef name='SyntaxNode' />
         <core:SymbolRef name='SyntaxExpr' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>separator</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxToken' />
         <core:SymbolRef name='SyntaxSpace' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>filter</attr_name>
        <expected_types>
         <core:SymbolRef name='stx-types-CalcOptions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>empty</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxPlaceHolder' />
         <core:SymbolRef name='SyntaxToken' />
         <core:SymbolRef name='SyntaxSpace' />
         <core:SymbolRef name='SyntaxElemRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <title>SyntaxExpectedTemplate</title>
        <attr_name>expected_types</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>fmt</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>funcs</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxFunctions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>in_syntax</attr_name>
        <expected_types>
         <core:SymbolRef name='TextSyntax' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>par</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxSubAttr>
            <name>name</name>
           </syntax:SyntaxSubAttr>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;list:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>name</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>filter=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>filter</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>el=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>element</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>sep=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>separator</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>emp=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>empty</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>pr=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>prefix</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>su=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>sufix</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>fmt:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>par=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>par</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxListWrapper>
            <prefix>
             <syntax:SyntaxToken>
              <text>[</text>
             </syntax:SyntaxToken>
            </prefix>
            <sufix>
             <syntax:SyntaxToken>
              <text>]</text>
             </syntax:SyntaxToken>
            </sufix>
            <list>
             <syntax:SyntaxList>
              <element>
               <syntax:SyntaxNode>
                <name></name>
                <fmt>
                 <core:SymbolRef name='fmt-nl-1++' />
                </fmt>
               </syntax:SyntaxNode>
              </element>
              <separator>
               <syntax:SyntaxToken>
                <text>,</text>
                <fmt>
                 <core:SymbolRef name='fmt-nl-1-+' />
                </fmt>
               </syntax:SyntaxToken>
              </separator>
              <name>expected_types</name>
              <par>
               <core:SymbolRef name='par-indent' />
              </par>
             </syntax:SyntaxList>
            </list>
            <name>expected_types</name>
            <par>
             <core:SymbolRef name='par-flow' />
            </par>
           </syntax:SyntaxListWrapper>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
          <par>
           <core:SymbolRef name='par-flow' />
          </par>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-set'>
      <rnode>
       <core:SymbolRef name='SyntaxSet' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>elements</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxToken' />
         <core:SymbolRef name='SyntaxElemRef' />
         <core:SymbolRef name='SyntaxSubAttr' />
         <core:SymbolRef name='SyntaxIdentAttr' />
         <core:SymbolRef name='SyntaxJavaConstructorName' />
         <core:SymbolRef name='SyntaxAutoParenth' />
         <core:SymbolRef name='SyntaxStrAttr' />
         <core:SymbolRef name='SyntaxXmlStrAttr' />
         <core:SymbolRef name='SyntaxCharAttr' />
         <core:SymbolRef name='SyntaxListWrapper' />
         <core:SymbolRef name='SyntaxList' />
         <core:SymbolRef name='SyntaxSet' />
         <core:SymbolRef name='SyntaxNode' />
         <core:SymbolRef name='SyntaxExpr' />
         <core:SymbolRef name='SyntaxSpace' />
         <core:SymbolRef name='SyntaxOptional' />
         <core:SymbolRef name='SyntaxEnumChoice' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>fmt</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>funcs</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxFunctions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>par</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxListWrapper>
            <prefix>
             <syntax:SyntaxToken>
              <text>{</text>
             </syntax:SyntaxToken>
            </prefix>
            <sufix>
             <syntax:SyntaxToken>
              <text>}</text>
             </syntax:SyntaxToken>
            </sufix>
            <list>
             <syntax:SyntaxList>
              <element>
               <syntax:SyntaxNode>
                <name></name>
               </syntax:SyntaxNode>
              </element>
              <name>elements</name>
              <par>
               <core:SymbolRef name='par-flow' />
              </par>
             </syntax:SyntaxList>
            </list>
            <name>elements</name>
           </syntax:SyntaxListWrapper>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
          <par>
           <core:SymbolRef name='par-flow' />
          </par>
         </syntax:SyntaxSet>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;set:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxListWrapper>
            <prefix>
             <syntax:SyntaxToken>
              <text>{</text>
             </syntax:SyntaxToken>
            </prefix>
            <sufix>
             <syntax:SyntaxToken>
              <text>}</text>
             </syntax:SyntaxToken>
            </sufix>
            <list>
             <syntax:SyntaxList>
              <element>
               <syntax:SyntaxNode>
                <name></name>
               </syntax:SyntaxNode>
              </element>
              <name>elements</name>
              <par>
               <core:SymbolRef name='par-flow' />
              </par>
             </syntax:SyntaxList>
            </list>
            <name>elements</name>
           </syntax:SyntaxListWrapper>
           <syntax:SyntaxToken>
            <text>func_lookup:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>nested_function_lookup</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>fmt:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>par:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>par</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
          <par>
           <core:SymbolRef name='par-flow' />
          </par>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='std-def-tree-branch'>
      <rnode>
       <core:SymbolRef name='SyntaxTreeBranch' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>filter</attr_name>
        <expected_types>
         <core:SymbolRef name='stx-types-CalcOptions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>folded</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxToken' />
         <core:SymbolRef name='SyntaxSet' />
         <core:SymbolRef name='SyntaxSubAttr' />
         <core:SymbolRef name='SyntaxIdentAttr' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>element</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxToken' />
         <core:SymbolRef name='SyntaxSet' />
         <core:SymbolRef name='SyntaxSubAttr' />
         <core:SymbolRef name='SyntaxNode' />
         <core:SymbolRef name='SyntaxExpr' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>fmt</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>funcs</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxFunctions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>par</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxSubAttr>
            <name>name</name>
           </syntax:SyntaxSubAttr>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;tree-branch:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>name</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>filter=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>filter</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>el=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>element</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>fold=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>folded</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>par=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>par</name>
           </syntax:SyntaxSubAttr>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
          <par>
           <core:SymbolRef name='par-flow' />
          </par>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-enum'>
      <rnode>
       <core:SymbolRef name='SyntaxEnumChoice' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>elements</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxToken' />
         <core:SymbolRef name='SyntaxSubAttr' />
         <core:SymbolRef name='SyntaxIdentAttr' />
         <core:SymbolRef name='SyntaxSpace' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>fmt</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>funcs</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxFunctions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>par</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxListWrapper>
            <prefix>
             <syntax:SyntaxToken>
              <text>(</text>
             </syntax:SyntaxToken>
            </prefix>
            <sufix>
             <syntax:SyntaxToken>
              <text>)</text>
             </syntax:SyntaxToken>
            </sufix>
            <list>
             <syntax:SyntaxList>
              <element>
               <syntax:SyntaxNode>
                <name></name>
               </syntax:SyntaxNode>
              </element>
              <separator>
               <syntax:SyntaxToken>
                <text>|</text>
               </syntax:SyntaxToken>
              </separator>
              <name>elements</name>
              <empty>
               <syntax:SyntaxToken>
                <text>&lt;?enums?></text>
               </syntax:SyntaxToken>
              </empty>
             </syntax:SyntaxList>
            </list>
            <name>elements</name>
           </syntax:SyntaxListWrapper>
           <syntax:SyntaxToken>
            <text>)</text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;enum:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>name</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxListWrapper>
            <prefix>
             <syntax:SyntaxToken>
              <text>(</text>
             </syntax:SyntaxToken>
            </prefix>
            <sufix>
             <syntax:SyntaxToken>
              <text>)</text>
             </syntax:SyntaxToken>
            </sufix>
            <list>
             <syntax:SyntaxList>
              <element>
               <syntax:SyntaxNode>
                <name></name>
               </syntax:SyntaxNode>
              </element>
              <separator>
               <syntax:SyntaxToken>
                <text>|</text>
               </syntax:SyntaxToken>
              </separator>
              <name>elements</name>
              <empty>
               <syntax:SyntaxToken>
                <text>&lt;?enums?></text>
               </syntax:SyntaxToken>
              </empty>
             </syntax:SyntaxList>
            </list>
            <name>elements</name>
           </syntax:SyntaxListWrapper>
           <syntax:SyntaxToken>
            <text>fmt:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-node'>
      <rnode>
       <core:SymbolRef name='SyntaxNode' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>fmt</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>funcs</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxFunctions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>par</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>in_syntax</attr_name>
        <expected_types>
         <core:SymbolRef name='TextSyntax' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxToken>
          <text>&lt;node></text>
          <fmt>
           <core:SymbolRef name='fmt-of-kw' />
          </fmt>
         </syntax:SyntaxToken>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>node:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>par:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>par</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>in:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>in_syntax</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-stxref'>
      <rnode>
       <core:SymbolRef name='SyntaxElemRef' />
      </rnode>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxSubAttr>
          <name>text</name>
          <fmt>
           <core:SymbolRef name='fmt-of-stxref' />
          </fmt>
         </syntax:SyntaxSubAttr>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>ref:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxIdentAttr>
            <decl>
             <core:SymbolRef name='ident-template' />
            </decl>
            <name>decl</name>
           </syntax:SyntaxIdentAttr>
           <syntax:SyntaxToken>
            <text>show:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>text</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-space'>
      <rnode>
       <core:SymbolRef name='SyntaxSpace' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>fmt</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>funcs</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxFunctions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>par</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxToken>
          <text>&lt;sp></text>
          <fmt>
           <core:SymbolRef name='fmt-of-kw' />
          </fmt>
         </syntax:SyntaxToken>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>space:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-ident-template'>
      <rnode>
       <core:SymbolRef name='SyntaxIdentTemplate' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>keywords</attr_name>
        <expected_types>
         <core:SymbolRef name='ConstStringExpr' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>def-stx-ident-template</text>
          <fmt>
           <core:SymbolRef name='fmt-of-kw' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>sname</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxStrAttr>
          <name>regexp_ok</name>
         </syntax:SyntaxStrAttr>
         <syntax:SyntaxStrAttr>
          <name>esc_prefix</name>
         </syntax:SyntaxStrAttr>
         <syntax:SyntaxStrAttr>
          <name>esc_suffix</name>
         </syntax:SyntaxStrAttr>
         <syntax:SyntaxToken>
          <text>keywords:</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxListWrapper>
          <prefix>
           <syntax:SyntaxToken>
            <text>{</text>
           </syntax:SyntaxToken>
          </prefix>
          <sufix>
           <syntax:SyntaxToken>
            <text>}</text>
           </syntax:SyntaxToken>
          </sufix>
          <list>
           <syntax:SyntaxList>
            <element>
             <syntax:SyntaxNode>
              <name></name>
             </syntax:SyntaxNode>
            </element>
            <separator>
             <syntax:SyntaxToken>
              <text>,</text>
             </syntax:SyntaxToken>
            </separator>
            <name>keywords</name>
           </syntax:SyntaxList>
          </list>
          <name>keywords</name>
          <par>
           <core:SymbolRef name='par-flow' />
          </par>
         </syntax:SyntaxListWrapper>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-expected-template'>
      <rnode>
       <core:SymbolRef name='SyntaxExpectedTemplate' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <title>SymbolRef</title>
        <attr_name>expected_types</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>def-stx-expected-template</text>
          <fmt>
           <core:SymbolRef name='fmt-of-kw' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>sname</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxStrAttr>
          <name>title</name>
         </syntax:SyntaxStrAttr>
         <syntax:SyntaxListWrapper>
          <prefix>
           <syntax:SyntaxToken>
            <text>attr_types: [</text>
           </syntax:SyntaxToken>
          </prefix>
          <sufix>
           <syntax:SyntaxToken>
            <text>]</text>
           </syntax:SyntaxToken>
          </sufix>
          <list>
           <syntax:SyntaxList>
            <element>
             <syntax:SyntaxNode>
              <name></name>
             </syntax:SyntaxNode>
            </element>
            <separator>
             <syntax:SyntaxToken>
              <text>,</text>
              <fmt>
               <core:SymbolRef name='fmt-nl-1-+' />
              </fmt>
             </syntax:SyntaxToken>
            </separator>
            <name>expected_types</name>
            <par>
             <core:SymbolRef name='par-flow' />
            </par>
           </syntax:SyntaxList>
          </list>
          <name>expected_types</name>
          <empty>
           <syntax:SyntaxPlaceHolder>
            <text>attr_types: []</text>
           </syntax:SyntaxPlaceHolder>
          </empty>
         </syntax:SyntaxListWrapper>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-expected-attr'>
      <rnode>
       <core:SymbolRef name='SyntaxExpectedAttr' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <title>SymbolRef</title>
        <attr_name>expected_types</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>attr_name</name>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxToken>
          <text>&lt;=</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxList>
          <element>
           <syntax:SyntaxNode>
            <name></name>
           </syntax:SyntaxNode>
          </element>
          <separator>
           <syntax:SyntaxToken>
            <text>,</text>
            <fmt>
             <core:SymbolRef name='fmt-nl-1-+' />
            </fmt>
           </syntax:SyntaxToken>
          </separator>
          <prefix>
           <syntax:SyntaxToken>
            <text>{</text>
           </syntax:SyntaxToken>
          </prefix>
          <sufix>
           <syntax:SyntaxToken>
            <text>}</text>
           </syntax:SyntaxToken>
          </sufix>
          <name>expected_types</name>
          <empty>
           <syntax:SyntaxPlaceHolder>
            <text>{}</text>
           </syntax:SyntaxPlaceHolder>
          </empty>
          <par>
           <core:SymbolRef name='par-flow' />
          </par>
         </syntax:SyntaxList>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-java-access'>
      <rnode>
       <core:SymbolRef name='SyntaxJavaAccess' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>fmt</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>funcs</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxFunctions' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
       <syntax:SyntaxExpectedAttr>
        <attr_name>par</attr_name>
        <expected_types>
         <core:SymbolRef name='SymbolRef' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxToken>
          <text>@access</text>
          <fmt>
           <core:SymbolRef name='fmt-of-kw' />
          </fmt>
         </syntax:SyntaxToken>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;@access:</text>
            <funcs>
             <syntax:SyntaxFunctions>
              <funcs>
               <syntax:SyntaxFunction>
                <title>Add functions</title>
                <act>kiev.gui.FuncNewElemOfNull</act>
                <attr>funcs</attr>
               </syntax:SyntaxFunction>
              </funcs>
             </syntax:SyntaxFunctions>
            </funcs>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxSubAttr>
            <name>funcs</name>
            <empty>
             <syntax:SyntaxSpace />
            </empty>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-expr-template'>
      <rnode>
       <core:SymbolRef name='SyntaxExprTemplate' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>def-stx-expr-template</text>
          <fmt>
           <core:SymbolRef name='fmt-of-kw' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>sname</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxSubAttr>
          <name>l_paren</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxSubAttr>
          <name>elem</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxSubAttr>
          <name>bad_op</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxSubAttr>
          <name>r_paren</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxList>
          <element>
           <syntax:SyntaxNode>
            <name></name>
           </syntax:SyntaxNode>
          </element>
          <name>operators</name>
          <empty>
           <syntax:SyntaxToken>
            <text>&lt;?operators?></text>
           </syntax:SyntaxToken>
          </empty>
         </syntax:SyntaxList>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-expr'>
      <rnode>
       <core:SymbolRef name='SyntaxExpr' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxList>
          <element>
           <syntax:SyntaxNode>
            <name></name>
           </syntax:SyntaxNode>
          </element>
          <name>attrs</name>
          <empty>
           <syntax:SyntaxPlaceHolder>
            <text>&lt;attrs></text>
           </syntax:SyntaxPlaceHolder>
          </empty>
         </syntax:SyntaxList>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>template</name>
         </syntax:SyntaxIdentAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-auto-parenth'>
      <rnode>
       <core:SymbolRef name='SyntaxAutoParenth' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>(</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>attr</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxToken>
          <text>//</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>priority</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxToken>
          <text>//</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>template</name>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxToken>
          <text>)</text>
         </syntax:SyntaxToken>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-java-comment-template'>
      <rnode>
       <core:SymbolRef name='SyntaxJavaCommentTemplate' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>def-stx-java-comment-template</text>
          <fmt>
           <core:SymbolRef name='fmt-of-def' />
          </fmt>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>sname</name>
          <fmt>
           <core:SymbolRef name='fmt-of-symbol' />
          </fmt>
         </syntax:SyntaxIdentAttr>
         <syntax:SyntaxSubAttr>
          <name>elem</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxSubAttr>
          <name>newline</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxSubAttr>
          <name>lin_beg</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxSubAttr>
          <name>doc_beg</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxSubAttr>
          <name>cmt_beg</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxSubAttr>
          <name>cmt_end</name>
         </syntax:SyntaxSubAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-java-expr-access'>
      <rnode>
       <core:SymbolRef name='SyntaxJavaAccessExpr' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxSubAttr>
          <name>obj_elem</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxSubAttr>
          <name>separator</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxToken>
          <text>?</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>fld_elem</name>
         </syntax:SyntaxSubAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-java-ctor-name'>
      <rnode>
       <core:SymbolRef name='SyntaxJavaConstructorName' />
      </rnode>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxToken>
          <text>ctor-name</text>
         </syntax:SyntaxToken>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;ctor-name:</text>
            <funcs>
             <syntax:SyntaxFunctions>
              <funcs>
               <syntax:SyntaxFunction>
                <title>Add functions</title>
                <act>kiev.gui.FuncNewElemOfNull</act>
                <attr>funcs</attr>
               </syntax:SyntaxFunction>
              </funcs>
             </syntax:SyntaxFunctions>
            </funcs>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>fmt:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxSubAttr>
            <name>funcs</name>
            <empty>
             <syntax:SyntaxSpace />
            </empty>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-java-comment'>
      <rnode>
       <core:SymbolRef name='SyntaxJavaComment' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>template:</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxIdentAttr>
          <decl>
           <core:SymbolRef name='ident-template' />
          </decl>
          <name>template</name>
         </syntax:SyntaxIdentAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-opt'>
      <rnode>
       <core:SymbolRef name='SyntaxOptional' />
      </rnode>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>?(</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>calculator</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>??</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>opt_true</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxOptional>
            <calculator>
             <syntax:CalcOptionNotNull>
              <name>opt_false</name>
             </syntax:CalcOptionNotNull>
            </calculator>
            <opt_true>
             <syntax:SyntaxSet>
              <elements>
               <syntax:SyntaxToken>
                <text>::</text>
               </syntax:SyntaxToken>
               <syntax:SyntaxSubAttr>
                <name>opt_false</name>
               </syntax:SyntaxSubAttr>
              </elements>
              <nested_function_lookup>false</nested_function_lookup>
             </syntax:SyntaxSet>
            </opt_true>
           </syntax:SyntaxOptional>
           <syntax:SyntaxToken>
            <text>)?</text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>opt:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>?(</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>calculator</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>)?</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>elem_true=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>opt_true</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>elem_false=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>opt_false</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>fmt:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>}</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-def-folder'>
      <rnode>
       <core:SymbolRef name='SyntaxFolder' />
      </rnode>
      <elem>
       <syntax:SyntaxFolder>
        <folded_by_default>true</folded_by_default>
        <folded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>(|</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>folded</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>||</text>
            <fmt>
             <core:SymbolRef name='fmt-nl-1-+' />
            </fmt>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>unfolded</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>|)</text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
          <par>
           <core:SymbolRef name='par-indent' />
          </par>
         </syntax:SyntaxSet>
        </folded>
        <unfolded>
         <syntax:SyntaxSet>
          <elements>
           <syntax:SyntaxToken>
            <text>&lt;folder:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>folded=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>folded</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>unfolded=</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>unfolded</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>fold-by-default:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>folded_by_default</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>fmt:</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxSubAttr>
            <name>fmt</name>
           </syntax:SyntaxSubAttr>
           <syntax:SyntaxToken>
            <text>}</text>
           </syntax:SyntaxToken>
           <syntax:SyntaxToken>
            <text>></text>
           </syntax:SyntaxToken>
          </elements>
          <nested_function_lookup>false</nested_function_lookup>
         </syntax:SyntaxSet>
        </unfolded>
       </syntax:SyntaxFolder>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxExpectedTemplate name='stx-types-CalcOptions'>
      <expected_types>
       <core:SymbolRef name='CalcOptionNot' />
       <core:SymbolRef name='CalcOptionOr' />
       <core:SymbolRef name='CalcOptionAnd' />
       <core:SymbolRef name='CalcOptionNotNull' />
       <core:SymbolRef name='CalcOptionNotEmpty' />
       <core:SymbolRef name='CalcOptionTrue' />
       <core:SymbolRef name='CalcOptionClass' />
       <core:SymbolRef name='CalcOptionHasMeta' />
       <core:SymbolRef name='CalcOptionIncludeInDump' />
       <core:SymbolRef name='CalcOptionHasNoSyntaxParent' />
       <core:SymbolRef name='CalcOptionIsHidden' />
      </expected_types>
      <elem>
       <syntax:SyntaxNode>
        <name></name>
       </syntax:SyntaxNode>
      </elem>
     </syntax:SyntaxExpectedTemplate>
     <syntax:SyntaxElemDecl name='stx-calc-option-hidden'>
      <rnode>
       <core:SymbolRef name='CalcOptionIsHidden' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>hidden</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>name</name>
         </syntax:SyntaxSubAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-calc-option-not'>
      <rnode>
       <core:SymbolRef name='CalcOptionNot' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>not</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>opt</name>
         </syntax:SyntaxSubAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-calc-option-or'>
      <rnode>
       <core:SymbolRef name='CalcOptionOr' />
      </rnode>
      <elem>
       <syntax:SyntaxList>
        <element>
         <syntax:SyntaxNode>
          <name></name>
         </syntax:SyntaxNode>
        </element>
        <separator>
         <syntax:SyntaxToken>
          <text>||</text>
         </syntax:SyntaxToken>
        </separator>
        <prefix>
         <syntax:SyntaxToken>
          <text>(</text>
         </syntax:SyntaxToken>
        </prefix>
        <sufix>
         <syntax:SyntaxToken>
          <text>)</text>
         </syntax:SyntaxToken>
        </sufix>
        <name>opts</name>
       </syntax:SyntaxList>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-calc-option-and'>
      <rnode>
       <core:SymbolRef name='CalcOptionAnd' />
      </rnode>
      <elem>
       <syntax:SyntaxList>
        <element>
         <syntax:SyntaxNode>
          <name></name>
         </syntax:SyntaxNode>
        </element>
        <separator>
         <syntax:SyntaxToken>
          <text>||</text>
         </syntax:SyntaxToken>
        </separator>
        <prefix>
         <syntax:SyntaxToken>
          <text>(</text>
         </syntax:SyntaxToken>
        </prefix>
        <sufix>
         <syntax:SyntaxToken>
          <text>)</text>
         </syntax:SyntaxToken>
        </sufix>
        <name>opts</name>
       </syntax:SyntaxList>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-calc-option-class'>
      <rnode>
       <core:SymbolRef name='CalcOptionClass' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>isA</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>name</name>
         </syntax:SyntaxSubAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-calc-option-api'>
      <rnode>
       <core:SymbolRef name='CalcOptionIncludeInDump' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>api:</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>name</name>
         </syntax:SyntaxSubAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-calc-option-no-syntax-parent'>
      <rnode>
       <core:SymbolRef name='CalcOptionHasNoSyntaxParent' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>no-syntax-parent:</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>name</name>
         </syntax:SyntaxSubAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-calc-option-has-meta-flag'>
      <rnode>
       <core:SymbolRef name='CalcOptionHasMeta' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>has</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>name</name>
         </syntax:SyntaxSubAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-calc-option-has-meta-user'>
      <rnode>
       <core:SymbolRef name='CalcOptionHasMeta' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>has</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxSubAttr>
          <name>name</name>
         </syntax:SyntaxSubAttr>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-calc-option-not-null'>
      <rnode>
       <core:SymbolRef name='CalcOptionNotNull' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxSubAttr>
          <name>name</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxToken>
          <text>!=null</text>
         </syntax:SyntaxToken>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-calc-option-not-empty'>
      <rnode>
       <core:SymbolRef name='CalcOptionNotEmpty' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxSubAttr>
          <name>name</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxToken>
          <text>!= empty</text>
         </syntax:SyntaxToken>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-calc-option-is-true'>
      <rnode>
       <core:SymbolRef name='CalcOptionTrue' />
      </rnode>
      <elem>
       <syntax:SyntaxSubAttr>
        <name>name</name>
       </syntax:SyntaxSubAttr>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-func'>
      <rnode>
       <core:SymbolRef name='SyntaxFunction' />
      </rnode>
      <elem>
       <syntax:SyntaxSet>
        <elements>
         <syntax:SyntaxToken>
          <text>[</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxStrAttr>
          <name>title</name>
          <fmt>
           <core:SymbolRef name='fmt-of-string' />
          </fmt>
         </syntax:SyntaxStrAttr>
         <syntax:SyntaxToken>
          <text>:</text>
         </syntax:SyntaxToken>
         <syntax:SyntaxStrAttr>
          <name>act</name>
         </syntax:SyntaxStrAttr>
         <syntax:SyntaxSubAttr>
          <name>attr</name>
         </syntax:SyntaxSubAttr>
         <syntax:SyntaxToken>
          <text>]</text>
         </syntax:SyntaxToken>
        </elements>
        <nested_function_lookup>false</nested_function_lookup>
        <par>
         <core:SymbolRef name='par-indent' />
        </par>
       </syntax:SyntaxSet>
      </elem>
     </syntax:SyntaxElemDecl>
     <syntax:SyntaxElemDecl name='stx-funcs'>
      <rnode>
       <core:SymbolRef name='SyntaxFunctions' />
      </rnode>
      <attr_types>
       <syntax:SyntaxExpectedAttr>
        <attr_name>funcs</attr_name>
        <expected_types>
         <core:SymbolRef name='SyntaxFunction' />
        </expected_types>
       </syntax:SyntaxExpectedAttr>
      </attr_types>
      <elem>
       <syntax:SyntaxListWrapper>
        <prefix>
         <syntax:SyntaxToken>
          <text>funcs: {</text>
         </syntax:SyntaxToken>
        </prefix>
        <sufix>
         <syntax:SyntaxToken>
          <text>}</text>
         </syntax:SyntaxToken>
        </sufix>
        <list>
         <syntax:SyntaxList>
          <element>
           <syntax:SyntaxNode>
            <name></name>
            <fmt>
             <core:SymbolRef name='fmt-nl-1++' />
            </fmt>
           </syntax:SyntaxNode>
          </element>
          <name>funcs</name>
         </syntax:SyntaxList>
        </list>
        <name>funcs</name>
        <par>
         <core:SymbolRef name='par-flow' />
        </par>
       </syntax:SyntaxListWrapper>
      </elem>
     </syntax:SyntaxElemDecl>
    </members>
   </syntax:TextSyntax>
  </members>
 </core:FileUnit>
</sop:dump>
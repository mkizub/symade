<?xml version='1.0' encoding='UTF-8'?>
<a-node class='kiev.vlang.FileUnit'>
 <pkg>
  <a-node class='kiev.vlang.types.TypeNameRef'>
   <ident>
    <a-node class='kiev.vlang.SymbolRef'>
     <name>stx-fmt</name>
    </a-node>
   </ident>
  </a-node>
 </pkg>
 <members>
  <a-node class='kiev.vlang.Import'>
   <name>
    <a-node class='kiev.vlang.SymbolRef'>
     <name>kiev.vlang</name>
    </a-node>
   </name>
   <mode>IMPORT_CLASS</mode>
   <star>true</star>
  </a-node>
  <a-node class='kiev.vlang.Import'>
   <name>
    <a-node class='kiev.vlang.SymbolRef'>
     <name>kiev.fmt</name>
    </a-node>
   </name>
   <mode>IMPORT_CLASS</mode>
   <star>true</star>
  </a-node>
  <a-node class='kiev.fmt.TextSyntax'>
   <members>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_SPACE</kind>
     <text_size>2</text_size>
     <pixel_size>4</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>sp</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_SPACE</kind>
     <text_size>4</text_size>
     <pixel_size>8</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>space</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>1</text_size>
     <pixel_size>1</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>nl</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>2</text_size>
     <pixel_size>20</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>nl2</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>2</text_size>
     <pixel_size>20</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>nl_import</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>2</text_size>
     <pixel_size>20</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>nl_space</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_NEW_LINE</kind>
     <text_size>2</text_size>
     <pixel_size>20</pixel_size>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>nl_fmt</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.ParagraphLayout'>
     <indent_text_size>4</indent_text_size>
     <indent_pixel_size>20</indent_pixel_size>
     <indent_first_line_text_size>0</indent_first_line_text_size>
     <indent_first_line_pixel_size>0</indent_first_line_pixel_size>
     <indent_from_current_position>false</indent_from_current_position>
     <align_right>false</align_right>
     <align_rest_of_lines_right>false</align_rest_of_lines_right>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>par-syntax-body</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>16711680</rgb_color>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>red</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>255</rgb_color>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>blue</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>65280</rgb_color>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>green</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>0</rgb_color>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>black</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>0</rgb_color>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>default-color</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawFont'>
     <font_name>Dialog-PLAIN-12</font_name>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>default-font</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawFont'>
     <font_name>Dialog-BOLD-12</font_name>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>bold-font</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawFont'>
     <font_name>Dialog-ITALIC-12</font_name>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>italic-font</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.DrawFont'>
     <font_name>Dialog-BOLDITALIC-12</font_name>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>bold-italic-font</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp</name>
        </a-node>
       </si>
       <action_before>SP_NOP</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>bold-font</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-of-def</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>blue</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>bold-font</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-of-symbol</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>black</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>bold-font</name>
      </a-node>
     </font>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>fmt-of-kw</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>FileUnit</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>namespace</text>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-of-def</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>pkg</name>
           <fmt>
            <a-node class='kiev.fmt.RefElemFormat'>
             <decl>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>fmt-of-symbol</name>
              </a-node>
             </decl>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>nl2</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>nl</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text> </text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <folded_by_default>false</folded_by_default>
         <name>members</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Import</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TextSyntax</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>KievTextSyntax</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>TreeSyntax</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-file-unit</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TextSyntax</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>def-syntax</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-def</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>extends</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-kw</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>parent_syntax</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <spaces>
                <a-node class='kiev.fmt.SpaceCmd'>
                 <si>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>nl</name>
                  </a-node>
                 </si>
                 <action_before>SP_ADD</action_before>
                 <action_after>SP_ADD</action_after>
                 <from_attempt>0</from_attempt>
                </a-node>
               </spaces>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text> </text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>members</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TextSyntax</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SpaceInfo</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>DrawColor</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ParagraphLayout</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ParagraphLayoutBlock</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>DrawFont</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxElemDecl</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxElemFormatDecl</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-syntax-body</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>}</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-syntax-decl</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>KievTextSyntax</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>def-syntax-java</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-def</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>extends</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-kw</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>parent_syntax</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <spaces>
                <a-node class='kiev.fmt.SpaceCmd'>
                 <si>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>nl</name>
                  </a-node>
                 </si>
                 <action_before>SP_ADD</action_before>
                 <action_after>SP_ADD</action_after>
                 <from_attempt>0</from_attempt>
                </a-node>
               </spaces>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?members?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>members</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TextSyntax</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SpaceInfo</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ParagraphLayout</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ParagraphLayoutBlock</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxJavaCommentTemplate</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxJavaExprTemplate</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>DrawColor</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>DrawFont</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxElemFormatDecl</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxElemDecl</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-syntax-body</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>}</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-syntax-decl-java</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TreeSyntax</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>def-syntax-tree</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-def</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>extends</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-kw</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>parent_syntax</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>{</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxParagraphLayout'>
         <elem>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <spaces>
                <a-node class='kiev.fmt.SpaceCmd'>
                 <si>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>nl</name>
                  </a-node>
                 </si>
                 <action_before>SP_ADD</action_before>
                 <action_after>SP_ADD</action_after>
                 <from_attempt>0</from_attempt>
                </a-node>
               </spaces>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?members?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>members</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TextSyntax</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SpaceInfo</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ParagraphLayout</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ParagraphLayoutBlock</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxJavaCommentTemplate</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxJavaExprTemplate</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>DrawColor</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>DrawFont</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxElemFormatDecl</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxElemDecl</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elem>
         <par>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>par-syntax-body</name>
          </a-node>
         </par>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>}</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-syntax-decl-tree</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Import</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>import</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-def</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>name</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxOptional'>
         <calculator>
          <a-node class='kiev.fmt.CalcOptionTrue'>
           <name>star</name>
          </a-node>
         </calculator>
         <opt_true>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>.*</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_true>
         <opt_false>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;?all?&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </opt_false>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl_import</name>
            </a-node>
           </si>
           <action_before>SP_EAT</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-import</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SpaceInfo</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>def-space</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-def</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Symbol</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>kind</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>text_size</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>/</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>pixel_size</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl_space</name>
            </a-node>
           </si>
           <action_before>SP_EAT</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-space-info</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ParagraphLayout</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>def-paragraph</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-def</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>indent_text_size</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>/</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>indent_pixel_size</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl_space</name>
            </a-node>
           </si>
           <action_before>SP_EAT</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-paragraph</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>ParagraphLayoutBlock</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>def-paragraph</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-def</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>indent_text_size</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>/</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>indent_pixel_size</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>!=</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>token_text</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl_space</name>
            </a-node>
           </si>
           <action_before>SP_EAT</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-paragraph-block</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>DrawColor</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>def-color</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-def</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Symbol</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>rgb_color</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl_fmt</name>
            </a-node>
           </si>
           <action_before>SP_EAT</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-color</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>DrawFont</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>def-font</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-def</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>&quot;</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>font_name</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>&quot;</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl_fmt</name>
            </a-node>
           </si>
           <action_before>SP_EAT</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-font</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SpaceCmd</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>[</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxEnumChoice'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>·</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>+</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>×</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <name>action_before</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>si</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SymbolRef</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxEnumChoice'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>·</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>+</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>×</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <name>action_after</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>from_attempt</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>]</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-space-cmd</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SymbolRef</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxIdentAttr'>
       <name>name</name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-symbol-ref</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxElemFormatDecl</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>def-format</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-def</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>color:</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>color</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SymbolRef</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>font:</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>font</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SymbolRef</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>spaces:</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>spaces</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SpaceCmd</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl_fmt</name>
            </a-node>
           </si>
           <action_before>SP_EAT</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-format</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SimpleElemFormat</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>&lt;simple-fmt:</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>spaces</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SpaceCmd</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>is_hidden</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_EAT</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>&gt;</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-simple-fmt</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>FullElemFormat</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>&lt;full-fmt:</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>color</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>font</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>spaces</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SpaceCmd</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>is_hidden</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_EAT</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-full-fmt</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RefElemFormat</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>&lt;ref-fmt:</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>decl</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SymbolRef</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>is_hidden</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_EAT</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>&gt;</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-ref-fmt</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxElemDecl</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>def-stx-elem</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-def</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>Symbol</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>node</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SymbolRef</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.FullElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <color>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>default-color</name>
            </a-node>
           </color>
           <font>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>bold-font</name>
            </a-node>
           </font>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>elem</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxToken</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxSubAttr</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxIdentAttr</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxList</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxSet</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxNode</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxStrAttr</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxCharAttr</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxJavaExpr</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxJavaComment</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxJavaAccess</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxSpace</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxFolder</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <spaces>
          <a-node class='kiev.fmt.SpaceCmd'>
           <si>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>nl</name>
            </a-node>
           </si>
           <action_before>SP_NOP</action_before>
           <action_after>SP_ADD</action_after>
           <from_attempt>0</from_attempt>
          </a-node>
         </spaces>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-syntax</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxToken</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxFolder'>
       <folded_by_default>true</folded_by_default>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>text</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </folded>
       <unfolded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>token:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&apos;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>text</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSet</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&apos;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>fmt:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>fmt</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SimpleElemFormat</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>FullElemFormat</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>RefElemFormat</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </unfolded>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-token</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxSubAttr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxFolder'>
       <folded_by_default>true</folded_by_default>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>name</name>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>italic-font</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </folded>
       <unfolded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>attr:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&quot;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>name</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&quot;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>fmt:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>fmt</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SimpleElemFormat</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>FullElemFormat</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>RefElemFormat</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>in:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>in_syntax</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TextSyntax</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>[</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </prefix>
           <sufix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>]</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </sufix>
           <folded_by_default>false</folded_by_default>
           <name>expected_types</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SymbolRef</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </unfolded>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-attr</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxIdentAttr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxFolder'>
       <folded_by_default>true</folded_by_default>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>name</name>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>italic-font</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </folded>
       <unfolded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>ident:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&quot;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>name</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&quot;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>fmt:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>fmt</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SimpleElemFormat</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>FullElemFormat</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>RefElemFormat</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>[</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </prefix>
           <sufix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>]</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </sufix>
           <folded_by_default>false</folded_by_default>
           <name>expected_types</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SymbolRef</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </unfolded>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-ident</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxCharAttr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxFolder'>
       <folded_by_default>true</folded_by_default>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>name</name>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>italic-font</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </folded>
       <unfolded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>chr-attr:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&quot;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>name</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&quot;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>fmt:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>fmt</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SimpleElemFormat</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>FullElemFormat</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>RefElemFormat</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>in:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>in_syntax</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TextSyntax</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </unfolded>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-attr-char</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxStrAttr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxFolder'>
       <folded_by_default>true</folded_by_default>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>name</name>
           <fmt>
            <a-node class='kiev.fmt.FullElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <color>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>black</name>
              </a-node>
             </color>
             <font>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>italic-font</name>
              </a-node>
             </font>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </folded>
       <unfolded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>str-attr:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&quot;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>name</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&quot;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>fmt:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>fmt</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SimpleElemFormat</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>FullElemFormat</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>RefElemFormat</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>in:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>in_syntax</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TextSyntax</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </unfolded>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-attr-str</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxList</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxFolder'>
       <folded_by_default>true</folded_by_default>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>prefix</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>prefix</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <opt_false>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>[</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_false>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>name</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxOptional'>
           <calculator>
            <a-node class='kiev.fmt.CalcOptionNotNull'>
             <name>sufix</name>
            </a-node>
           </calculator>
           <opt_true>
            <a-node class='kiev.fmt.SyntaxSubAttr'>
             <name>sufix</name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_true>
           <opt_false>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>]</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </opt_false>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </folded>
       <unfolded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>list:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>[</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>name</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>]</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>filter=</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>filter</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionNot</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionIsHidden</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionAnd</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionOr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionNotNull</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionNotEmpty</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionTrue</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionClass</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionHasUserMeta</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionHasMetaFlag</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>el=</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>element</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSet</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxParagraphLayout</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSubAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxNode</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxJavaExpr</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>sep=</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>separator</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSpace</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>emp=</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>empty</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>pr=</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_NOP</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>prefix</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>su=</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_NOP</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>sufix</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>fold=</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_NOP</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>folded</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSet</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSubAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxIdentAttr</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>folded_by_default</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <spaces>
                <a-node class='kiev.fmt.SpaceCmd'>
                 <si>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>nl</name>
                  </a-node>
                 </si>
                 <action_before>SP_ADD</action_before>
                 <action_after>SP_ADD</action_after>
                 <from_attempt>1</from_attempt>
                </a-node>
               </spaces>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>,</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <prefix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>[</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </prefix>
           <sufix>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>]</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </sufix>
           <folded_by_default>false</folded_by_default>
           <name>expected_types</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SymbolRef</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </unfolded>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>std-def-list</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxSet</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxFolder'>
       <folded_by_default>true</folded_by_default>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?elements?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>elements</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSubAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxIdentAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxStrAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxCharAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxList</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSet</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxNode</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxJavaExpr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxParagraphLayout</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSpace</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxOptional</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxEnumChoice</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </folded>
       <unfolded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>set:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>{</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <spaces>
                <a-node class='kiev.fmt.SpaceCmd'>
                 <si>
                  <a-node class='kiev.vlang.SymbolRef'>
                   <name>nl</name>
                  </a-node>
                 </si>
                 <action_before>SP_ADD</action_before>
                 <action_after>SP_ADD</action_after>
                 <from_attempt>1</from_attempt>
                </a-node>
               </spaces>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?elements?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>elements</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSubAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxIdentAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxStrAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxCharAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxList</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSet</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxNode</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxJavaExpr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSpace</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxParagraphLayout</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxOptional</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxEnumChoice</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>fold=</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_NOP</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>folded</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSet</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSubAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxIdentAttr</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>folded_by_default</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>fmt:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>fmt</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SimpleElemFormat</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </unfolded>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-set</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxEnumChoice</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxFolder'>
       <folded_by_default>true</folded_by_default>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>|</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?enums?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>true</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>elements</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSubAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxIdentAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSpace</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </folded>
       <unfolded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>enum:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>name</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxList'>
           <element>
            <a-node class='kiev.fmt.SyntaxNode'>
             <name></name>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </element>
           <separator>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>|</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </separator>
           <empty>
            <a-node class='kiev.fmt.SyntaxToken'>
             <text>&lt;?enums?&gt;</text>
             <fmt>
              <a-node class='kiev.fmt.SimpleElemFormat'>
               <is_hidden>false</is_hidden>
              </a-node>
             </fmt>
            </a-node>
           </empty>
           <folded_by_default>false</folded_by_default>
           <name>elements</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSubAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxIdentAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSpace</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>fmt:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>fmt</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SimpleElemFormat</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>FullElemFormat</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>RefElemFormat</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </unfolded>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-enum</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxNode</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxFolder'>
       <folded_by_default>true</folded_by_default>
       <folded>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>&lt;node&gt;</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-kw</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </folded>
       <unfolded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>node:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>fmt</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SimpleElemFormat</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>in:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>in_syntax</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>TextSyntax</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </unfolded>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-node</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxElemRef</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(^</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>decl</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>^)</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-elem-ref</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxSpace</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxFolder'>
       <folded_by_default>true</folded_by_default>
       <folded>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>&lt;sp&gt;</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-kw</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </folded>
       <unfolded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>space:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>fmt</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SimpleElemFormat</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </unfolded>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-space</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxJavaAccess</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxFolder'>
       <folded_by_default>true</folded_by_default>
       <folded>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>@access</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-kw</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </folded>
       <unfolded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>@access:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>fmt</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SimpleElemFormat</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </unfolded>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-java-access</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxJavaExprTemplate</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>def-stx-java-expr-template</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-kw</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>l_paren</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>elem</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>r_paren</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <name></name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </element>
         <empty>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;?operators?&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </empty>
         <folded_by_default>false</folded_by_default>
         <name>operators</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxToken</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-java-expr-template</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxJavaCommentTemplate</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>def-stx-java-comment-template</text>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-def</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>id</name>
         <fmt>
          <a-node class='kiev.fmt.RefElemFormat'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>fmt-of-symbol</name>
            </a-node>
           </decl>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>elem</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxSubAttr</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>newline</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxSpace</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>lin_beg</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxToken</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>doc_beg</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxToken</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>cmt_beg</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxToken</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>cmt_end</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxToken</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-java-comment-template</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxJavaExpr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxFolder'>
       <folded_by_default>true</folded_by_default>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>name</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>//</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>priority</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </folded>
       <unfolded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;expr:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_NOP</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>name</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>//</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>priority</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>templ:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <name>template</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </unfolded>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-java-expr</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxJavaComment</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>template:</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <name>template</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-java-comment</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxOptional</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxFolder'>
       <folded_by_default>true</folded_by_default>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>?(</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>calculator</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionNotNull</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionNotEmpty</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionTrue</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)?</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </folded>
       <unfolded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>opt:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>?(</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>calculator</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionNot</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionIsHidden</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionAnd</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionOr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionNotNull</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionNotEmpty</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionTrue</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionClass</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionHasMetaFlag</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>CalcOptionHasMetaFlag</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)?</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>elem_true=</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>opt_true</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSet</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSubAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxIdentAttr</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxJavaExpr</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>elem_false=</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>opt_false</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSet</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>fmt:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>fmt</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </unfolded>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-opt</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxFolder</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxFolder'>
       <folded_by_default>true</folded_by_default>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(|</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>folded</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSet</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>||</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>unfolded</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSet</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>|)</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </folded>
       <unfolded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&lt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>folded=</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_NOP</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>folded</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSet</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>unfolded=</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>unfolded</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxToken</name>
            </a-node>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SyntaxSet</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>fold-by-default:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>folded_by_default</name>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>fmt:</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <spaces>
              <a-node class='kiev.fmt.SpaceCmd'>
               <si>
                <a-node class='kiev.vlang.SymbolRef'>
                 <name>sp</name>
                </a-node>
               </si>
               <action_before>SP_ADD</action_before>
               <action_after>SP_ADD</action_after>
               <from_attempt>0</from_attempt>
              </a-node>
             </spaces>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxSubAttr'>
           <name>fmt</name>
           <expected_types>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>SimpleElemFormat</name>
            </a-node>
           </expected_types>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>}</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>&gt;</text>
           <fmt>
            <a-node class='kiev.fmt.SimpleElemFormat'>
             <is_hidden>false</is_hidden>
            </a-node>
           </fmt>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </unfolded>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-folder</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>SyntaxParagraphLayout</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>&lt;{</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>elem</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxList</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxSet</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxNode</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>SyntaxSubAttr</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>%%</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>par</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>}&gt;</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-def-in-paragraph</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CalcOptionIsHidden</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>hidden</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>name</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-calc-option-hidden</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CalcOptionNot</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>not</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>opt</name>
         <expected_types>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>CalcOptionIsHidden</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>CalcOptionAnd</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>CalcOptionOr</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>CalcOptionNotNull</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>CalcOptionNotEmpty</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>CalcOptionTrue</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>CalcOptionClass</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>CalcOptionHasUserMeta</name>
          </a-node>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>CalcOptionHasMetaFlag</name>
          </a-node>
         </expected_types>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-calc-option-not</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CalcOptionOr</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
         <name></name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </element>
       <separator>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>||</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </separator>
       <prefix>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </prefix>
       <sufix>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </sufix>
       <folded_by_default>false</folded_by_default>
       <name>opts</name>
       <expected_types>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionNot</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionIsHidden</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionAnd</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionOr</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionNotNull</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionNotEmpty</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionTrue</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionClass</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionHasUserMeta</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionHasMetaFlag</name>
        </a-node>
       </expected_types>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-calc-option-or</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CalcOptionAnd</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
         <name></name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </element>
       <separator>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>||</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_ADD</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </separator>
       <prefix>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>(</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </prefix>
       <sufix>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>)</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </sufix>
       <folded_by_default>false</folded_by_default>
       <name>opts</name>
       <expected_types>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionNot</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionIsHidden</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionAnd</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionOr</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionNotNull</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionNotEmpty</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionTrue</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionClass</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionHasUserMeta</name>
        </a-node>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>CalcOptionHasMetaFlag</name>
        </a-node>
       </expected_types>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-calc-option-and</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CalcOptionClass</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>isA</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>name</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-calc-option-class</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CalcOptionHasMetaFlag</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>hasF</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>name</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-calc-option-has-meta-flag</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CalcOptionHasUserMeta</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>hasU</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <spaces>
            <a-node class='kiev.fmt.SpaceCmd'>
             <si>
              <a-node class='kiev.vlang.SymbolRef'>
               <name>sp</name>
              </a-node>
             </si>
             <action_before>SP_NOP</action_before>
             <action_after>SP_ADD</action_after>
             <from_attempt>0</from_attempt>
            </a-node>
           </spaces>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>name</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-calc-option-has-meta-user</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CalcOptionNotNull</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>name</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>!=null</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-calc-option-not-null</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CalcOptionNotEmpty</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>name</name>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>!= empty</text>
         <fmt>
          <a-node class='kiev.fmt.SimpleElemFormat'>
           <is_hidden>false</is_hidden>
          </a-node>
         </fmt>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-calc-option-not-empty</sname>
      </a-node>
     </id>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <node>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>CalcOptionTrue</name>
      </a-node>
     </node>
     <elem>
      <a-node class='kiev.fmt.SyntaxSubAttr'>
       <name>name</name>
       <fmt>
        <a-node class='kiev.fmt.SimpleElemFormat'>
         <is_hidden>false</is_hidden>
        </a-node>
       </fmt>
      </a-node>
     </elem>
     <meta>
      <a-node class='kiev.vlang.MetaSet'>
      </a-node>
     </meta>
     <id>
      <a-node class='kiev.vlang.Symbol'>
       <sname>stx-calc-option-is-true</sname>
      </a-node>
     </id>
    </a-node>
   </members>
   <meta>
    <a-node class='kiev.vlang.MetaSet'>
    </a-node>
   </meta>
   <id>
    <a-node class='kiev.vlang.Symbol'>
     <sname>syntax-for-syntax</sname>
    </a-node>
   </id>
  </a-node>
 </members>
 <meta>
  <a-node class='kiev.vlang.MetaSet'>
  </a-node>
 </meta>
 <id>
  <a-node class='kiev.vlang.Symbol'>
   <sname>stx-fmt\syntax-for-syntax.xml</sname>
  </a-node>
 </id>
</a-node>
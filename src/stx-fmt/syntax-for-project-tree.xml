<?xml version='1.1' encoding='UTF-8' standalone='yes'?>
<!--
 Copyright (c) 2005-2007 UAB "MAKSINETA".
 All rights reserved. This program and the accompanying materials
 are made available under the terms of the Common Public License Version 1.0
 which accompanies this distribution, and is available at
 http://www.eclipse.org/legal/cpl-v10.html
 
 Contributors:
     "Maxim Kizub" mkizub@symade.com - initial design and implementation
-->
<a-node class='kiev.vlang.FileUnit'>
 <srpkg>
  <a-node class='kiev.vlang.SymbolRef'>
   <name>stx-fmt</name>
  </a-node>
 </srpkg>
 <members>
  <a-node class='kiev.vlang.Import'>
   <name>
    <a-node class='kiev.vlang.SymbolRef'>
     <name>kiev&#31;vlang</name>
     <qualified>true</qualified>
    </a-node>
   </name>
   <mode>IMPORT_CLASS</mode>
   <star>true</star>
   <of_method>false</of_method>
  </a-node>
  <a-node class='kiev.vlang.Import'>
   <name>
    <a-node class='kiev.vlang.SymbolRef'>
     <name>kiev&#31;vlang&#31;types</name>
     <qualified>true</qualified>
    </a-node>
   </name>
   <mode>IMPORT_CLASS</mode>
   <star>true</star>
   <of_method>false</of_method>
  </a-node>
  <a-node class='kiev.vlang.Import'>
   <name>
    <a-node class='kiev.vlang.SymbolRef'>
     <name>kiev&#31;parser</name>
     <qualified>true</qualified>
    </a-node>
   </name>
   <mode>IMPORT_CLASS</mode>
   <star>true</star>
   <of_method>false</of_method>
  </a-node>
  <a-node class='kiev.vlang.Import'>
   <name>
    <a-node class='kiev.vlang.SymbolRef'>
     <name>kiev&#31;fmt</name>
     <qualified>true</qualified>
    </a-node>
   </name>
   <mode>IMPORT_CLASS</mode>
   <star>true</star>
   <of_method>false</of_method>
  </a-node>
  <a-node class='kiev.fmt.TreeSyntax'>
   <members>
    <a-node class='kiev.fmt.SpaceInfo'>
     <kind>SP_SPACE</kind>
     <text_size>2</text_size>
     <pixel_size>4</pixel_size>
     <sname>sp</sname>
    </a-node>
    <a-node class='kiev.fmt.DrawColor'>
     <rgb_color>0</rgb_color>
     <sname>color-default</sname>
    </a-node>
    <a-node class='kiev.fmt.DrawFont'>
     <font_name>Dialog-PLAIN-12</font_name>
     <sname>font-default</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemFormatDecl'>
     <spaces>
      <a-node class='kiev.fmt.SpaceCmd'>
       <si>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>sp</name>
        </a-node>
       </si>
       <action_before>SP_ADD</action_before>
       <action_after>SP_ADD</action_after>
       <from_attempt>0</from_attempt>
      </a-node>
     </spaces>
     <color>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>color-default</name>
      </a-node>
     </color>
     <font>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>font-default</name>
      </a-node>
     </font>
     <sname>fmt-default</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxIdentTemplate'>
     <regexp_ok>.*</regexp_ok>
     <elem>
      <a-node class='kiev.fmt.SyntaxNode'>
      </a-node>
     </elem>
     <sname>ident-template</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxExprTemplate'>
     <l_paren>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>(</text>
      </a-node>
     </l_paren>
     <bad_op>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>â—™</text>
       <kind>OPERATOR</kind>
      </a-node>
     </bad_op>
     <r_paren>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>)</text>
      </a-node>
     </r_paren>
     <operators>
      <a-node class='kiev.fmt.SyntaxToken'>
       <text>DEFAULT</text>
      </a-node>
     </operators>
     <elem>
      <a-node class='kiev.fmt.SyntaxNode'>
      </a-node>
     </elem>
     <sname>type-expr-template</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Env</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <folded>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>Project</text>
        </a-node>
       </folded>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
        </a-node>
       </element>
       <folded_by_default>true</folded_by_default>
       <name>files</name>
      </a-node>
     </elem>
     <sname>stx-env</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>DirUnit</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>name</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>/</text>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </folded>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
        </a-node>
       </element>
       <folded_by_default>true</folded_by_default>
       <name>members</name>
      </a-node>
     </elem>
     <sname>stx-dir</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>FileUnit</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>fname</name>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </folded>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
        </a-node>
       </element>
       <filter>
        <a-node class='kiev.fmt.CalcOptionClass'>
         <name>kiev.vlang.DNode</name>
        </a-node>
       </filter>
       <folded_by_default>true</folded_by_default>
       <name>members</name>
      </a-node>
     </elem>
     <sname>stx-file</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>JavaEnum</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>Enum: </text>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>sname</name>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </folded>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
        </a-node>
       </element>
       <filter>
        <a-node class='kiev.fmt.CalcOptionNot'>
         <opt>
          <a-node class='kiev.fmt.CalcOptionHasMeta'>
           <name>kiev&#31;stdlib&#31;meta&#31;synthetic</name>
          </a-node>
         </opt>
        </a-node>
       </filter>
       <folded_by_default>true</folded_by_default>
       <name>members</name>
      </a-node>
     </elem>
     <sname>stx-struct-enum</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>PizzaCase</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>case: </text>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>sname</name>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </folded>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
        </a-node>
       </element>
       <filter>
        <a-node class='kiev.fmt.CalcOptionNot'>
         <opt>
          <a-node class='kiev.fmt.CalcOptionHasMeta'>
           <name>kiev&#31;stdlib&#31;meta&#31;synthetic</name>
          </a-node>
         </opt>
        </a-node>
       </filter>
       <folded_by_default>true</folded_by_default>
       <name>members</name>
      </a-node>
     </elem>
     <sname>stx-struct-case</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>KievSyntax</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>syntax: </text>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>sname</name>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </folded>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
        </a-node>
       </element>
       <filter>
        <a-node class='kiev.fmt.CalcOptionNot'>
         <opt>
          <a-node class='kiev.fmt.CalcOptionHasMeta'>
           <name>kiev&#31;stdlib&#31;meta&#31;synthetic</name>
          </a-node>
         </opt>
        </a-node>
       </filter>
       <folded_by_default>true</folded_by_default>
       <name>members</name>
      </a-node>
     </elem>
     <sname>stx-struct-syntax</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>KievView</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>View: </text>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>sname</name>
          </a-node>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text> of </text>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>view_of</name>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </folded>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
        </a-node>
       </element>
       <filter>
        <a-node class='kiev.fmt.CalcOptionNot'>
         <opt>
          <a-node class='kiev.fmt.CalcOptionHasMeta'>
           <name>kiev&#31;stdlib&#31;meta&#31;synthetic</name>
          </a-node>
         </opt>
        </a-node>
       </filter>
       <folded_by_default>true</folded_by_default>
       <name>members</name>
      </a-node>
     </elem>
     <sname>stx-struct-view</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>JavaAnnotation</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>Annot: </text>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>sname</name>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </folded>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
        </a-node>
       </element>
       <filter>
        <a-node class='kiev.fmt.CalcOptionNot'>
         <opt>
          <a-node class='kiev.fmt.CalcOptionHasMeta'>
           <name>kiev&#31;stdlib&#31;meta&#31;synthetic</name>
          </a-node>
         </opt>
        </a-node>
       </filter>
       <folded_by_default>true</folded_by_default>
       <name>members</name>
      </a-node>
     </elem>
     <sname>stx-struct-annotation</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>JavaInterface</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>Iface: </text>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>sname</name>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </folded>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
        </a-node>
       </element>
       <filter>
        <a-node class='kiev.fmt.CalcOptionNot'>
         <opt>
          <a-node class='kiev.fmt.CalcOptionHasMeta'>
           <name>kiev&#31;stdlib&#31;meta&#31;synthetic</name>
          </a-node>
         </opt>
        </a-node>
       </filter>
       <folded_by_default>true</folded_by_default>
       <name>members</name>
      </a-node>
     </elem>
     <sname>stx-struct-interface</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>JavaClass</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>Class: </text>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>sname</name>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </folded>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
        </a-node>
       </element>
       <filter>
        <a-node class='kiev.fmt.CalcOptionNot'>
         <opt>
          <a-node class='kiev.fmt.CalcOptionHasMeta'>
           <name>kiev&#31;stdlib&#31;meta&#31;synthetic</name>
          </a-node>
         </opt>
        </a-node>
       </filter>
       <folded_by_default>true</folded_by_default>
       <name>members</name>
      </a-node>
     </elem>
     <sname>stx-struct-class</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MetaTypeDecl</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxList'>
       <folded>
        <a-node class='kiev.fmt.SyntaxSet'>
         <elements>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>TypeDecl: </text>
          </a-node>
          <a-node class='kiev.fmt.SyntaxIdentAttr'>
           <decl>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>ident-template</name>
            </a-node>
           </decl>
           <name>sname</name>
          </a-node>
         </elements>
         <folded_by_default>false</folded_by_default>
        </a-node>
       </folded>
       <element>
        <a-node class='kiev.fmt.SyntaxNode'>
        </a-node>
       </element>
       <filter>
        <a-node class='kiev.fmt.CalcOptionNot'>
         <opt>
          <a-node class='kiev.fmt.CalcOptionHasMeta'>
           <name>kiev&#31;stdlib&#31;meta&#31;synthetic</name>
          </a-node>
         </opt>
        </a-node>
       </filter>
       <folded_by_default>true</folded_by_default>
       <name>members</name>
      </a-node>
     </elem>
     <sname>stx-metatype</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Field</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>fld: </text>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text> : </text>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>vtype</name>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-field</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>Constructor</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>ctor: </text>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-form-par</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)</text>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>params</name>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-ctor</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>MethodImpl</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>meth: </text>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-form-par</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)-&gt;</text>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>params</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>type_ret</name>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-method</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>RuleMethod</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>rule: </text>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
        </a-node>
        <a-node class='kiev.fmt.SyntaxList'>
         <element>
          <a-node class='kiev.fmt.SyntaxNode'>
           <in_syntax>
            <a-node class='kiev.vlang.SymbolRef'>
             <name>syntax-form-par</name>
            </a-node>
           </in_syntax>
          </a-node>
         </element>
         <separator>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>,</text>
          </a-node>
         </separator>
         <prefix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>(</text>
          </a-node>
         </prefix>
         <sufix>
          <a-node class='kiev.fmt.SyntaxToken'>
           <text>)-&gt;rule</text>
          </a-node>
         </sufix>
         <folded_by_default>false</folded_by_default>
         <name>params</name>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-rule</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeConstr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>type: </text>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-type-constr</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeAssign</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxSet'>
       <elements>
        <a-node class='kiev.fmt.SyntaxToken'>
         <text>type: </text>
        </a-node>
        <a-node class='kiev.fmt.SyntaxIdentAttr'>
         <decl>
          <a-node class='kiev.vlang.SymbolRef'>
           <name>ident-template</name>
          </a-node>
         </decl>
         <name>sname</name>
        </a-node>
       </elements>
       <folded_by_default>false</folded_by_default>
      </a-node>
     </elem>
     <sname>stx-type-assign</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeRef</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxIdentAttr'>
       <decl>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>ident-template</name>
        </a-node>
       </decl>
       <name>ident</name>
      </a-node>
     </elem>
     <sname>stx-type-ref</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeNameRef</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxIdentAttr'>
       <decl>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>ident-template</name>
        </a-node>
       </decl>
       <name>ident</name>
      </a-node>
     </elem>
     <sname>stx-type-nam</sname>
    </a-node>
    <a-node class='kiev.fmt.SyntaxElemDecl'>
     <rnode>
      <a-node class='kiev.vlang.SymbolRef'>
       <name>TypeExpr</name>
      </a-node>
     </rnode>
     <elem>
      <a-node class='kiev.fmt.SyntaxExpr'>
       <attrs>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>arg</name>
        </a-node>
       </attrs>
       <template>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>type-expr-template</name>
        </a-node>
       </template>
      </a-node>
     </elem>
     <sname>stx-type-expr</sname>
    </a-node>
    <a-node class='kiev.fmt.TextSyntax'>
     <members>
      <a-node class='kiev.fmt.SyntaxElemDecl'>
       <rnode>
        <a-node class='kiev.vlang.SymbolRef'>
         <name>LVar</name>
        </a-node>
       </rnode>
       <elem>
        <a-node class='kiev.fmt.SyntaxSubAttr'>
         <name>vtype</name>
        </a-node>
       </elem>
       <sname>stx-form-par</sname>
      </a-node>
     </members>
     <sname>syntax-form-par</sname>
    </a-node>
   </members>
   <sname>syntax-for-project-tree</sname>
  </a-node>
 </members>
</a-node>
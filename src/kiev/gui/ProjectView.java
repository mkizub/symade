package kiev.gui;

import java.awt.event.MouseEvent;

import kiev.fmt.*;
import kiev.gui.swing.Canvas;
import kiev.gui.swing.Window;

public class ProjectView extends InfoView {
	
	private DrawTerm cur_dr;

	public ProjectView(Window window, Draw_ATextSyntax syntax, Canvas view_canvas) {
		super(window, syntax, view_canvas);
	}
	
	public void formatAndPaint(boolean full) {
		view_canvas.current = cur_dr;
		if (cur_dr != null)
			view_canvas.current_node = cur_dr.get$drnode();
		if (full) {
			formatter.setWidth(view_canvas.imgWidth);
			formatter.setShowAutoGenerated(show_auto_generated);
			formatter.setShowPlaceholders(show_placeholders);
			formatter.setHintEscapes(show_hint_escapes);
			view_canvas.setDlb_root(null);
			if (the_root != null && full) {
				formatter.format(the_root, view_root, getSyntax());
				view_root = formatter.getRootDrawable();
				view_canvas.setDlb_root(formatter.getRootDrawLayoutBlock());
			}
		}
		view_canvas.repaint();
	}

	public void mouseClicked(MouseEvent e) {
		view_canvas.requestFocus();
		int x = e.getX();
		int y = e.getY() + view_canvas.translated_y;
		DrawTerm dr_vis = view_canvas.first_visible;
		GfxDrawTermFormatInfo dr = dr_vis == null ? null : dr_vis.getGxfFmtInfo();
		for (; dr != null; dr = dr.getNext()) {
			int w = dr.width;
			int h = dr.height;
			if (dr.x < x && dr.y < y && dr.x+w >= x && dr.y+h >= y) {
				break;
			}
			if (dr.dterm == view_canvas.last_visible)
				return;
		}
		if (dr == null)
			return;
		e.consume();
		cur_dr = dr.dterm;
		if (e.getClickCount() >= 2) {
			if (cur_dr.parent() instanceof DrawTreeBranch) {
				DrawTreeBranch dtb = (DrawTreeBranch)cur_dr.parent();
				dtb.setDrawFolded(!dtb.getDrawFolded());
				formatAndPaint(true);
				return;
			}
			else if (cur_dr.parent() instanceof DrawNonTermSet && cur_dr.parent().parent() instanceof DrawTreeBranch) {
				DrawTreeBranch dtb = (DrawTreeBranch)cur_dr.parent().parent();
				dtb.setDrawFolded(!dtb.getDrawFolded());
				formatAndPaint(true);
				return;
			}
		}
		formatAndPaint(false);
	}
	
}

/* Generated By:JJTree: Do not edit this line. ASTModifiers.java */

package kiev.parser;

import kiev.Kiev;
import kiev.stdlib.*;
import kiev.vlang.*;

/**
 * @author Maxim Kizub
 *
 */

@node
public final class ASTModifiers extends ASTNode {
	     public int							modifier;
	@att public Access 						acc;
	@att public final NArr<Meta>			annotations;
	
	public ASTModifiers() { super(new NodeImpl()); }
	
	public int getFlags() {
		return modifier;
	}

	public MetaSet getMetas(MetaSet ms) {
		foreach (Meta v; annotations) {
			try {
				v.verify();
			} catch (CompilerException e) {
				Kiev.reportError(this, e);
			}
		}
		foreach (Meta v; annotations) {
			ms.set((Meta)v.copy());
		}
		return ms;
	}

    public Dumper toJava(Dumper dmp) {
		foreach (Meta m; annotations)
			dmp.append(m);
		Env.toJavaModifiers(dmp,(short)modifier);
		if( (modifier & ACC_VIRTUAL		) > 0 ) dmp.append("/*virtual*/ ");
		if( (modifier & ACC_FORWARD		) > 0 ) dmp.append("/*forward*/ ");
		
		if (acc != null) dmp.append(acc.toString());
		
		return dmp;
    }
}


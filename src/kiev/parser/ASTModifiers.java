/* Generated By:JJTree: Do not edit this line. ASTModifiers.java */

package kiev.parser;

import kiev.Kiev;
import kiev.stdlib.*;
import kiev.vlang.*;

/**
 * @author Maxim Kizub
 *
 */

@node
public class ASTModifiers extends ASTNode {
	@att public final NArr<ASTModifier>	modifier;
	@att public Access 						acc;
	@att public final NArr<Meta>			annotations;
	
	public int getFlags() {
		int flags = 0;
		foreach (ASTModifier m; modifier)
			flags |= m.flag();
		return flags;
	}

	public MetaSet getMetas(MetaSet ms) {
	next_annotation:
		foreach (Meta v; annotations) {
			try {
				v = v.verify();
			} catch (CompilerException e) {
				Kiev.reportError(pos, e);
				continue;
			}
			v = (Meta)v.copy();
			ms.set(v);
		}
		return ms;
	}

    public Dumper toJava(Dumper dmp) {
		for(int i=0; i < modifier.length; i++)
			modifier[i].toJava(dmp);
		return dmp;
    }
}


/* Generated By:JJTree: Do not edit this line. ASTModifiers.java */

package kiev.parser;

import kiev.Kiev;
import kiev.stdlib.*;
import kiev.vlang.*;
import kiev.vlang.types.*;

import syntax kiev.Syntax;

/**
 * @author Maxim Kizub
 *
 */

@node
public final class ASTModifiers extends ASTNode {
	
	@virtual typedef This  = ASTModifiers;

	@ref public ANode[]				annotations;

	public ASTModifiers() {}
	
	public UserMeta add(UserMeta m)
		alias lfy operator +=
	{
		this.annotations += m;
		return m;
	}
	public MetaFlag add(MetaFlag m)
		alias lfy operator +=
	{
		this.annotations += m;
		return m;
	}
	
	public void moveToNode(DNode dn) {
		ANode[] annotations = this.annotations.delToArray();
		foreach (UserMeta m; annotations)
			dn.meta.setU(m);
		foreach (MetaFlag m; annotations)
			dn.meta.setF(m);
	}
	public void copyToNode(DNode dn) {
		ANode[] annotations = this.annotations;
		foreach (UserMeta m; annotations)
			dn.meta.setU(m.ncopy());
		foreach (MetaFlag m; annotations)
			dn.meta.setF(m.ncopy());
	}
}


/* Generated By:JJTree: Do not edit this line. ASTAnnotationValue.java */

package kiev.parser;

import kiev.Kiev;
import kiev.stdlib.*;
import kiev.vlang.*;

/**
 * @author Maxim Kizub
 *
 */

@node
public class ASTAnnotationValue extends SimpleNode {

	public static ASTAnnotationValue[] emptyArray = new ASTAnnotationValue[0];

	public ASTIdentifier name;
	public ASTNode       value;
	
	public ASTAnnotationValue(int id) {
		super(0);
	}

	public void jjtAddChild(ASTNode n, int i) {
		if (n instanceof ASTIdentifier) {
			name = (ASTIdentifier)n;
			this.pos = name.pos;
		}
		else if (n instanceof ASTAnnotation) {
			value = n;
			if (this.pos == 0) this.pos = n.pos;
		}
		else if (n instanceof ASTAnnotationValueValueArrayInitializer) {
			value = n;
			if (this.pos == 0) this.pos = n.pos;
		}
		else if (n instanceof ASTExpression) {
			value = n;
			if (this.pos == 0) this.pos = n.pos;
		}
		else {
			throw new CompilerException(n.getPos(),"Bad child number "+i+": "+n);
		}
	}

}

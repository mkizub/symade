/* Generated By:JJTree: Do not edit this line. ASTGotoStatement.java */

/*
 Copyright (C) 1997-1998, Forestro, http://forestro.com

 This file is part of the Kiev compiler.
 
 The Kiev compiler is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public License as
 published by the Free Software Foundation.

 The Kiev compiler is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with the Kiev compiler; see the file License.  If not, write to
 the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 Boston, MA 02111-1307, USA.
*/
  
package kiev.parser;

import kiev.Kiev;
import kiev.Kiev.Ext;
import kiev.stdlib.*;
import kiev.vlang.*;

import syntax kiev.Syntax;

@node
@cfnode
public class ASTGotoStatement extends Statement {
	@att ASTNode	expr;
	boolean casemode = false;
    
	public ASTNode resolve(Type reqType) {
		if( !casemode ) {
			Kiev.check(pos,Ext.Goto);
			GotoStat st = new GotoStat(pos,parent,((ASTIdentifier)expr).name);
			this.replaceWith(st);
			st.resolve(Type.tpVoid);
			return null;
		} else {
			Kiev.check(pos,Ext.GotoCase);
			GotoCaseStat st = new GotoCaseStat(pos,parent,(Expr)expr);
			this.replaceWith(st);
			st.resolve(Type.tpVoid);
			return null;
		}
	}

	public Dumper toJava(Dumper dmp) {
		if( !casemode)
			dmp.append("goto").space().append(expr);
		else {
			if( expr == null )
				dmp.space().append("default");
			else
				dmp.space().append("case").space().append(expr);
		}
		return dmp.append(';');
	}
}
